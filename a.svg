<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="821.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="821.00"> </text><svg id="frames" x="10" width="1180" total_samples="656"><g><title>deno`deno_core::bindings::set_func_raw (1 samples, 0.15%)</title><rect x="0.0000%" y="693" width="0.1524%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>deno`v8::FunctionTemplate::GetFunction(v8::Local (1 samples, 0.15%)</title><rect x="0.0000%" y="677" width="0.1524%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>deno`v8::internal::ApiNatives::InstantiateFunction(v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::MaybeHandle (1 samples, 0.15%)</title><rect x="0.0000%" y="661" width="0.1524%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::InstantiateFunction(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::NativeContext&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::MaybeHandle (1 samples, 0.15%)</title><rect x="0.0000%" y="645" width="0.1524%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>deno`v8::internal::ApiNatives::CreateApiFunction(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::NativeContext&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::InstanceType, v8::internal::MaybeHandle (1 samples, 0.15%)</title><rect x="0.0000%" y="629" width="0.1524%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>deno`v8::internal::JSObject::AddProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="0.0000%" y="613" width="0.1524%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>deno`v8::internal::Object::TransitionAndWriteDataProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyAttributes, v8::Maybe (1 samples, 0.15%)</title><rect x="0.0000%" y="597" width="0.1524%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>deno`v8::internal::LookupIterator::ApplyTransitionToDataProperty(v8::internal::Handle (1 samples, 0.15%)</title><rect x="0.0000%" y="581" width="0.1524%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>deno`v8::internal::JSObject::MigrateToMap(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="0.0000%" y="565" width="0.1524%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>deno`deno_core::runtime::JsRuntime::new (2 samples, 0.30%)</title><rect x="0.0000%" y="725" width="0.3049%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="2"/><text x="0.2500%" y="735.50"></text></g><g><title>deno`deno_core::bindings::initialize_context (2 samples, 0.30%)</title><rect x="0.0000%" y="709" width="0.3049%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="2"/><text x="0.2500%" y="719.50"></text></g><g><title>deno`v8::NewContext(v8::Isolate*, v8::ExtensionConfiguration*, v8::MaybeLocal&lt;v8::ObjectTemplate&gt;, v8::MaybeLocal (1 samples, 0.15%)</title><rect x="0.1524%" y="693" width="0.1524%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.4024%" y="703.50"></text></g><g><title>deno`v8::internal::Bootstrapper::CreateEnvironment(v8::internal::MaybeHandle&lt;v8::internal::JSGlobalProxy&gt;, v8::Local (1 samples, 0.15%)</title><rect x="0.1524%" y="677" width="0.1524%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.4024%" y="687.50"></text></g><g><title>deno`v8::internal::Genesis::InstallSpecialObjects(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="0.1524%" y="661" width="0.1524%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.4024%" y="671.50"></text></g><g><title>deno`v8::internal::JSFunction::SetPrototype(v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="0.1524%" y="645" width="0.1524%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.4024%" y="655.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.15%)</title><rect x="0.3049%" y="661" width="0.1524%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="0.5549%" y="671.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="0.4573%" y="581" width="0.1524%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.7073%" y="591.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="0.4573%" y="565" width="0.1524%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.7073%" y="575.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="0.4573%" y="549" width="0.1524%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="0.7073%" y="559.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="0.4573%" y="533" width="0.1524%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="0.7073%" y="543.50"></text></g><g><title>deno`Builtins_ArrayPrototypeSort (1 samples, 0.15%)</title><rect x="0.4573%" y="517" width="0.1524%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="0.7073%" y="527.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.76%)</title><rect x="0.0000%" y="773" width="0.7622%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="783.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.76%)</title><rect x="0.0000%" y="757" width="0.7622%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="5"/><text x="0.2500%" y="767.50"></text></g><g><title>deno`deno_runtime::worker::MainWorker::bootstrap_from_options (5 samples, 0.76%)</title><rect x="0.0000%" y="741" width="0.7622%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="751.50"></text></g><g><title>deno`deno_runtime::worker::MainWorker::execute_script (3 samples, 0.46%)</title><rect x="0.3049%" y="725" width="0.4573%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="3"/><text x="0.5549%" y="735.50"></text></g><g><title>deno`deno_core::runtime::JsRuntime::execute_script (3 samples, 0.46%)</title><rect x="0.3049%" y="709" width="0.4573%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="3"/><text x="0.5549%" y="719.50"></text></g><g><title>deno`deno_core::runtime::JsRealm::execute_script (3 samples, 0.46%)</title><rect x="0.3049%" y="693" width="0.4573%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="3"/><text x="0.5549%" y="703.50"></text></g><g><title>deno`v8::Script::Run(v8::Local&lt;v8::Context&gt;, v8::Local (3 samples, 0.46%)</title><rect x="0.3049%" y="677" width="0.4573%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="3"/><text x="0.5549%" y="687.50"></text></g><g><title>deno`v8::internal::Execution::CallScript(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (2 samples, 0.30%)</title><rect x="0.4573%" y="661" width="0.3049%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="2"/><text x="0.7073%" y="671.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (2 samples, 0.30%)</title><rect x="0.4573%" y="645" width="0.3049%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="2"/><text x="0.7073%" y="655.50"></text></g><g><title>deno`Builtins_JSEntry (2 samples, 0.30%)</title><rect x="0.4573%" y="629" width="0.3049%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="2"/><text x="0.7073%" y="639.50"></text></g><g><title>deno`Builtins_JSEntryTrampoline (2 samples, 0.30%)</title><rect x="0.4573%" y="613" width="0.3049%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="2"/><text x="0.7073%" y="623.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (2 samples, 0.30%)</title><rect x="0.4573%" y="597" width="0.3049%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="2"/><text x="0.7073%" y="607.50"></text></g><g><title>deno`Builtins_ObjectDefineProperties (1 samples, 0.15%)</title><rect x="0.6098%" y="581" width="0.1524%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="1"/><text x="0.8598%" y="591.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.15%)</title><rect x="0.7622%" y="677" width="0.1524%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="1"/><text x="1.0122%" y="687.50"></text></g><g><title>deno`deno::proc_state::ProcState::prepare_module_load::_{{closure}} (1 samples, 0.15%)</title><rect x="0.7622%" y="661" width="0.1524%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="1"/><text x="1.0122%" y="671.50"></text></g><g><title>deno`deno::cache::parsed_source::ParsedSourceCache::as_analyzer (1 samples, 0.15%)</title><rect x="0.7622%" y="645" width="0.1524%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="1"/><text x="1.0122%" y="655.50"></text></g><g><title>deno`rusqlite::Connection::execute_batch (1 samples, 0.15%)</title><rect x="0.7622%" y="629" width="0.1524%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="1"/><text x="1.0122%" y="639.50"></text></g><g><title>deno`rusqlite::inner_connection::InnerConnection::prepare (1 samples, 0.15%)</title><rect x="0.7622%" y="613" width="0.1524%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="1"/><text x="1.0122%" y="623.50"></text></g><g><title>deno`sqlite3LockAndPrepare (1 samples, 0.15%)</title><rect x="0.7622%" y="597" width="0.1524%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="1"/><text x="1.0122%" y="607.50"></text></g><g><title>deno`sqlite3Prepare (1 samples, 0.15%)</title><rect x="0.7622%" y="581" width="0.1524%" height="15" fill="rgb(231,60,39)" fg:x="5" fg:w="1"/><text x="1.0122%" y="591.50"></text></g><g><title>deno`sqlite3RunParser (1 samples, 0.15%)</title><rect x="0.7622%" y="565" width="0.1524%" height="15" fill="rgb(208,69,12)" fg:x="5" fg:w="1"/><text x="1.0122%" y="575.50"></text></g><g><title>deno`yy_reduce (1 samples, 0.15%)</title><rect x="0.7622%" y="549" width="0.1524%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="1"/><text x="1.0122%" y="559.50"></text></g><g><title>deno`sqlite3Pragma (1 samples, 0.15%)</title><rect x="0.7622%" y="533" width="0.1524%" height="15" fill="rgb(213,116,39)" fg:x="5" fg:w="1"/><text x="1.0122%" y="543.50"></text></g><g><title>deno`sqlite3InitOne (1 samples, 0.15%)</title><rect x="0.7622%" y="517" width="0.1524%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="1"/><text x="1.0122%" y="527.50"></text></g><g><title>deno`sqlite3_exec (1 samples, 0.15%)</title><rect x="0.7622%" y="501" width="0.1524%" height="15" fill="rgb(206,96,30)" fg:x="5" fg:w="1"/><text x="1.0122%" y="511.50"></text></g><g><title>deno`sqlite3LockAndPrepare (1 samples, 0.15%)</title><rect x="0.7622%" y="485" width="0.1524%" height="15" fill="rgb(218,138,4)" fg:x="5" fg:w="1"/><text x="1.0122%" y="495.50"></text></g><g><title>deno`sqlite3Prepare (1 samples, 0.15%)</title><rect x="0.7622%" y="469" width="0.1524%" height="15" fill="rgb(250,191,14)" fg:x="5" fg:w="1"/><text x="1.0122%" y="479.50"></text></g><g><title>deno`sqlite3RunParser (1 samples, 0.15%)</title><rect x="0.7622%" y="453" width="0.1524%" height="15" fill="rgb(239,60,40)" fg:x="5" fg:w="1"/><text x="1.0122%" y="463.50"></text></g><g><title>deno`yy_reduce (1 samples, 0.15%)</title><rect x="0.7622%" y="437" width="0.1524%" height="15" fill="rgb(206,27,48)" fg:x="5" fg:w="1"/><text x="1.0122%" y="447.50"></text></g><g><title>deno`sqlite3Select (1 samples, 0.15%)</title><rect x="0.7622%" y="421" width="0.1524%" height="15" fill="rgb(225,35,8)" fg:x="5" fg:w="1"/><text x="1.0122%" y="431.50"></text></g><g><title>deno`sqlite3WhereBegin (1 samples, 0.15%)</title><rect x="0.7622%" y="405" width="0.1524%" height="15" fill="rgb(250,213,24)" fg:x="5" fg:w="1"/><text x="1.0122%" y="415.50"></text></g><g><title>deno`sqlite3WhereCodeOneLoopStart (1 samples, 0.15%)</title><rect x="0.7622%" y="389" width="0.1524%" height="15" fill="rgb(247,123,22)" fg:x="5" fg:w="1"/><text x="1.0122%" y="399.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.30%)</title><rect x="0.7622%" y="725" width="0.3049%" height="15" fill="rgb(231,138,38)" fg:x="5" fg:w="2"/><text x="1.0122%" y="735.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.30%)</title><rect x="0.7622%" y="709" width="0.3049%" height="15" fill="rgb(231,145,46)" fg:x="5" fg:w="2"/><text x="1.0122%" y="719.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.30%)</title><rect x="0.7622%" y="693" width="0.3049%" height="15" fill="rgb(251,118,11)" fg:x="5" fg:w="2"/><text x="1.0122%" y="703.50"></text></g><g><title>deno`deno_core::runtime::JsRuntime::mod_evaluate (1 samples, 0.15%)</title><rect x="0.9146%" y="677" width="0.1524%" height="15" fill="rgb(217,147,25)" fg:x="6" fg:w="1"/><text x="1.1646%" y="687.50"></text></g><g><title>deno`v8::Module::Evaluate(v8::Local (1 samples, 0.15%)</title><rect x="0.9146%" y="661" width="0.1524%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="1"/><text x="1.1646%" y="671.50"></text></g><g><title>deno`v8::internal::Module::Evaluate(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="0.9146%" y="645" width="0.1524%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="1"/><text x="1.1646%" y="655.50"></text></g><g><title>deno`v8::internal::SourceTextModule::Evaluate(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="0.9146%" y="629" width="0.1524%" height="15" fill="rgb(227,1,9)" fg:x="6" fg:w="1"/><text x="1.1646%" y="639.50"></text></g><g><title>deno`v8::internal::SourceTextModule::InnerModuleEvaluation(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::SourceTextModule&gt;, v8::internal::ZoneForwardList&lt;v8::internal::Handle (1 samples, 0.15%)</title><rect x="0.9146%" y="613" width="0.1524%" height="15" fill="rgb(248,47,43)" fg:x="6" fg:w="1"/><text x="1.1646%" y="623.50"></text></g><g><title>deno`v8::internal::SourceTextModule::ExecuteModule(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="0.9146%" y="597" width="0.1524%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="1"/><text x="1.1646%" y="607.50"></text></g><g><title>deno`v8::internal::Execution::TryCall(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle&lt;v8::internal::Object&gt;*, v8::internal::Execution::MessageHandling, v8::internal::MaybeHandle (1 samples, 0.15%)</title><rect x="0.9146%" y="581" width="0.1524%" height="15" fill="rgb(210,229,1)" fg:x="6" fg:w="1"/><text x="1.1646%" y="591.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal:: (1 samples, 0.15%)</title><rect x="0.9146%" y="565" width="0.1524%" height="15" fill="rgb(222,148,37)" fg:x="6" fg:w="1"/><text x="1.1646%" y="575.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.15%)</title><rect x="0.9146%" y="549" width="0.1524%" height="15" fill="rgb(234,67,33)" fg:x="6" fg:w="1"/><text x="1.1646%" y="559.50"></text></g><g><title>deno`Builtins_JSEntry (1 samples, 0.15%)</title><rect x="0.9146%" y="533" width="0.1524%" height="15" fill="rgb(247,98,35)" fg:x="6" fg:w="1"/><text x="1.1646%" y="543.50"></text></g><g><title>deno`Builtins_JSEntryTrampoline (1 samples, 0.15%)</title><rect x="0.9146%" y="517" width="0.1524%" height="15" fill="rgb(247,138,52)" fg:x="6" fg:w="1"/><text x="1.1646%" y="527.50"></text></g><g><title>deno`Builtins_GeneratorPrototypeNext (1 samples, 0.15%)</title><rect x="0.9146%" y="501" width="0.1524%" height="15" fill="rgb(213,79,30)" fg:x="6" fg:w="1"/><text x="1.1646%" y="511.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="0.9146%" y="485" width="0.1524%" height="15" fill="rgb(246,177,23)" fg:x="6" fg:w="1"/><text x="1.1646%" y="495.50"></text></g><g><title>deno`Builtins_ConstructHandler (1 samples, 0.15%)</title><rect x="0.9146%" y="469" width="0.1524%" height="15" fill="rgb(230,62,27)" fg:x="6" fg:w="1"/><text x="1.1646%" y="479.50"></text></g><g><title>deno`construct_stub_create_deopt_addr (1 samples, 0.15%)</title><rect x="0.9146%" y="453" width="0.1524%" height="15" fill="rgb(216,154,8)" fg:x="6" fg:w="1"/><text x="1.1646%" y="463.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="0.9146%" y="437" width="0.1524%" height="15" fill="rgb(244,35,45)" fg:x="6" fg:w="1"/><text x="1.1646%" y="447.50"></text></g><g><title>deno`Builtins_LdaSmiExtraWideHandler (1 samples, 0.15%)</title><rect x="0.9146%" y="421" width="0.1524%" height="15" fill="rgb(251,115,12)" fg:x="6" fg:w="1"/><text x="1.1646%" y="431.50"></text></g><g><title>deno`deno_core::bindings::initialize_context (1 samples, 0.15%)</title><rect x="1.0671%" y="693" width="0.1524%" height="15" fill="rgb(240,54,50)" fg:x="7" fg:w="1"/><text x="1.3171%" y="703.50"></text></g><g><title>deno`v8::NewContext(v8::Isolate*, v8::ExtensionConfiguration*, v8::MaybeLocal&lt;v8::ObjectTemplate&gt;, v8::MaybeLocal (1 samples, 0.15%)</title><rect x="1.0671%" y="677" width="0.1524%" height="15" fill="rgb(233,84,52)" fg:x="7" fg:w="1"/><text x="1.3171%" y="687.50"></text></g><g><title>deno`v8::internal::Bootstrapper::CreateEnvironment(v8::internal::MaybeHandle&lt;v8::internal::JSGlobalProxy&gt;, v8::Local (1 samples, 0.15%)</title><rect x="1.0671%" y="661" width="0.1524%" height="15" fill="rgb(207,117,47)" fg:x="7" fg:w="1"/><text x="1.3171%" y="671.50"></text></g><g><title>deno`v8::internal::Genesis::Genesis(v8::internal::Isolate*, v8::internal::MaybeHandle&lt;v8::internal::JSGlobalProxy&gt;, v8::Local (1 samples, 0.15%)</title><rect x="1.0671%" y="645" width="0.1524%" height="15" fill="rgb(249,43,39)" fg:x="7" fg:w="1"/><text x="1.3171%" y="655.50"></text></g><g><title>deno`v8::internal::Snapshot::NewContextFromSnapshot(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="1.0671%" y="629" width="0.1524%" height="15" fill="rgb(209,38,44)" fg:x="7" fg:w="1"/><text x="1.3171%" y="639.50"></text></g><g><title>deno`v8::internal::ContextDeserializer::DeserializeContext(v8::internal::Isolate*, v8::internal::SnapshotData const*, bool, v8::internal::Handle (1 samples, 0.15%)</title><rect x="1.0671%" y="613" width="0.1524%" height="15" fill="rgb(236,212,23)" fg:x="7" fg:w="1"/><text x="1.3171%" y="623.50"></text></g><g><title>deno`v8::internal::ContextDeserializer::Deserialize(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="1.0671%" y="597" width="0.1524%" height="15" fill="rgb(242,79,21)" fg:x="7" fg:w="1"/><text x="1.3171%" y="607.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="581" width="0.1524%" height="15" fill="rgb(211,96,35)" fg:x="7" fg:w="1"/><text x="1.3171%" y="591.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (1 samples, 0.15%)</title><rect x="1.0671%" y="565" width="0.1524%" height="15" fill="rgb(253,215,40)" fg:x="7" fg:w="1"/><text x="1.3171%" y="575.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="549" width="0.1524%" height="15" fill="rgb(211,81,21)" fg:x="7" fg:w="1"/><text x="1.3171%" y="559.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="533" width="0.1524%" height="15" fill="rgb(208,190,38)" fg:x="7" fg:w="1"/><text x="1.3171%" y="543.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="517" width="0.1524%" height="15" fill="rgb(235,213,38)" fg:x="7" fg:w="1"/><text x="1.3171%" y="527.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (1 samples, 0.15%)</title><rect x="1.0671%" y="501" width="0.1524%" height="15" fill="rgb(237,122,38)" fg:x="7" fg:w="1"/><text x="1.3171%" y="511.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="485" width="0.1524%" height="15" fill="rgb(244,218,35)" fg:x="7" fg:w="1"/><text x="1.3171%" y="495.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="469" width="0.1524%" height="15" fill="rgb(240,68,47)" fg:x="7" fg:w="1"/><text x="1.3171%" y="479.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="453" width="0.1524%" height="15" fill="rgb(210,16,53)" fg:x="7" fg:w="1"/><text x="1.3171%" y="463.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (1 samples, 0.15%)</title><rect x="1.0671%" y="437" width="0.1524%" height="15" fill="rgb(235,124,12)" fg:x="7" fg:w="1"/><text x="1.3171%" y="447.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="421" width="0.1524%" height="15" fill="rgb(224,169,11)" fg:x="7" fg:w="1"/><text x="1.3171%" y="431.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="405" width="0.1524%" height="15" fill="rgb(250,166,2)" fg:x="7" fg:w="1"/><text x="1.3171%" y="415.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="389" width="0.1524%" height="15" fill="rgb(242,216,29)" fg:x="7" fg:w="1"/><text x="1.3171%" y="399.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (1 samples, 0.15%)</title><rect x="1.0671%" y="373" width="0.1524%" height="15" fill="rgb(230,116,27)" fg:x="7" fg:w="1"/><text x="1.3171%" y="383.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="357" width="0.1524%" height="15" fill="rgb(228,99,48)" fg:x="7" fg:w="1"/><text x="1.3171%" y="367.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="341" width="0.1524%" height="15" fill="rgb(253,11,6)" fg:x="7" fg:w="1"/><text x="1.3171%" y="351.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="325" width="0.1524%" height="15" fill="rgb(247,143,39)" fg:x="7" fg:w="1"/><text x="1.3171%" y="335.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="309" width="0.1524%" height="15" fill="rgb(236,97,10)" fg:x="7" fg:w="1"/><text x="1.3171%" y="319.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="293" width="0.1524%" height="15" fill="rgb(233,208,19)" fg:x="7" fg:w="1"/><text x="1.3171%" y="303.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="277" width="0.1524%" height="15" fill="rgb(216,164,2)" fg:x="7" fg:w="1"/><text x="1.3171%" y="287.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="261" width="0.1524%" height="15" fill="rgb(220,129,5)" fg:x="7" fg:w="1"/><text x="1.3171%" y="271.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="245" width="0.1524%" height="15" fill="rgb(242,17,10)" fg:x="7" fg:w="1"/><text x="1.3171%" y="255.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="229" width="0.1524%" height="15" fill="rgb(242,107,0)" fg:x="7" fg:w="1"/><text x="1.3171%" y="239.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="213" width="0.1524%" height="15" fill="rgb(251,28,31)" fg:x="7" fg:w="1"/><text x="1.3171%" y="223.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="197" width="0.1524%" height="15" fill="rgb(233,223,10)" fg:x="7" fg:w="1"/><text x="1.3171%" y="207.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="181" width="0.1524%" height="15" fill="rgb(215,21,27)" fg:x="7" fg:w="1"/><text x="1.3171%" y="191.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="165" width="0.1524%" height="15" fill="rgb(232,23,21)" fg:x="7" fg:w="1"/><text x="1.3171%" y="175.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="149" width="0.1524%" height="15" fill="rgb(244,5,23)" fg:x="7" fg:w="1"/><text x="1.3171%" y="159.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="133" width="0.1524%" height="15" fill="rgb(226,81,46)" fg:x="7" fg:w="1"/><text x="1.3171%" y="143.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="117" width="0.1524%" height="15" fill="rgb(247,70,30)" fg:x="7" fg:w="1"/><text x="1.3171%" y="127.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="101" width="0.1524%" height="15" fill="rgb(212,68,19)" fg:x="7" fg:w="1"/><text x="1.3171%" y="111.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="85" width="0.1524%" height="15" fill="rgb(240,187,13)" fg:x="7" fg:w="1"/><text x="1.3171%" y="95.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.0671%" y="69" width="0.1524%" height="15" fill="rgb(223,113,26)" fg:x="7" fg:w="1"/><text x="1.3171%" y="79.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="53" width="0.1524%" height="15" fill="rgb(206,192,2)" fg:x="7" fg:w="1"/><text x="1.3171%" y="63.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.0671%" y="37" width="0.1524%" height="15" fill="rgb(241,108,4)" fg:x="7" fg:w="1"/><text x="1.3171%" y="47.50"></text></g><g><title>deno`deno::main::_{{closure}} (4 samples, 0.61%)</title><rect x="0.7622%" y="773" width="0.6098%" height="15" fill="rgb(247,173,49)" fg:x="5" fg:w="4"/><text x="1.0122%" y="783.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.61%)</title><rect x="0.7622%" y="757" width="0.6098%" height="15" fill="rgb(224,114,35)" fg:x="5" fg:w="4"/><text x="1.0122%" y="767.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.61%)</title><rect x="0.7622%" y="741" width="0.6098%" height="15" fill="rgb(245,159,27)" fg:x="5" fg:w="4"/><text x="1.0122%" y="751.50"></text></g><g><title>deno`deno_runtime::worker::MainWorker::bootstrap_from_options (2 samples, 0.30%)</title><rect x="1.0671%" y="725" width="0.3049%" height="15" fill="rgb(245,172,44)" fg:x="7" fg:w="2"/><text x="1.3171%" y="735.50"></text></g><g><title>deno`deno_core::runtime::JsRuntime::new (2 samples, 0.30%)</title><rect x="1.0671%" y="709" width="0.3049%" height="15" fill="rgb(236,23,11)" fg:x="7" fg:w="2"/><text x="1.3171%" y="719.50"></text></g><g><title>deno`v8::Isolate::New (1 samples, 0.15%)</title><rect x="1.2195%" y="693" width="0.1524%" height="15" fill="rgb(205,117,38)" fg:x="8" fg:w="1"/><text x="1.4695%" y="703.50"></text></g><g><title>deno`v8::Isolate::Initialize (1 samples, 0.15%)</title><rect x="1.2195%" y="677" width="0.1524%" height="15" fill="rgb(237,72,25)" fg:x="8" fg:w="1"/><text x="1.4695%" y="687.50"></text></g><g><title>deno`v8::internal::Snapshot::Initialize (1 samples, 0.15%)</title><rect x="1.2195%" y="661" width="0.1524%" height="15" fill="rgb(244,70,9)" fg:x="8" fg:w="1"/><text x="1.4695%" y="671.50"></text></g><g><title>deno`v8::internal::Isolate::InitWithSnapshot (1 samples, 0.15%)</title><rect x="1.2195%" y="645" width="0.1524%" height="15" fill="rgb(217,125,39)" fg:x="8" fg:w="1"/><text x="1.4695%" y="655.50"></text></g><g><title>deno`v8::internal::Isolate::Init (1 samples, 0.15%)</title><rect x="1.2195%" y="629" width="0.1524%" height="15" fill="rgb(235,36,10)" fg:x="8" fg:w="1"/><text x="1.4695%" y="639.50"></text></g><g><title>deno`v8::internal::StartupDeserializer::DeserializeIntoIsolate (1 samples, 0.15%)</title><rect x="1.2195%" y="613" width="0.1524%" height="15" fill="rgb(251,123,47)" fg:x="8" fg:w="1"/><text x="1.4695%" y="623.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::IterateObjectCache(v8::internal::Isolate*, std::__1::vector&lt;v8::internal::Object, std::__1::allocator (1 samples, 0.15%)</title><rect x="1.2195%" y="597" width="0.1524%" height="15" fill="rgb(221,13,13)" fg:x="8" fg:w="1"/><text x="1.4695%" y="607.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::VisitRootPointers (1 samples, 0.15%)</title><rect x="1.2195%" y="581" width="0.1524%" height="15" fill="rgb(238,131,9)" fg:x="8" fg:w="1"/><text x="1.4695%" y="591.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForRootSlots&gt; (1 samples, 0.15%)</title><rect x="1.2195%" y="565" width="0.1524%" height="15" fill="rgb(211,50,8)" fg:x="8" fg:w="1"/><text x="1.4695%" y="575.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.2195%" y="549" width="0.1524%" height="15" fill="rgb(245,182,24)" fg:x="8" fg:w="1"/><text x="1.4695%" y="559.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.2195%" y="533" width="0.1524%" height="15" fill="rgb(242,14,37)" fg:x="8" fg:w="1"/><text x="1.4695%" y="543.50"></text></g><g><title>deno`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (1 samples, 0.15%)</title><rect x="1.2195%" y="517" width="0.1524%" height="15" fill="rgb(246,228,12)" fg:x="8" fg:w="1"/><text x="1.4695%" y="527.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (1 samples, 0.15%)</title><rect x="1.2195%" y="501" width="0.1524%" height="15" fill="rgb(213,55,15)" fg:x="8" fg:w="1"/><text x="1.4695%" y="511.50"></text></g><g><title>deno`int v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (1 samples, 0.15%)</title><rect x="1.2195%" y="485" width="0.1524%" height="15" fill="rgb(209,9,3)" fg:x="8" fg:w="1"/><text x="1.4695%" y="495.50"></text></g><g><title>deno`main (1 samples, 0.15%)</title><rect x="1.3720%" y="773" width="0.1524%" height="15" fill="rgb(230,59,30)" fg:x="9" fg:w="1"/><text x="1.6220%" y="783.50"></text></g><g><title>deno`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="1.9817%" y="613" width="0.1524%" height="15" fill="rgb(209,121,21)" fg:x="13" fg:w="1"/><text x="2.2317%" y="623.50"></text></g><g><title>deno`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.15%)</title><rect x="2.1341%" y="613" width="0.1524%" height="15" fill="rgb(220,109,13)" fg:x="14" fg:w="1"/><text x="2.3841%" y="623.50"></text></g><g><title>deno`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.15%)</title><rect x="2.2866%" y="613" width="0.1524%" height="15" fill="rgb(232,18,1)" fg:x="15" fg:w="1"/><text x="2.5366%" y="623.50"></text></g><g><title>deno`core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;deno_core::runtime::JsRuntimeState&gt;&gt;&gt; (1 samples, 0.15%)</title><rect x="2.4390%" y="613" width="0.1524%" height="15" fill="rgb(215,41,42)" fg:x="16" fg:w="1"/><text x="2.6890%" y="623.50"></text></g><g><title>deno`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.15%)</title><rect x="4.8780%" y="581" width="0.1524%" height="15" fill="rgb(224,123,36)" fg:x="32" fg:w="1"/><text x="5.1280%" y="591.50"></text></g><g><title>deno`v8::internal::BaseNameDictionary&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::Add(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::NameDictionary&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="5.0305%" y="549" width="0.1524%" height="15" fill="rgb(240,125,3)" fg:x="33" fg:w="1"/><text x="5.2805%" y="559.50"></text></g><g><title>deno`v8::internal::Handle&lt;v8::internal::NameDictionary&gt; v8::internal::HashTable&lt;v8::internal::NameDictionary, v8::internal::NameDictionaryShape&gt;::EnsureCapacity&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="5.0305%" y="533" width="0.1524%" height="15" fill="rgb(205,98,50)" fg:x="33" fg:w="1"/><text x="5.2805%" y="543.50"></text></g><g><title>deno`v8::internal::DescriptorArray::GeneralizeAllFields (1 samples, 0.15%)</title><rect x="5.1829%" y="517" width="0.1524%" height="15" fill="rgb(205,185,37)" fg:x="34" fg:w="1"/><text x="5.4329%" y="527.50"></text></g><g><title>deno`v8::internal::DescriptorArray::GeneralizeAllFields (1 samples, 0.15%)</title><rect x="5.4878%" y="501" width="0.1524%" height="15" fill="rgb(238,207,15)" fg:x="36" fg:w="1"/><text x="5.7378%" y="511.50"></text></g><g><title>deno`v8::internal::Factory::NewMap (1 samples, 0.15%)</title><rect x="5.6402%" y="501" width="0.1524%" height="15" fill="rgb(213,199,42)" fg:x="37" fg:w="1"/><text x="5.8902%" y="511.50"></text></g><g><title>deno`v8::internal::JSObject::OptimizeAsPrototype(v8::internal::Handle (2 samples, 0.30%)</title><rect x="6.0976%" y="485" width="0.3049%" height="15" fill="rgb(235,201,11)" fg:x="40" fg:w="2"/><text x="6.3476%" y="495.50"></text></g><g><title>deno`v8::internal::Map::CopyReplaceDescriptors(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::DescriptorArray&gt;, v8::internal::TransitionFlag, v8::internal::MaybeHandle (9 samples, 1.37%)</title><rect x="5.3354%" y="517" width="1.3720%" height="15" fill="rgb(207,46,11)" fg:x="35" fg:w="9"/><text x="5.5854%" y="527.50"></text></g><g><title>deno`v8::internal::Map::RawCopy(v8::internal::Isolate*, v8::internal::Handle (6 samples, 0.91%)</title><rect x="5.7927%" y="501" width="0.9146%" height="15" fill="rgb(241,35,35)" fg:x="38" fg:w="6"/><text x="6.0427%" y="511.50"></text></g><g><title>deno`v8::internal::Map::SetPrototype(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle (2 samples, 0.30%)</title><rect x="6.4024%" y="485" width="0.3049%" height="15" fill="rgb(243,32,47)" fg:x="42" fg:w="2"/><text x="6.6524%" y="495.50"></text></g><g><title>deno`v8::internal::Map::RawCopy(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="6.7073%" y="517" width="0.1524%" height="15" fill="rgb(247,202,23)" fg:x="44" fg:w="1"/><text x="6.9573%" y="527.50"></text></g><g><title>deno`v8::internal::Map::SetPrototype(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="6.8598%" y="517" width="0.1524%" height="15" fill="rgb(219,102,11)" fg:x="45" fg:w="1"/><text x="7.1098%" y="527.50"></text></g><g><title>deno`v8::Object::New(v8::Isolate*, v8::Local&lt;v8::Value&gt;, v8::Local&lt;v8::Name&gt;*, v8::Local (14 samples, 2.13%)</title><rect x="5.0305%" y="565" width="2.1341%" height="15" fill="rgb(243,110,44)" fg:x="33" fg:w="14"/><text x="5.2805%" y="575.50">d..</text></g><g><title>deno`v8::internal::Factory::NewSlowJSObjectWithPropertiesAndElements(v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle (13 samples, 1.98%)</title><rect x="5.1829%" y="549" width="1.9817%" height="15" fill="rgb(222,74,54)" fg:x="34" fg:w="13"/><text x="5.4329%" y="559.50">d..</text></g><g><title>deno`v8::internal::Map::TransitionToPrototype(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle (13 samples, 1.98%)</title><rect x="5.1829%" y="533" width="1.9817%" height="15" fill="rgb(216,99,12)" fg:x="34" fg:w="13"/><text x="5.4329%" y="543.50">d..</text></g><g><title>deno`v8::internal::TransitionsAccessor::GetPrototypeTransition(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="7.0122%" y="517" width="0.1524%" height="15" fill="rgb(226,22,26)" fg:x="46" fg:w="1"/><text x="7.2622%" y="527.50"></text></g><g><title>deno`v8::internal::TransitionsAccessor::GetPrototypeTransitions(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="7.0122%" y="501" width="0.1524%" height="15" fill="rgb(217,163,10)" fg:x="46" fg:w="1"/><text x="7.2622%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.15%)</title><rect x="7.1646%" y="565" width="0.1524%" height="15" fill="rgb(213,25,53)" fg:x="47" fg:w="1"/><text x="7.4146%" y="575.50"></text></g><g><title>deno`&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::end (16 samples, 2.44%)</title><rect x="5.0305%" y="581" width="2.4390%" height="15" fill="rgb(252,105,26)" fg:x="33" fg:w="16"/><text x="5.2805%" y="591.50">de..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.15%)</title><rect x="7.3171%" y="565" width="0.1524%" height="15" fill="rgb(220,39,43)" fg:x="48" fg:w="1"/><text x="7.5671%" y="575.50"></text></g><g><title>deno`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.30%)</title><rect x="7.4695%" y="565" width="0.3049%" height="15" fill="rgb(229,68,48)" fg:x="49" fg:w="2"/><text x="7.7195%" y="575.50"></text></g><g><title>deno`v8::String::NewFromUtf8 (2 samples, 0.30%)</title><rect x="7.4695%" y="549" width="0.3049%" height="15" fill="rgb(252,8,32)" fg:x="49" fg:w="2"/><text x="7.7195%" y="559.50"></text></g><g><title>deno`v8::internal::Factory::NewStringFromUtf8(v8::base::Vector (1 samples, 0.15%)</title><rect x="7.6220%" y="533" width="0.1524%" height="15" fill="rgb(223,20,43)" fg:x="50" fg:w="1"/><text x="7.8720%" y="543.50"></text></g><g><title>deno`v8::internal::Utf8DecoderBase&lt;v8::internal::Utf8Decoder&gt;::Utf8DecoderBase(v8::base::Vector (1 samples, 0.15%)</title><rect x="7.6220%" y="517" width="0.1524%" height="15" fill="rgb(229,81,49)" fg:x="50" fg:w="1"/><text x="7.8720%" y="527.50"></text></g><g><title>deno`unsigned int v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (3 samples, 0.46%)</title><rect x="7.9268%" y="517" width="0.4573%" height="15" fill="rgb(236,28,36)" fg:x="52" fg:w="3"/><text x="8.1768%" y="527.50"></text></g><g><title>deno`bool v8::internal::String::IsEqualTo&lt;(v8::internal::String::EqualityType)2, unsigned char&gt;(v8::base::Vector (2 samples, 0.30%)</title><rect x="8.6890%" y="469" width="0.3049%" height="15" fill="rgb(249,185,26)" fg:x="57" fg:w="2"/><text x="8.9390%" y="479.50"></text></g><g><title>deno`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::StringTable::LookupKey&lt;v8::internal::SequentialStringKey&lt;unsigned char&gt;, v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (5 samples, 0.76%)</title><rect x="8.3841%" y="501" width="0.7622%" height="15" fill="rgb(249,174,33)" fg:x="55" fg:w="5"/><text x="8.6341%" y="511.50"></text></g><g><title>deno`v8::internal::InternalIndex v8::internal::StringTable::Data::FindEntry&lt;v8::internal::Isolate, v8::internal::SequentialStringKey&lt;unsigned char&gt; &gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (3 samples, 0.46%)</title><rect x="8.6890%" y="485" width="0.4573%" height="15" fill="rgb(233,201,37)" fg:x="57" fg:w="3"/><text x="8.9390%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.15%)</title><rect x="8.9939%" y="469" width="0.1524%" height="15" fill="rgb(221,78,26)" fg:x="59" fg:w="1"/><text x="9.2439%" y="479.50"></text></g><g><title>deno`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::InternalizeString(v8::base::Vector (6 samples, 0.91%)</title><rect x="8.3841%" y="517" width="0.9146%" height="15" fill="rgb(250,127,30)" fg:x="55" fg:w="6"/><text x="8.6341%" y="527.50"></text></g><g><title>deno`v8::internal::InternalIndex v8::internal::StringTable::Data::FindEntry&lt;v8::internal::Isolate, v8::internal::SequentialStringKey&lt;unsigned char&gt; &gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (1 samples, 0.15%)</title><rect x="9.1463%" y="501" width="0.1524%" height="15" fill="rgb(230,49,44)" fg:x="60" fg:w="1"/><text x="9.3963%" y="511.50"></text></g><g><title>deno`v8::internal::Factory::InternalizeUtf8String(v8::base::Vector (11 samples, 1.68%)</title><rect x="7.7744%" y="533" width="1.6768%" height="15" fill="rgb(229,67,23)" fg:x="51" fg:w="11"/><text x="8.0244%" y="543.50"></text></g><g><title>deno`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::StringTable::LookupKey&lt;v8::internal::SequentialStringKey&lt;unsigned char&gt;, v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (1 samples, 0.15%)</title><rect x="9.2988%" y="517" width="0.1524%" height="15" fill="rgb(249,83,47)" fg:x="61" fg:w="1"/><text x="9.5488%" y="527.50"></text></g><g><title>deno`&lt;serde_v8::ser::StructSerializers as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 2.13%)</title><rect x="7.4695%" y="581" width="2.1341%" height="15" fill="rgb(215,43,3)" fg:x="49" fg:w="14"/><text x="7.7195%" y="591.50">d..</text></g><g><title>deno`serde_v8::keys::v8_struct_key (12 samples, 1.83%)</title><rect x="7.7744%" y="565" width="1.8293%" height="15" fill="rgb(238,154,13)" fg:x="51" fg:w="12"/><text x="8.0244%" y="575.50">d..</text></g><g><title>deno`v8::String::NewFromUtf8 (12 samples, 1.83%)</title><rect x="7.7744%" y="549" width="1.8293%" height="15" fill="rgb(219,56,2)" fg:x="51" fg:w="12"/><text x="8.0244%" y="559.50">d..</text></g><g><title>deno`v8::internal::Utf8DecoderBase&lt;v8::internal::Utf8Decoder&gt;::Utf8DecoderBase(v8::base::Vector (1 samples, 0.15%)</title><rect x="9.4512%" y="533" width="0.1524%" height="15" fill="rgb(233,0,4)" fg:x="62" fg:w="1"/><text x="9.7012%" y="543.50"></text></g><g><title>deno`&lt;T as serde_v8::serializable::Serializable&gt;::to_v8 (32 samples, 4.88%)</title><rect x="4.8780%" y="597" width="4.8780%" height="15" fill="rgb(235,30,7)" fg:x="32" fg:w="32"/><text x="5.1280%" y="607.50">deno`&lt;..</text></g><g><title>deno`serde_v8::keys::v8_struct_key (1 samples, 0.15%)</title><rect x="9.6037%" y="581" width="0.1524%" height="15" fill="rgb(250,79,13)" fg:x="63" fg:w="1"/><text x="9.8537%" y="591.50"></text></g><g><title>deno`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="9.7561%" y="597" width="0.1524%" height="15" fill="rgb(211,146,34)" fg:x="64" fg:w="1"/><text x="10.0061%" y="607.50"></text></g><g><title>deno`v8::internal::GlobalHandles::MoveGlobal (1 samples, 0.15%)</title><rect x="9.7561%" y="581" width="0.1524%" height="15" fill="rgb(228,22,38)" fg:x="64" fg:w="1"/><text x="10.0061%" y="591.50"></text></g><g><title>deno`&lt;deno_core::async_cancel::internal::Node as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="11.4329%" y="565" width="0.1524%" height="15" fill="rgb(235,168,5)" fg:x="75" fg:w="1"/><text x="11.6829%" y="575.50"></text></g><g><title>deno`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.15%)</title><rect x="11.5854%" y="565" width="0.1524%" height="15" fill="rgb(221,155,16)" fg:x="76" fg:w="1"/><text x="11.8354%" y="575.50"></text></g><g><title>deno`futures_task::waker::drop_arc_raw (1 samples, 0.15%)</title><rect x="11.7378%" y="565" width="0.1524%" height="15" fill="rgb(215,215,53)" fg:x="77" fg:w="1"/><text x="11.9878%" y="575.50"></text></g><g><title>deno`std::io::Read::read_to_end (1 samples, 0.15%)</title><rect x="11.8902%" y="565" width="0.1524%" height="15" fill="rgb(223,4,10)" fg:x="78" fg:w="1"/><text x="12.1402%" y="575.50"></text></g><g><title>deno`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.15%)</title><rect x="12.0427%" y="549" width="0.1524%" height="15" fill="rgb(234,103,6)" fg:x="79" fg:w="1"/><text x="12.2927%" y="559.50"></text></g><g><title>deno`tokio::net::tcp::stream::TcpStream::poll_read_priv (2 samples, 0.30%)</title><rect x="12.0427%" y="565" width="0.3049%" height="15" fill="rgb(227,97,0)" fg:x="79" fg:w="2"/><text x="12.2927%" y="575.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.15%)</title><rect x="12.1951%" y="549" width="0.1524%" height="15" fill="rgb(234,150,53)" fg:x="80" fg:w="1"/><text x="12.4451%" y="559.50"></text></g><g><title>deno`tungstenite::protocol::WebSocketContext::write_pending (2 samples, 0.30%)</title><rect x="12.3476%" y="565" width="0.3049%" height="15" fill="rgb(228,201,54)" fg:x="81" fg:w="2"/><text x="12.5976%" y="575.50"></text></g><g><title>deno`core::str::converts::from_utf8 (2 samples, 0.30%)</title><rect x="12.6524%" y="549" width="0.3049%" height="15" fill="rgb(222,22,37)" fg:x="83" fg:w="2"/><text x="12.9024%" y="559.50"></text></g><g><title>deno`tungstenite::protocol::message::IncompleteMessage::extend (4 samples, 0.61%)</title><rect x="12.6524%" y="565" width="0.6098%" height="15" fill="rgb(237,53,32)" fg:x="83" fg:w="4"/><text x="12.9024%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.30%)</title><rect x="12.9573%" y="549" width="0.3049%" height="15" fill="rgb(233,25,53)" fg:x="85" fg:w="2"/><text x="13.2073%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.30%)</title><rect x="12.9573%" y="533" width="0.3049%" height="15" fill="rgb(210,40,34)" fg:x="85" fg:w="2"/><text x="13.2073%" y="543.50"></text></g><g><title>libsystem_c.dylib`recv (1 samples, 0.15%)</title><rect x="13.2622%" y="565" width="0.1524%" height="15" fill="rgb(241,220,44)" fg:x="87" fg:w="1"/><text x="13.5122%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (64 samples, 9.76%)</title><rect x="13.4146%" y="565" width="9.7561%" height="15" fill="rgb(235,28,35)" fg:x="88" fg:w="64"/><text x="13.6646%" y="575.50">libsystem_kern..</text></g><g><title>deno`&lt;deno_core::async_cancel::Cancelable&lt;F&gt; as core::future::future::Future&gt;::poll (88 samples, 13.41%)</title><rect x="10.0610%" y="581" width="13.4146%" height="15" fill="rgb(210,56,17)" fg:x="66" fg:w="88"/><text x="10.3110%" y="591.50">deno`&lt;deno_core::asy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.30%)</title><rect x="23.1707%" y="565" width="0.3049%" height="15" fill="rgb(224,130,29)" fg:x="152" fg:w="2"/><text x="23.4207%" y="575.50"></text></g><g><title>deno`core::ptr::drop_in_place&lt;deno_core::async_cancel::internal::Node&gt; (1 samples, 0.15%)</title><rect x="23.4756%" y="581" width="0.1524%" height="15" fill="rgb(235,212,8)" fg:x="154" fg:w="1"/><text x="23.7256%" y="591.50"></text></g><g><title>deno`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (1 samples, 0.15%)</title><rect x="23.6280%" y="581" width="0.1524%" height="15" fill="rgb(223,33,50)" fg:x="155" fg:w="1"/><text x="23.8780%" y="591.50"></text></g><g><title>deno`deno_websocket::op_ws_create::call::_{{closure}} (1 samples, 0.15%)</title><rect x="23.7805%" y="581" width="0.1524%" height="15" fill="rgb(219,149,13)" fg:x="156" fg:w="1"/><text x="24.0305%" y="591.50"></text></g><g><title>deno`&lt;&amp;str as http::header::map::as_header_name::Sealed&gt;::find (1 samples, 0.15%)</title><rect x="23.7805%" y="565" width="0.1524%" height="15" fill="rgb(250,156,29)" fg:x="156" fg:w="1"/><text x="24.0305%" y="575.50"></text></g><g><title>deno`futures_task::waker::clone_arc_raw (2 samples, 0.30%)</title><rect x="23.9329%" y="581" width="0.3049%" height="15" fill="rgb(216,193,19)" fg:x="157" fg:w="2"/><text x="24.1829%" y="591.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (96 samples, 14.63%)</title><rect x="9.9085%" y="597" width="14.6341%" height="15" fill="rgb(216,135,14)" fg:x="65" fg:w="96"/><text x="10.1585%" y="607.50">deno`&lt;core::future::fr..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.30%)</title><rect x="24.2378%" y="581" width="0.3049%" height="15" fill="rgb(241,47,5)" fg:x="159" fg:w="2"/><text x="24.4878%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.15%)</title><rect x="24.3902%" y="565" width="0.1524%" height="15" fill="rgb(233,42,35)" fg:x="160" fg:w="1"/><text x="24.6402%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.15%)</title><rect x="24.3902%" y="549" width="0.1524%" height="15" fill="rgb(231,13,6)" fg:x="160" fg:w="1"/><text x="24.6402%" y="559.50"></text></g><g><title>deno`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.30%)</title><rect x="24.5427%" y="597" width="0.3049%" height="15" fill="rgb(207,181,40)" fg:x="161" fg:w="2"/><text x="24.7927%" y="607.50"></text></g><g><title>deno`&lt;deno_core::async_cancel::Cancelable&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.30%)</title><rect x="24.8476%" y="597" width="0.3049%" height="15" fill="rgb(254,173,49)" fg:x="163" fg:w="2"/><text x="25.0976%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.15%)</title><rect x="25.3049%" y="549" width="0.1524%" height="15" fill="rgb(221,1,38)" fg:x="166" fg:w="1"/><text x="25.5549%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.30%)</title><rect x="25.3049%" y="565" width="0.3049%" height="15" fill="rgb(206,124,46)" fg:x="166" fg:w="2"/><text x="25.5549%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.15%)</title><rect x="25.4573%" y="549" width="0.1524%" height="15" fill="rgb(249,21,11)" fg:x="167" fg:w="1"/><text x="25.7073%" y="559.50"></text></g><g><title>deno`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.61%)</title><rect x="25.1524%" y="597" width="0.6098%" height="15" fill="rgb(222,201,40)" fg:x="165" fg:w="4"/><text x="25.4024%" y="607.50"></text></g><g><title>deno`alloc::raw_vec::finish_grow (3 samples, 0.46%)</title><rect x="25.3049%" y="581" width="0.4573%" height="15" fill="rgb(235,61,29)" fg:x="166" fg:w="3"/><text x="25.5549%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.15%)</title><rect x="25.6098%" y="565" width="0.1524%" height="15" fill="rgb(219,207,3)" fg:x="168" fg:w="1"/><text x="25.8598%" y="575.50"></text></g><g><title>deno`core::cell::RefCell&lt;T&gt;::borrow (2 samples, 0.30%)</title><rect x="25.7622%" y="597" width="0.3049%" height="15" fill="rgb(222,56,46)" fg:x="169" fg:w="2"/><text x="26.0122%" y="607.50"></text></g><g><title>deno`core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.15%)</title><rect x="26.0671%" y="597" width="0.1524%" height="15" fill="rgb(239,76,54)" fg:x="171" fg:w="1"/><text x="26.3171%" y="607.50"></text></g><g><title>deno`deno_core::inspector::JsRuntimeInspector::poll_sessions (2 samples, 0.30%)</title><rect x="26.2195%" y="597" width="0.3049%" height="15" fill="rgb(231,124,27)" fg:x="172" fg:w="2"/><text x="26.4695%" y="607.50"></text></g><g><title>deno`futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (1 samples, 0.15%)</title><rect x="26.3720%" y="581" width="0.1524%" height="15" fill="rgb(249,195,6)" fg:x="173" fg:w="1"/><text x="26.6220%" y="591.50"></text></g><g><title>deno`deno_core::runtime::JsRealm::state (1 samples, 0.15%)</title><rect x="26.5244%" y="581" width="0.1524%" height="15" fill="rgb(237,174,47)" fg:x="174" fg:w="1"/><text x="26.7744%" y="591.50"></text></g><g><title>deno`v8::internal::GlobalHandles::Create (2 samples, 0.30%)</title><rect x="26.6768%" y="581" width="0.3049%" height="15" fill="rgb(206,201,31)" fg:x="175" fg:w="2"/><text x="26.9268%" y="591.50"></text></g><g><title>deno`v8__Global__New (1 samples, 0.15%)</title><rect x="26.9817%" y="581" width="0.1524%" height="15" fill="rgb(231,57,52)" fg:x="177" fg:w="1"/><text x="27.2317%" y="591.50"></text></g><g><title>deno`deno_core::runtime::JsRuntime::event_loop_pending_state (5 samples, 0.76%)</title><rect x="26.5244%" y="597" width="0.7622%" height="15" fill="rgb(248,177,22)" fg:x="174" fg:w="5"/><text x="26.7744%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.15%)</title><rect x="27.1341%" y="581" width="0.1524%" height="15" fill="rgb(215,211,37)" fg:x="178" fg:w="1"/><text x="27.3841%" y="591.50"></text></g><g><title>deno`v8::api_internal::GlobalizeReference (1 samples, 0.15%)</title><rect x="27.4390%" y="565" width="0.1524%" height="15" fill="rgb(241,128,51)" fg:x="180" fg:w="1"/><text x="27.6890%" y="575.50"></text></g><g><title>deno`deno_core::runtime::JsRuntime::global_realm (4 samples, 0.61%)</title><rect x="27.2866%" y="581" width="0.6098%" height="15" fill="rgb(227,165,31)" fg:x="179" fg:w="4"/><text x="27.5366%" y="591.50"></text></g><g><title>deno`v8__Global__New (2 samples, 0.30%)</title><rect x="27.5915%" y="565" width="0.3049%" height="15" fill="rgb(228,167,24)" fg:x="181" fg:w="2"/><text x="27.8415%" y="575.50"></text></g><g><title>deno`v8::internal::GlobalHandles::Create (2 samples, 0.30%)</title><rect x="27.5915%" y="549" width="0.3049%" height="15" fill="rgb(228,143,12)" fg:x="181" fg:w="2"/><text x="27.8415%" y="559.50"></text></g><g><title>deno`v8::Context::Enter (1 samples, 0.15%)</title><rect x="27.8963%" y="581" width="0.1524%" height="15" fill="rgb(249,149,8)" fg:x="183" fg:w="1"/><text x="28.1463%" y="591.50"></text></g><g><title>deno`v8::HandleScope::HandleScope (1 samples, 0.15%)</title><rect x="28.0488%" y="581" width="0.1524%" height="15" fill="rgb(243,35,44)" fg:x="184" fg:w="1"/><text x="28.2988%" y="591.50"></text></g><g><title>deno`v8::Context::Enter (1 samples, 0.15%)</title><rect x="28.3537%" y="565" width="0.1524%" height="15" fill="rgb(246,89,9)" fg:x="186" fg:w="1"/><text x="28.6037%" y="575.50"></text></g><g><title>deno`v8::scope::data::ScopeData::new_handle_scope_data_with_context (3 samples, 0.46%)</title><rect x="28.2012%" y="581" width="0.4573%" height="15" fill="rgb(233,213,13)" fg:x="185" fg:w="3"/><text x="28.4512%" y="591.50"></text></g><g><title>deno`v8::internal::HandleScopeImplementer::EnterContext (1 samples, 0.15%)</title><rect x="28.5061%" y="565" width="0.1524%" height="15" fill="rgb(233,141,41)" fg:x="187" fg:w="1"/><text x="28.7561%" y="575.50"></text></g><g><title>deno`deno_core::runtime::JsRuntime::handle_scope (11 samples, 1.68%)</title><rect x="27.2866%" y="597" width="1.6768%" height="15" fill="rgb(239,167,4)" fg:x="179" fg:w="11"/><text x="27.5366%" y="607.50"></text></g><g><title>deno`v8::scope::data::ScopeData::try_exit_scope (2 samples, 0.30%)</title><rect x="28.6585%" y="581" width="0.3049%" height="15" fill="rgb(209,217,16)" fg:x="188" fg:w="2"/><text x="28.9085%" y="591.50"></text></g><g><title>deno`v8::Context::Exit (1 samples, 0.15%)</title><rect x="28.8110%" y="565" width="0.1524%" height="15" fill="rgb(219,88,35)" fg:x="189" fg:w="1"/><text x="29.0610%" y="575.50"></text></g><g><title>deno`deno_core::runtime::JsRuntime::inspector (3 samples, 0.46%)</title><rect x="28.9634%" y="597" width="0.4573%" height="15" fill="rgb(220,193,23)" fg:x="190" fg:w="3"/><text x="29.2134%" y="607.50"></text></g><g><title>deno`&lt;T as core::any::Any&gt;::type_id (1 samples, 0.15%)</title><rect x="29.4207%" y="581" width="0.1524%" height="15" fill="rgb(230,90,52)" fg:x="193" fg:w="1"/><text x="29.6707%" y="591.50"></text></g><g><title>deno`deno_ffi::init::_{{closure}} (2 samples, 0.30%)</title><rect x="29.4207%" y="597" width="0.3049%" height="15" fill="rgb(252,106,19)" fg:x="193" fg:w="2"/><text x="29.6707%" y="607.50"></text></g><g><title>deno`deno_core::gotham_state::GothamState::borrow_mut (1 samples, 0.15%)</title><rect x="29.5732%" y="581" width="0.1524%" height="15" fill="rgb(206,74,20)" fg:x="194" fg:w="1"/><text x="29.8232%" y="591.50"></text></g><g><title>deno`futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (1 samples, 0.15%)</title><rect x="29.7256%" y="597" width="0.1524%" height="15" fill="rgb(230,138,44)" fg:x="195" fg:w="1"/><text x="29.9756%" y="607.50"></text></g><g><title>deno`tokio::util::wake::clone_arc_raw (1 samples, 0.15%)</title><rect x="29.8780%" y="597" width="0.1524%" height="15" fill="rgb(235,182,43)" fg:x="196" fg:w="1"/><text x="30.1280%" y="607.50"></text></g><g><title>deno`tokio::util::wake::wake_arc_raw (11 samples, 1.68%)</title><rect x="30.0305%" y="597" width="1.6768%" height="15" fill="rgb(242,16,51)" fg:x="197" fg:w="11"/><text x="30.2805%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`kevent (11 samples, 1.68%)</title><rect x="30.0305%" y="581" width="1.6768%" height="15" fill="rgb(248,9,4)" fg:x="197" fg:w="11"/><text x="30.2805%" y="591.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.15%)</title><rect x="31.8598%" y="581" width="0.1524%" height="15" fill="rgb(210,31,22)" fg:x="209" fg:w="1"/><text x="32.1098%" y="591.50"></text></g><g><title>deno`Builtins_JSEntry (1 samples, 0.15%)</title><rect x="32.0122%" y="565" width="0.1524%" height="15" fill="rgb(239,54,39)" fg:x="210" fg:w="1"/><text x="32.2622%" y="575.50"></text></g><g><title>0x110019a60 (1 samples, 0.15%)</title><rect x="32.3171%" y="533" width="0.1524%" height="15" fill="rgb(230,99,41)" fg:x="212" fg:w="1"/><text x="32.5671%" y="543.50"></text></g><g><title>0x110019a78 (1 samples, 0.15%)</title><rect x="32.4695%" y="533" width="0.1524%" height="15" fill="rgb(253,106,12)" fg:x="213" fg:w="1"/><text x="32.7195%" y="543.50"></text></g><g><title>0x110023ac0 (1 samples, 0.15%)</title><rect x="32.6220%" y="533" width="0.1524%" height="15" fill="rgb(213,46,41)" fg:x="214" fg:w="1"/><text x="32.8720%" y="543.50"></text></g><g><title>0x110024c40 (1 samples, 0.15%)</title><rect x="32.7744%" y="533" width="0.1524%" height="15" fill="rgb(215,133,35)" fg:x="215" fg:w="1"/><text x="33.0244%" y="543.50"></text></g><g><title>deno`Builtins_CallFunction_ReceiverIsAny (2 samples, 0.30%)</title><rect x="32.9268%" y="533" width="0.3049%" height="15" fill="rgb(213,28,5)" fg:x="216" fg:w="2"/><text x="33.1768%" y="543.50"></text></g><g><title>deno`Builtins_Call_ReceiverIsAny (2 samples, 0.30%)</title><rect x="33.2317%" y="533" width="0.3049%" height="15" fill="rgb(215,77,49)" fg:x="218" fg:w="2"/><text x="33.4817%" y="543.50"></text></g><g><title>0x110019be0 (1 samples, 0.15%)</title><rect x="33.5366%" y="517" width="0.1524%" height="15" fill="rgb(248,100,22)" fg:x="220" fg:w="1"/><text x="33.7866%" y="527.50"></text></g><g><title>deno`Builtins_PromiseCapabilityDefaultResolve (1 samples, 0.15%)</title><rect x="33.5366%" y="501" width="0.1524%" height="15" fill="rgb(208,67,9)" fg:x="220" fg:w="1"/><text x="33.7866%" y="511.50"></text></g><g><title>deno`Builtins_ResolvePromise (1 samples, 0.15%)</title><rect x="33.5366%" y="485" width="0.1524%" height="15" fill="rgb(219,133,21)" fg:x="220" fg:w="1"/><text x="33.7866%" y="495.50"></text></g><g><title>deno`Builtins_GetProperty (1 samples, 0.15%)</title><rect x="33.5366%" y="469" width="0.1524%" height="15" fill="rgb(246,46,29)" fg:x="220" fg:w="1"/><text x="33.7866%" y="479.50"></text></g><g><title>0x110019c40 (1 samples, 0.15%)</title><rect x="33.6890%" y="517" width="0.1524%" height="15" fill="rgb(246,185,52)" fg:x="221" fg:w="1"/><text x="33.9390%" y="527.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.15%)</title><rect x="33.6890%" y="501" width="0.1524%" height="15" fill="rgb(252,136,11)" fg:x="221" fg:w="1"/><text x="33.9390%" y="511.50"></text></g><g><title>deno`v8::internal::Runtime_StackGuardWithGap (1 samples, 0.15%)</title><rect x="33.6890%" y="485" width="0.1524%" height="15" fill="rgb(219,138,53)" fg:x="221" fg:w="1"/><text x="33.9390%" y="495.50"></text></g><g><title>deno`v8::internal::StackGuard::HandleInterrupts (1 samples, 0.15%)</title><rect x="33.6890%" y="469" width="0.1524%" height="15" fill="rgb(211,51,23)" fg:x="221" fg:w="1"/><text x="33.9390%" y="479.50"></text></g><g><title>deno`v8::internal::OptimizingCompileDispatcher::InstallOptimizedFunctions (1 samples, 0.15%)</title><rect x="33.6890%" y="453" width="0.1524%" height="15" fill="rgb(247,221,28)" fg:x="221" fg:w="1"/><text x="33.9390%" y="463.50"></text></g><g><title>deno`v8::internal::compiler::PipelineCompilationJob::~PipelineCompilationJob (1 samples, 0.15%)</title><rect x="33.6890%" y="437" width="0.1524%" height="15" fill="rgb(251,222,45)" fg:x="221" fg:w="1"/><text x="33.9390%" y="447.50"></text></g><g><title>deno`v8::internal::OptimizedCompilationInfo::~OptimizedCompilationInfo (1 samples, 0.15%)</title><rect x="33.6890%" y="421" width="0.1524%" height="15" fill="rgb(217,162,53)" fg:x="221" fg:w="1"/><text x="33.9390%" y="431.50"></text></g><g><title>deno`v8::internal::IdentityMapBase::Clear (1 samples, 0.15%)</title><rect x="33.6890%" y="405" width="0.1524%" height="15" fill="rgb(229,93,14)" fg:x="221" fg:w="1"/><text x="33.9390%" y="415.50"></text></g><g><title>deno`Builtins_Call_ReceiverIsNotNullOrUndefined (1 samples, 0.15%)</title><rect x="33.8415%" y="517" width="0.1524%" height="15" fill="rgb(209,67,49)" fg:x="222" fg:w="1"/><text x="34.0915%" y="527.50"></text></g><g><title>deno`Builtins_JSEntry (12 samples, 1.83%)</title><rect x="32.3171%" y="549" width="1.8293%" height="15" fill="rgb(213,87,29)" fg:x="212" fg:w="12"/><text x="32.5671%" y="559.50">d..</text></g><g><title>deno`Builtins_JSEntryTrampoline (4 samples, 0.61%)</title><rect x="33.5366%" y="533" width="0.6098%" height="15" fill="rgb(205,151,52)" fg:x="220" fg:w="4"/><text x="33.7866%" y="543.50"></text></g><g><title>deno`Builtins_LoadIC (1 samples, 0.15%)</title><rect x="33.9939%" y="517" width="0.1524%" height="15" fill="rgb(253,215,39)" fg:x="223" fg:w="1"/><text x="34.2439%" y="527.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (15 samples, 2.29%)</title><rect x="32.1646%" y="565" width="2.2866%" height="15" fill="rgb(221,220,41)" fg:x="211" fg:w="15"/><text x="32.4146%" y="575.50">d..</text></g><g><title>deno`v8::internal::SaveContext::SaveContext (2 samples, 0.30%)</title><rect x="34.1463%" y="549" width="0.3049%" height="15" fill="rgb(218,133,21)" fg:x="224" fg:w="2"/><text x="34.3963%" y="559.50"></text></g><g><title>deno`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (17 samples, 2.59%)</title><rect x="32.0122%" y="581" width="2.5915%" height="15" fill="rgb(221,193,43)" fg:x="210" fg:w="17"/><text x="32.2622%" y="591.50">de..</text></g><g><title>deno`v8::internal::ScopeInfo::is_script_scope (1 samples, 0.15%)</title><rect x="34.4512%" y="565" width="0.1524%" height="15" fill="rgb(240,128,52)" fg:x="226" fg:w="1"/><text x="34.7012%" y="575.50"></text></g><g><title>deno`v8::internal::Execution::TryRunMicrotasks (1 samples, 0.15%)</title><rect x="34.7561%" y="549" width="0.1524%" height="15" fill="rgb(253,114,12)" fg:x="228" fg:w="1"/><text x="35.0061%" y="559.50"></text></g><g><title>deno`v8::TryCatch::~TryCatch (1 samples, 0.15%)</title><rect x="35.2134%" y="517" width="0.1524%" height="15" fill="rgb(215,223,47)" fg:x="231" fg:w="1"/><text x="35.4634%" y="527.50"></text></g><g><title>deno`Builtins_AsyncFunctionAwaitResolveClosure (1 samples, 0.15%)</title><rect x="35.6707%" y="453" width="0.1524%" height="15" fill="rgb(248,225,23)" fg:x="234" fg:w="1"/><text x="35.9207%" y="463.50"></text></g><g><title>deno`v8::internal::FeedbackNexus::ic_state (2 samples, 0.30%)</title><rect x="35.8232%" y="405" width="0.3049%" height="15" fill="rgb(250,108,0)" fg:x="235" fg:w="2"/><text x="36.0732%" y="415.50"></text></g><g><title>deno`v8::internal::LoadHandler::LoadFullChain(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::MaybeObjectHandle const&amp;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="36.5854%" y="373" width="0.1524%" height="15" fill="rgb(228,208,7)" fg:x="240" fg:w="1"/><text x="36.8354%" y="383.50"></text></g><g><title>deno`v8::internal::IC::SetCache(v8::internal::Handle (1 samples, 0.15%)</title><rect x="36.7378%" y="357" width="0.1524%" height="15" fill="rgb(244,45,10)" fg:x="241" fg:w="1"/><text x="36.9878%" y="367.50"></text></g><g><title>deno`v8::internal::LoadIC::UpdateCaches (2 samples, 0.30%)</title><rect x="36.7378%" y="373" width="0.3049%" height="15" fill="rgb(207,125,25)" fg:x="241" fg:w="2"/><text x="36.9878%" y="383.50"></text></g><g><title>deno`v8::internal::StubCache::Set (1 samples, 0.15%)</title><rect x="36.8902%" y="357" width="0.1524%" height="15" fill="rgb(210,195,18)" fg:x="242" fg:w="1"/><text x="37.1402%" y="367.50"></text></g><g><title>0x110019038 (9 samples, 1.37%)</title><rect x="35.8232%" y="437" width="1.3720%" height="15" fill="rgb(249,80,12)" fg:x="235" fg:w="9"/><text x="36.0732%" y="447.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (9 samples, 1.37%)</title><rect x="35.8232%" y="421" width="1.3720%" height="15" fill="rgb(221,65,9)" fg:x="235" fg:w="9"/><text x="36.0732%" y="431.50"></text></g><g><title>deno`v8::internal::Runtime_LoadIC_Miss (7 samples, 1.07%)</title><rect x="36.1280%" y="405" width="1.0671%" height="15" fill="rgb(235,49,36)" fg:x="237" fg:w="7"/><text x="36.3780%" y="415.50"></text></g><g><title>deno`v8::internal::LoadIC::Load(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, bool, v8::internal::Handle (7 samples, 1.07%)</title><rect x="36.1280%" y="389" width="1.0671%" height="15" fill="rgb(225,32,20)" fg:x="237" fg:w="7"/><text x="36.3780%" y="399.50"></text></g><g><title>deno`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (1 samples, 0.15%)</title><rect x="37.0427%" y="373" width="0.1524%" height="15" fill="rgb(215,141,46)" fg:x="243" fg:w="1"/><text x="37.2927%" y="383.50"></text></g><g><title>deno`void v8::internal::LookupIterator::Start&lt;false&gt; (1 samples, 0.15%)</title><rect x="37.0427%" y="357" width="0.1524%" height="15" fill="rgb(250,160,47)" fg:x="243" fg:w="1"/><text x="37.2927%" y="367.50"></text></g><g><title>deno`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (1 samples, 0.15%)</title><rect x="37.0427%" y="341" width="0.1524%" height="15" fill="rgb(216,222,40)" fg:x="243" fg:w="1"/><text x="37.2927%" y="351.50"></text></g><g><title>deno`v8::internal::LoadIC::UpdateCaches (2 samples, 0.30%)</title><rect x="37.5000%" y="373" width="0.3049%" height="15" fill="rgb(234,217,39)" fg:x="246" fg:w="2"/><text x="37.7500%" y="383.50"></text></g><g><title>deno`v8::internal::LoadHandler::LoadFullChain(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::MaybeObjectHandle const&amp;, v8::internal::Handle (2 samples, 0.30%)</title><rect x="37.5000%" y="357" width="0.3049%" height="15" fill="rgb(207,178,40)" fg:x="246" fg:w="2"/><text x="37.7500%" y="367.50"></text></g><g><title>deno`v8::internal::LoadIC::Load(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, bool, v8::internal::Handle (4 samples, 0.61%)</title><rect x="37.3476%" y="389" width="0.6098%" height="15" fill="rgb(221,136,13)" fg:x="245" fg:w="4"/><text x="37.5976%" y="399.50"></text></g><g><title>deno`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (1 samples, 0.15%)</title><rect x="37.8049%" y="373" width="0.1524%" height="15" fill="rgb(249,199,10)" fg:x="248" fg:w="1"/><text x="38.0549%" y="383.50"></text></g><g><title>deno`void v8::internal::LookupIterator::Start&lt;false&gt; (1 samples, 0.15%)</title><rect x="37.8049%" y="357" width="0.1524%" height="15" fill="rgb(249,222,13)" fg:x="248" fg:w="1"/><text x="38.0549%" y="367.50"></text></g><g><title>deno`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (1 samples, 0.15%)</title><rect x="37.8049%" y="341" width="0.1524%" height="15" fill="rgb(244,185,38)" fg:x="248" fg:w="1"/><text x="38.0549%" y="351.50"></text></g><g><title>0x110024e08 (6 samples, 0.91%)</title><rect x="37.1951%" y="437" width="0.9146%" height="15" fill="rgb(236,202,9)" fg:x="244" fg:w="6"/><text x="37.4451%" y="447.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (6 samples, 0.91%)</title><rect x="37.1951%" y="421" width="0.9146%" height="15" fill="rgb(250,229,37)" fg:x="244" fg:w="6"/><text x="37.4451%" y="431.50"></text></g><g><title>deno`v8::internal::Runtime_LoadIC_Miss (6 samples, 0.91%)</title><rect x="37.1951%" y="405" width="0.9146%" height="15" fill="rgb(206,174,23)" fg:x="244" fg:w="6"/><text x="37.4451%" y="415.50"></text></g><g><title>deno`v8::internal::Object::GetProperty (1 samples, 0.15%)</title><rect x="37.9573%" y="389" width="0.1524%" height="15" fill="rgb(211,33,43)" fg:x="249" fg:w="1"/><text x="38.2073%" y="399.50"></text></g><g><title>0x11000cccc (3 samples, 0.46%)</title><rect x="38.1098%" y="325" width="0.4573%" height="15" fill="rgb(245,58,50)" fg:x="250" fg:w="3"/><text x="38.3598%" y="335.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (3 samples, 0.46%)</title><rect x="38.1098%" y="309" width="0.4573%" height="15" fill="rgb(244,68,36)" fg:x="250" fg:w="3"/><text x="38.3598%" y="319.50"></text></g><g><title>deno`v8::internal::Builtin_HandleApiCall (3 samples, 0.46%)</title><rect x="38.1098%" y="293" width="0.4573%" height="15" fill="rgb(232,229,15)" fg:x="250" fg:w="3"/><text x="38.3598%" y="303.50"></text></g><g><title>deno`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (3 samples, 0.46%)</title><rect x="38.1098%" y="277" width="0.4573%" height="15" fill="rgb(254,30,23)" fg:x="250" fg:w="3"/><text x="38.3598%" y="287.50"></text></g><g><title>deno`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (3 samples, 0.46%)</title><rect x="38.1098%" y="261" width="0.4573%" height="15" fill="rgb(235,160,14)" fg:x="250" fg:w="3"/><text x="38.3598%" y="271.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.46%)</title><rect x="38.1098%" y="245" width="0.4573%" height="15" fill="rgb(212,155,44)" fg:x="250" fg:w="3"/><text x="38.3598%" y="255.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.46%)</title><rect x="38.1098%" y="229" width="0.4573%" height="15" fill="rgb(226,2,50)" fg:x="250" fg:w="3"/><text x="38.3598%" y="239.50"></text></g><g><title>deno`futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (3 samples, 0.46%)</title><rect x="38.1098%" y="213" width="0.4573%" height="15" fill="rgb(234,177,6)" fg:x="250" fg:w="3"/><text x="38.3598%" y="223.50"></text></g><g><title>deno`tungstenite::protocol::WebSocketContext::write_pending (3 samples, 0.46%)</title><rect x="38.1098%" y="197" width="0.4573%" height="15" fill="rgb(217,24,9)" fg:x="250" fg:w="3"/><text x="38.3598%" y="207.50"></text></g><g><title>deno`tungstenite::protocol::WebSocketContext::send_one_frame (3 samples, 0.46%)</title><rect x="38.1098%" y="181" width="0.4573%" height="15" fill="rgb(220,13,46)" fg:x="250" fg:w="3"/><text x="38.3598%" y="191.50"></text></g><g><title>deno`tungstenite::protocol::frame::FrameCodec::write_pending (3 samples, 0.46%)</title><rect x="38.1098%" y="165" width="0.4573%" height="15" fill="rgb(239,221,27)" fg:x="250" fg:w="3"/><text x="38.3598%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (3 samples, 0.46%)</title><rect x="38.1098%" y="149" width="0.4573%" height="15" fill="rgb(222,198,25)" fg:x="250" fg:w="3"/><text x="38.3598%" y="159.50"></text></g><g><title>0x110012eec (5 samples, 0.76%)</title><rect x="38.1098%" y="341" width="0.7622%" height="15" fill="rgb(211,99,13)" fg:x="250" fg:w="5"/><text x="38.3598%" y="351.50"></text></g><g><title>0x11001b794 (2 samples, 0.30%)</title><rect x="38.5671%" y="325" width="0.3049%" height="15" fill="rgb(232,111,31)" fg:x="253" fg:w="2"/><text x="38.8171%" y="335.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (2 samples, 0.30%)</title><rect x="38.5671%" y="309" width="0.3049%" height="15" fill="rgb(245,82,37)" fg:x="253" fg:w="2"/><text x="38.8171%" y="319.50"></text></g><g><title>deno`v8::internal::Builtin_HandleApiCall (2 samples, 0.30%)</title><rect x="38.5671%" y="293" width="0.3049%" height="15" fill="rgb(227,149,46)" fg:x="253" fg:w="2"/><text x="38.8171%" y="303.50"></text></g><g><title>deno`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (2 samples, 0.30%)</title><rect x="38.5671%" y="277" width="0.3049%" height="15" fill="rgb(218,36,50)" fg:x="253" fg:w="2"/><text x="38.8171%" y="287.50"></text></g><g><title>deno`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (2 samples, 0.30%)</title><rect x="38.5671%" y="261" width="0.3049%" height="15" fill="rgb(226,80,48)" fg:x="253" fg:w="2"/><text x="38.8171%" y="271.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.30%)</title><rect x="38.5671%" y="245" width="0.3049%" height="15" fill="rgb(238,224,15)" fg:x="253" fg:w="2"/><text x="38.8171%" y="255.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.30%)</title><rect x="38.5671%" y="229" width="0.3049%" height="15" fill="rgb(241,136,10)" fg:x="253" fg:w="2"/><text x="38.8171%" y="239.50"></text></g><g><title>deno`futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (2 samples, 0.30%)</title><rect x="38.5671%" y="213" width="0.3049%" height="15" fill="rgb(208,32,45)" fg:x="253" fg:w="2"/><text x="38.8171%" y="223.50"></text></g><g><title>deno`tungstenite::protocol::WebSocketContext::write_pending (2 samples, 0.30%)</title><rect x="38.5671%" y="197" width="0.3049%" height="15" fill="rgb(207,135,9)" fg:x="253" fg:w="2"/><text x="38.8171%" y="207.50"></text></g><g><title>deno`tungstenite::protocol::WebSocketContext::send_one_frame (2 samples, 0.30%)</title><rect x="38.5671%" y="181" width="0.3049%" height="15" fill="rgb(206,86,44)" fg:x="253" fg:w="2"/><text x="38.8171%" y="191.50"></text></g><g><title>deno`tungstenite::protocol::frame::FrameCodec::write_pending (2 samples, 0.30%)</title><rect x="38.5671%" y="165" width="0.3049%" height="15" fill="rgb(245,177,15)" fg:x="253" fg:w="2"/><text x="38.8171%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (2 samples, 0.30%)</title><rect x="38.5671%" y="149" width="0.3049%" height="15" fill="rgb(206,64,50)" fg:x="253" fg:w="2"/><text x="38.8171%" y="159.50"></text></g><g><title>0x11001f714 (1 samples, 0.15%)</title><rect x="38.8720%" y="341" width="0.1524%" height="15" fill="rgb(234,36,40)" fg:x="255" fg:w="1"/><text x="39.1220%" y="351.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.15%)</title><rect x="38.8720%" y="325" width="0.1524%" height="15" fill="rgb(213,64,8)" fg:x="255" fg:w="1"/><text x="39.1220%" y="335.50"></text></g><g><title>deno`v8::internal::Builtin_HandleApiCall (1 samples, 0.15%)</title><rect x="38.8720%" y="309" width="0.1524%" height="15" fill="rgb(210,75,36)" fg:x="255" fg:w="1"/><text x="39.1220%" y="319.50"></text></g><g><title>deno`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="38.8720%" y="293" width="0.1524%" height="15" fill="rgb(229,88,21)" fg:x="255" fg:w="1"/><text x="39.1220%" y="303.50"></text></g><g><title>deno`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.15%)</title><rect x="38.8720%" y="277" width="0.1524%" height="15" fill="rgb(252,204,47)" fg:x="255" fg:w="1"/><text x="39.1220%" y="287.50"></text></g><g><title>deno`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (1 samples, 0.15%)</title><rect x="38.8720%" y="261" width="0.1524%" height="15" fill="rgb(208,77,27)" fg:x="255" fg:w="1"/><text x="39.1220%" y="271.50"></text></g><g><title>deno`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (1 samples, 0.15%)</title><rect x="38.8720%" y="245" width="0.1524%" height="15" fill="rgb(221,76,26)" fg:x="255" fg:w="1"/><text x="39.1220%" y="255.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.15%)</title><rect x="38.8720%" y="229" width="0.1524%" height="15" fill="rgb(225,139,18)" fg:x="255" fg:w="1"/><text x="39.1220%" y="239.50"></text></g><g><title>deno`Builtins_JSEntry (1 samples, 0.15%)</title><rect x="38.8720%" y="213" width="0.1524%" height="15" fill="rgb(230,137,11)" fg:x="255" fg:w="1"/><text x="39.1220%" y="223.50"></text></g><g><title>deno`Builtins_JSEntryTrampoline (1 samples, 0.15%)</title><rect x="38.8720%" y="197" width="0.1524%" height="15" fill="rgb(212,28,1)" fg:x="255" fg:w="1"/><text x="39.1220%" y="207.50"></text></g><g><title>0x11000fad0 (7 samples, 1.07%)</title><rect x="38.1098%" y="357" width="1.0671%" height="15" fill="rgb(248,164,17)" fg:x="250" fg:w="7"/><text x="38.3598%" y="367.50"></text></g><g><title>deno`Builtins_BaselineLeaveFrame (1 samples, 0.15%)</title><rect x="39.0244%" y="341" width="0.1524%" height="15" fill="rgb(222,171,42)" fg:x="256" fg:w="1"/><text x="39.2744%" y="351.50"></text></g><g><title>0x110016ce4 (8 samples, 1.22%)</title><rect x="38.1098%" y="421" width="1.2195%" height="15" fill="rgb(243,84,45)" fg:x="250" fg:w="8"/><text x="38.3598%" y="431.50"></text></g><g><title>0x11000fbfc (8 samples, 1.22%)</title><rect x="38.1098%" y="405" width="1.2195%" height="15" fill="rgb(252,49,23)" fg:x="250" fg:w="8"/><text x="38.3598%" y="415.50"></text></g><g><title>deno`Builtins_JSBuiltinsConstructStub (8 samples, 1.22%)</title><rect x="38.1098%" y="389" width="1.2195%" height="15" fill="rgb(215,19,7)" fg:x="250" fg:w="8"/><text x="38.3598%" y="399.50"></text></g><g><title>deno`Builtins_PromiseConstructor (8 samples, 1.22%)</title><rect x="38.1098%" y="373" width="1.2195%" height="15" fill="rgb(238,81,41)" fg:x="250" fg:w="8"/><text x="38.3598%" y="383.50"></text></g><g><title>0x11002030c (1 samples, 0.15%)</title><rect x="39.1768%" y="357" width="0.1524%" height="15" fill="rgb(210,199,37)" fg:x="257" fg:w="1"/><text x="39.4268%" y="367.50"></text></g><g><title>0x11001f714 (1 samples, 0.15%)</title><rect x="39.1768%" y="341" width="0.1524%" height="15" fill="rgb(244,192,49)" fg:x="257" fg:w="1"/><text x="39.4268%" y="351.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.15%)</title><rect x="39.1768%" y="325" width="0.1524%" height="15" fill="rgb(226,211,11)" fg:x="257" fg:w="1"/><text x="39.4268%" y="335.50"></text></g><g><title>deno`v8::internal::Builtin_HandleApiCall (1 samples, 0.15%)</title><rect x="39.1768%" y="309" width="0.1524%" height="15" fill="rgb(236,162,54)" fg:x="257" fg:w="1"/><text x="39.4268%" y="319.50"></text></g><g><title>deno`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="39.1768%" y="293" width="0.1524%" height="15" fill="rgb(220,229,9)" fg:x="257" fg:w="1"/><text x="39.4268%" y="303.50"></text></g><g><title>deno`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.15%)</title><rect x="39.1768%" y="277" width="0.1524%" height="15" fill="rgb(250,87,22)" fg:x="257" fg:w="1"/><text x="39.4268%" y="287.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.15%)</title><rect x="39.1768%" y="261" width="0.1524%" height="15" fill="rgb(239,43,17)" fg:x="257" fg:w="1"/><text x="39.4268%" y="271.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.15%)</title><rect x="39.1768%" y="245" width="0.1524%" height="15" fill="rgb(231,177,25)" fg:x="257" fg:w="1"/><text x="39.4268%" y="255.50"></text></g><g><title>deno`futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (1 samples, 0.15%)</title><rect x="39.1768%" y="229" width="0.1524%" height="15" fill="rgb(219,179,1)" fg:x="257" fg:w="1"/><text x="39.4268%" y="239.50"></text></g><g><title>deno`tungstenite::protocol::WebSocketContext::write_pending (1 samples, 0.15%)</title><rect x="39.1768%" y="213" width="0.1524%" height="15" fill="rgb(238,219,53)" fg:x="257" fg:w="1"/><text x="39.4268%" y="223.50"></text></g><g><title>deno`tungstenite::protocol::WebSocketContext::send_one_frame (1 samples, 0.15%)</title><rect x="39.1768%" y="197" width="0.1524%" height="15" fill="rgb(232,167,36)" fg:x="257" fg:w="1"/><text x="39.4268%" y="207.50"></text></g><g><title>deno`tungstenite::protocol::frame::FrameCodec::write_pending (1 samples, 0.15%)</title><rect x="39.1768%" y="181" width="0.1524%" height="15" fill="rgb(244,19,51)" fg:x="257" fg:w="1"/><text x="39.4268%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.15%)</title><rect x="39.1768%" y="165" width="0.1524%" height="15" fill="rgb(224,6,22)" fg:x="257" fg:w="1"/><text x="39.4268%" y="175.50"></text></g><g><title>0x110016f98 (1 samples, 0.15%)</title><rect x="39.3293%" y="421" width="0.1524%" height="15" fill="rgb(224,145,5)" fg:x="258" fg:w="1"/><text x="39.5793%" y="431.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="39.3293%" y="405" width="0.1524%" height="15" fill="rgb(234,130,49)" fg:x="258" fg:w="1"/><text x="39.5793%" y="415.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="39.3293%" y="389" width="0.1524%" height="15" fill="rgb(254,6,2)" fg:x="258" fg:w="1"/><text x="39.5793%" y="399.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="39.3293%" y="373" width="0.1524%" height="15" fill="rgb(208,96,46)" fg:x="258" fg:w="1"/><text x="39.5793%" y="383.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="39.3293%" y="357" width="0.1524%" height="15" fill="rgb(239,3,39)" fg:x="258" fg:w="1"/><text x="39.5793%" y="367.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="39.3293%" y="341" width="0.1524%" height="15" fill="rgb(233,210,1)" fg:x="258" fg:w="1"/><text x="39.5793%" y="351.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="39.3293%" y="325" width="0.1524%" height="15" fill="rgb(244,137,37)" fg:x="258" fg:w="1"/><text x="39.5793%" y="335.50"></text></g><g><title>deno`Builtins_ConstructHandler (1 samples, 0.15%)</title><rect x="39.3293%" y="309" width="0.1524%" height="15" fill="rgb(240,136,2)" fg:x="258" fg:w="1"/><text x="39.5793%" y="319.50"></text></g><g><title>deno`Builtins_JSBuiltinsConstructStub (1 samples, 0.15%)</title><rect x="39.3293%" y="293" width="0.1524%" height="15" fill="rgb(239,18,37)" fg:x="258" fg:w="1"/><text x="39.5793%" y="303.50"></text></g><g><title>deno`Builtins_RegExpConstructor (1 samples, 0.15%)</title><rect x="39.3293%" y="277" width="0.1524%" height="15" fill="rgb(218,185,22)" fg:x="258" fg:w="1"/><text x="39.5793%" y="287.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.15%)</title><rect x="39.3293%" y="261" width="0.1524%" height="15" fill="rgb(225,218,4)" fg:x="258" fg:w="1"/><text x="39.5793%" y="271.50"></text></g><g><title>deno`v8::internal::Runtime_RegExpInitializeAndCompile (1 samples, 0.15%)</title><rect x="39.3293%" y="245" width="0.1524%" height="15" fill="rgb(230,182,32)" fg:x="258" fg:w="1"/><text x="39.5793%" y="255.50"></text></g><g><title>deno`v8::internal::JSRegExp::Initialize(v8::internal::Handle&lt;v8::internal::JSRegExp&gt;, v8::internal::Handle&lt;v8::internal::String&gt;, v8::base::Flags (1 samples, 0.15%)</title><rect x="39.3293%" y="229" width="0.1524%" height="15" fill="rgb(242,56,43)" fg:x="258" fg:w="1"/><text x="39.5793%" y="239.50"></text></g><g><title>deno`v8::internal::RegExp::Compile(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSRegExp&gt;, v8::internal::Handle&lt;v8::internal::String&gt;, v8::base::Flags (1 samples, 0.15%)</title><rect x="39.3293%" y="213" width="0.1524%" height="15" fill="rgb(233,99,24)" fg:x="258" fg:w="1"/><text x="39.5793%" y="223.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::RegExpParserImpl&lt;unsigned char&gt;::Parse (1 samples, 0.15%)</title><rect x="39.3293%" y="197" width="0.1524%" height="15" fill="rgb(234,209,42)" fg:x="258" fg:w="1"/><text x="39.5793%" y="207.50"></text></g><g><title>0x11000e0fc (1 samples, 0.15%)</title><rect x="39.4817%" y="357" width="0.1524%" height="15" fill="rgb(227,7,12)" fg:x="259" fg:w="1"/><text x="39.7317%" y="367.50"></text></g><g><title>deno`Builtins_CopyDataProperties (1 samples, 0.15%)</title><rect x="39.4817%" y="341" width="0.1524%" height="15" fill="rgb(245,203,43)" fg:x="259" fg:w="1"/><text x="39.7317%" y="351.50"></text></g><g><title>0x110010234 (2 samples, 0.30%)</title><rect x="39.4817%" y="389" width="0.3049%" height="15" fill="rgb(238,205,33)" fg:x="259" fg:w="2"/><text x="39.7317%" y="399.50"></text></g><g><title>deno`construct_stub_create_deopt_addr (2 samples, 0.30%)</title><rect x="39.4817%" y="373" width="0.3049%" height="15" fill="rgb(231,56,7)" fg:x="259" fg:w="2"/><text x="39.7317%" y="383.50"></text></g><g><title>0x11000e3e8 (1 samples, 0.15%)</title><rect x="39.6341%" y="357" width="0.1524%" height="15" fill="rgb(244,186,29)" fg:x="260" fg:w="1"/><text x="39.8841%" y="367.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.15%)</title><rect x="39.6341%" y="341" width="0.1524%" height="15" fill="rgb(234,111,31)" fg:x="260" fg:w="1"/><text x="39.8841%" y="351.50"></text></g><g><title>deno`v8::internal::Builtin_ReflectDefineProperty (1 samples, 0.15%)</title><rect x="39.6341%" y="325" width="0.1524%" height="15" fill="rgb(241,149,10)" fg:x="260" fg:w="1"/><text x="39.8841%" y="335.50"></text></g><g><title>deno`v8::internal::PropertyDescriptor::ToPropertyDescriptor(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="39.6341%" y="309" width="0.1524%" height="15" fill="rgb(249,206,44)" fg:x="260" fg:w="1"/><text x="39.8841%" y="319.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::GetPropertyIfPresent(v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="39.6341%" y="293" width="0.1524%" height="15" fill="rgb(251,153,30)" fg:x="260" fg:w="1"/><text x="39.8841%" y="303.50"></text></g><g><title>0x11001e66c (1 samples, 0.15%)</title><rect x="39.7866%" y="389" width="0.1524%" height="15" fill="rgb(239,152,38)" fg:x="261" fg:w="1"/><text x="40.0366%" y="399.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.15%)</title><rect x="39.7866%" y="373" width="0.1524%" height="15" fill="rgb(249,139,47)" fg:x="261" fg:w="1"/><text x="40.0366%" y="383.50"></text></g><g><title>deno`v8::internal::Runtime_DateCurrentTime (1 samples, 0.15%)</title><rect x="39.7866%" y="357" width="0.1524%" height="15" fill="rgb(244,64,35)" fg:x="261" fg:w="1"/><text x="40.0366%" y="367.50"></text></g><g><title>deno`v8::internal::V8::GetCurrentPlatform (1 samples, 0.15%)</title><rect x="39.7866%" y="341" width="0.1524%" height="15" fill="rgb(216,46,15)" fg:x="261" fg:w="1"/><text x="40.0366%" y="351.50"></text></g><g><title>0x110017d64 (5 samples, 0.76%)</title><rect x="39.4817%" y="421" width="0.7622%" height="15" fill="rgb(250,74,19)" fg:x="259" fg:w="5"/><text x="39.7317%" y="431.50"></text></g><g><title>deno`construct_stub_create_deopt_addr (5 samples, 0.76%)</title><rect x="39.4817%" y="405" width="0.7622%" height="15" fill="rgb(249,42,33)" fg:x="259" fg:w="5"/><text x="39.7317%" y="415.50"></text></g><g><title>0x11001e798 (2 samples, 0.30%)</title><rect x="39.9390%" y="389" width="0.3049%" height="15" fill="rgb(242,149,17)" fg:x="262" fg:w="2"/><text x="40.1890%" y="399.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (2 samples, 0.30%)</title><rect x="39.9390%" y="373" width="0.3049%" height="15" fill="rgb(244,29,21)" fg:x="262" fg:w="2"/><text x="40.1890%" y="383.50"></text></g><g><title>deno`v8::internal::Builtin_ReflectDefineProperty (2 samples, 0.30%)</title><rect x="39.9390%" y="357" width="0.3049%" height="15" fill="rgb(220,130,37)" fg:x="262" fg:w="2"/><text x="40.1890%" y="367.50"></text></g><g><title>deno`v8::internal::JSReceiver::DefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyDescriptor*, v8::Maybe (2 samples, 0.30%)</title><rect x="39.9390%" y="341" width="0.3049%" height="15" fill="rgb(211,67,2)" fg:x="262" fg:w="2"/><text x="40.1890%" y="351.50"></text></g><g><title>deno`v8::internal::JSReceiver::OrdinaryDefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::PropertyKey const&amp;, v8::internal::PropertyDescriptor*, v8::Maybe (1 samples, 0.15%)</title><rect x="40.0915%" y="325" width="0.1524%" height="15" fill="rgb(235,68,52)" fg:x="263" fg:w="1"/><text x="40.3415%" y="335.50"></text></g><g><title>deno`void v8::internal::LookupIterator::NextInternal&lt;false&gt; (1 samples, 0.15%)</title><rect x="40.0915%" y="309" width="0.1524%" height="15" fill="rgb(246,142,3)" fg:x="263" fg:w="1"/><text x="40.3415%" y="319.50"></text></g><g><title>0x110014060 (1 samples, 0.15%)</title><rect x="40.2439%" y="389" width="0.1524%" height="15" fill="rgb(241,25,7)" fg:x="264" fg:w="1"/><text x="40.4939%" y="399.50"></text></g><g><title>deno`Builtins_InterpreterEntryTrampoline (1 samples, 0.15%)</title><rect x="40.2439%" y="373" width="0.1524%" height="15" fill="rgb(242,119,39)" fg:x="264" fg:w="1"/><text x="40.4939%" y="383.50"></text></g><g><title>deno`Builtins_BaselineOutOfLinePrologue (1 samples, 0.15%)</title><rect x="40.2439%" y="357" width="0.1524%" height="15" fill="rgb(241,98,45)" fg:x="264" fg:w="1"/><text x="40.4939%" y="367.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.15%)</title><rect x="40.2439%" y="341" width="0.1524%" height="15" fill="rgb(254,28,30)" fg:x="264" fg:w="1"/><text x="40.4939%" y="351.50"></text></g><g><title>deno`v8::internal::Runtime_CompileOptimized (1 samples, 0.15%)</title><rect x="40.2439%" y="325" width="0.1524%" height="15" fill="rgb(241,142,54)" fg:x="264" fg:w="1"/><text x="40.4939%" y="335.50"></text></g><g><title>deno`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="40.2439%" y="309" width="0.1524%" height="15" fill="rgb(222,85,15)" fg:x="264" fg:w="1"/><text x="40.4939%" y="319.50"></text></g><g><title>deno`v8::internal::compiler::Pipeline::NewCompilationJob(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="40.2439%" y="293" width="0.1524%" height="15" fill="rgb(210,85,47)" fg:x="264" fg:w="1"/><text x="40.4939%" y="303.50"></text></g><g><title>0x110014174 (1 samples, 0.15%)</title><rect x="40.3963%" y="389" width="0.1524%" height="15" fill="rgb(224,206,25)" fg:x="265" fg:w="1"/><text x="40.6463%" y="399.50"></text></g><g><title>deno`Builtins_BaselineLeaveFrame (1 samples, 0.15%)</title><rect x="40.3963%" y="373" width="0.1524%" height="15" fill="rgb(243,201,19)" fg:x="265" fg:w="1"/><text x="40.6463%" y="383.50"></text></g><g><title>0x1100152f4 (1 samples, 0.15%)</title><rect x="40.5488%" y="389" width="0.1524%" height="15" fill="rgb(236,59,4)" fg:x="266" fg:w="1"/><text x="40.7988%" y="399.50"></text></g><g><title>deno`Builtins_LoadIC (1 samples, 0.15%)</title><rect x="40.5488%" y="373" width="0.1524%" height="15" fill="rgb(254,179,45)" fg:x="266" fg:w="1"/><text x="40.7988%" y="383.50"></text></g><g><title>0x110012070 (4 samples, 0.61%)</title><rect x="40.2439%" y="405" width="0.6098%" height="15" fill="rgb(226,14,10)" fg:x="264" fg:w="4"/><text x="40.4939%" y="415.50"></text></g><g><title>0x11001c978 (1 samples, 0.15%)</title><rect x="40.7012%" y="389" width="0.1524%" height="15" fill="rgb(244,27,41)" fg:x="267" fg:w="1"/><text x="40.9512%" y="399.50"></text></g><g><title>deno`Builtins_HasProperty (1 samples, 0.15%)</title><rect x="40.7012%" y="373" width="0.1524%" height="15" fill="rgb(235,35,32)" fg:x="267" fg:w="1"/><text x="40.9512%" y="383.50"></text></g><g><title>0x110017d9c (5 samples, 0.76%)</title><rect x="40.2439%" y="421" width="0.7622%" height="15" fill="rgb(218,68,31)" fg:x="264" fg:w="5"/><text x="40.4939%" y="431.50"></text></g><g><title>deno`Builtins_CallFunction_ReceiverIsNotNullOrUndefined (1 samples, 0.15%)</title><rect x="40.8537%" y="405" width="0.1524%" height="15" fill="rgb(207,120,37)" fg:x="268" fg:w="1"/><text x="41.1037%" y="415.50"></text></g><g><title>0x1100212bc (1 samples, 0.15%)</title><rect x="41.0061%" y="421" width="0.1524%" height="15" fill="rgb(227,98,0)" fg:x="269" fg:w="1"/><text x="41.2561%" y="431.50"></text></g><g><title>0x110021390 (1 samples, 0.15%)</title><rect x="41.1585%" y="421" width="0.1524%" height="15" fill="rgb(207,7,3)" fg:x="270" fg:w="1"/><text x="41.4085%" y="431.50"></text></g><g><title>0x110021468 (1 samples, 0.15%)</title><rect x="41.3110%" y="421" width="0.1524%" height="15" fill="rgb(206,98,19)" fg:x="271" fg:w="1"/><text x="41.5610%" y="431.50"></text></g><g><title>deno`Builtins_MapPrototypeSet (1 samples, 0.15%)</title><rect x="41.3110%" y="405" width="0.1524%" height="15" fill="rgb(217,5,26)" fg:x="271" fg:w="1"/><text x="41.5610%" y="415.50"></text></g><g><title>deno`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.15%)</title><rect x="42.0732%" y="245" width="0.1524%" height="15" fill="rgb(235,190,38)" fg:x="276" fg:w="1"/><text x="42.3232%" y="255.50"></text></g><g><title>deno`tokio::net::tcp::stream::TcpStream::poll_write_priv (1 samples, 0.15%)</title><rect x="42.3780%" y="229" width="0.1524%" height="15" fill="rgb(247,86,24)" fg:x="278" fg:w="1"/><text x="42.6280%" y="239.50"></text></g><g><title>deno`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.15%)</title><rect x="42.3780%" y="213" width="0.1524%" height="15" fill="rgb(205,101,16)" fg:x="278" fg:w="1"/><text x="42.6280%" y="223.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (59 samples, 8.99%)</title><rect x="41.7683%" y="325" width="8.9939%" height="15" fill="rgb(246,168,33)" fg:x="274" fg:w="59"/><text x="42.0183%" y="335.50">deno`&lt;core::f..</text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (59 samples, 8.99%)</title><rect x="41.7683%" y="309" width="8.9939%" height="15" fill="rgb(231,114,1)" fg:x="274" fg:w="59"/><text x="42.0183%" y="319.50">deno`&lt;core::f..</text></g><g><title>deno`futures_util::stream::stream::split::SplitSink&lt;S,Item&gt;::poll_flush_slot (59 samples, 8.99%)</title><rect x="41.7683%" y="293" width="8.9939%" height="15" fill="rgb(207,184,53)" fg:x="274" fg:w="59"/><text x="42.0183%" y="303.50">deno`futures_..</text></g><g><title>deno`tungstenite::protocol::WebSocketContext::write_pending (57 samples, 8.69%)</title><rect x="42.0732%" y="277" width="8.6890%" height="15" fill="rgb(224,95,51)" fg:x="276" fg:w="57"/><text x="42.3232%" y="287.50">deno`tungste..</text></g><g><title>deno`tungstenite::protocol::WebSocketContext::send_one_frame (57 samples, 8.69%)</title><rect x="42.0732%" y="261" width="8.6890%" height="15" fill="rgb(212,188,45)" fg:x="276" fg:w="57"/><text x="42.3232%" y="271.50">deno`tungste..</text></g><g><title>deno`tungstenite::protocol::frame::FrameCodec::write_pending (56 samples, 8.54%)</title><rect x="42.2256%" y="245" width="8.5366%" height="15" fill="rgb(223,154,38)" fg:x="277" fg:w="56"/><text x="42.4756%" y="255.50">deno`tungste..</text></g><g><title>libsystem_kernel.dylib`__sendto (54 samples, 8.23%)</title><rect x="42.5305%" y="229" width="8.2317%" height="15" fill="rgb(251,22,52)" fg:x="279" fg:w="54"/><text x="42.7805%" y="239.50">libsystem_k..</text></g><g><title>deno`deno_core::runtime::JsRealm::state (1 samples, 0.15%)</title><rect x="50.7622%" y="325" width="0.1524%" height="15" fill="rgb(229,209,22)" fg:x="333" fg:w="1"/><text x="51.0122%" y="335.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.15%)</title><rect x="50.9146%" y="293" width="0.1524%" height="15" fill="rgb(234,138,34)" fg:x="334" fg:w="1"/><text x="51.1646%" y="303.50"></text></g><g><title>deno`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (2 samples, 0.30%)</title><rect x="50.9146%" y="325" width="0.3049%" height="15" fill="rgb(212,95,11)" fg:x="334" fg:w="2"/><text x="51.1646%" y="335.50"></text></g><g><title>deno`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (2 samples, 0.30%)</title><rect x="50.9146%" y="309" width="0.3049%" height="15" fill="rgb(240,179,47)" fg:x="334" fg:w="2"/><text x="51.1646%" y="319.50"></text></g><g><title>deno`v8::internal::ScopeInfo::is_script_scope (1 samples, 0.15%)</title><rect x="51.0671%" y="293" width="0.1524%" height="15" fill="rgb(240,163,11)" fg:x="335" fg:w="1"/><text x="51.3171%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.15%)</title><rect x="51.2195%" y="325" width="0.1524%" height="15" fill="rgb(236,37,12)" fg:x="336" fg:w="1"/><text x="51.4695%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.15%)</title><rect x="51.2195%" y="309" width="0.1524%" height="15" fill="rgb(232,164,16)" fg:x="336" fg:w="1"/><text x="51.4695%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.15%)</title><rect x="51.2195%" y="293" width="0.1524%" height="15" fill="rgb(244,205,15)" fg:x="336" fg:w="1"/><text x="51.4695%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.30%)</title><rect x="51.3720%" y="325" width="0.3049%" height="15" fill="rgb(223,117,47)" fg:x="337" fg:w="2"/><text x="51.6220%" y="335.50"></text></g><g><title>deno`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (67 samples, 10.21%)</title><rect x="41.6159%" y="341" width="10.2134%" height="15" fill="rgb(244,107,35)" fg:x="273" fg:w="67"/><text x="41.8659%" y="351.50">deno`&lt;extern &quot;C..</text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.15%)</title><rect x="51.6768%" y="325" width="0.1524%" height="15" fill="rgb(205,140,8)" fg:x="339" fg:w="1"/><text x="51.9268%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.15%)</title><rect x="51.6768%" y="309" width="0.1524%" height="15" fill="rgb(228,84,46)" fg:x="339" fg:w="1"/><text x="51.9268%" y="319.50"></text></g><g><title>deno`DYLD-STUB$$free (1 samples, 0.15%)</title><rect x="51.8293%" y="341" width="0.1524%" height="15" fill="rgb(254,188,9)" fg:x="340" fg:w="1"/><text x="52.0793%" y="351.50"></text></g><g><title>deno`v8::internal::ExternalCallbackScope::~ExternalCallbackScope (1 samples, 0.15%)</title><rect x="51.9817%" y="341" width="0.1524%" height="15" fill="rgb(206,112,54)" fg:x="341" fg:w="1"/><text x="52.2317%" y="351.50"></text></g><g><title>0x11001f714 (71 samples, 10.82%)</title><rect x="41.4634%" y="405" width="10.8232%" height="15" fill="rgb(216,84,49)" fg:x="272" fg:w="71"/><text x="41.7134%" y="415.50">0x11001f714</text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (71 samples, 10.82%)</title><rect x="41.4634%" y="389" width="10.8232%" height="15" fill="rgb(214,194,35)" fg:x="272" fg:w="71"/><text x="41.7134%" y="399.50">deno`Builtins_CE..</text></g><g><title>deno`v8::internal::Builtin_HandleApiCall (71 samples, 10.82%)</title><rect x="41.4634%" y="373" width="10.8232%" height="15" fill="rgb(249,28,3)" fg:x="272" fg:w="71"/><text x="41.7134%" y="383.50">deno`v8::interna..</text></g><g><title>deno`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (71 samples, 10.82%)</title><rect x="41.4634%" y="357" width="10.8232%" height="15" fill="rgb(222,56,52)" fg:x="272" fg:w="71"/><text x="41.7134%" y="367.50">deno`v8::interna..</text></g><g><title>deno`v8__FunctionCallbackInfo__GetArgument (1 samples, 0.15%)</title><rect x="52.1341%" y="341" width="0.1524%" height="15" fill="rgb(245,217,50)" fg:x="342" fg:w="1"/><text x="52.3841%" y="351.50"></text></g><g><title>0x11001f780 (1 samples, 0.15%)</title><rect x="52.2866%" y="405" width="0.1524%" height="15" fill="rgb(213,201,24)" fg:x="343" fg:w="1"/><text x="52.5366%" y="415.50"></text></g><g><title>deno`Builtins_PerformPromiseThen (1 samples, 0.15%)</title><rect x="52.2866%" y="389" width="0.1524%" height="15" fill="rgb(248,116,28)" fg:x="343" fg:w="1"/><text x="52.5366%" y="399.50"></text></g><g><title>0x11001f8f4 (1 samples, 0.15%)</title><rect x="52.4390%" y="405" width="0.1524%" height="15" fill="rgb(219,72,43)" fg:x="344" fg:w="1"/><text x="52.6890%" y="415.50"></text></g><g><title>0x11001f908 (1 samples, 0.15%)</title><rect x="52.5915%" y="405" width="0.1524%" height="15" fill="rgb(209,138,14)" fg:x="345" fg:w="1"/><text x="52.8415%" y="415.50"></text></g><g><title>deno`Builtins_PerformPromiseThen (1 samples, 0.15%)</title><rect x="52.5915%" y="389" width="0.1524%" height="15" fill="rgb(222,18,33)" fg:x="345" fg:w="1"/><text x="52.8415%" y="399.50"></text></g><g><title>0x11002149c (75 samples, 11.43%)</title><rect x="41.4634%" y="421" width="11.4329%" height="15" fill="rgb(213,199,7)" fg:x="272" fg:w="75"/><text x="41.7134%" y="431.50">0x11002149c</text></g><g><title>deno`Builtins_LoadIC (1 samples, 0.15%)</title><rect x="52.7439%" y="405" width="0.1524%" height="15" fill="rgb(250,110,10)" fg:x="346" fg:w="1"/><text x="52.9939%" y="415.50"></text></g><g><title>0x11002195c (1 samples, 0.15%)</title><rect x="52.8963%" y="421" width="0.1524%" height="15" fill="rgb(248,123,6)" fg:x="347" fg:w="1"/><text x="53.1463%" y="431.50"></text></g><g><title>deno`v8::internal::IC::UpdateState(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="53.0488%" y="373" width="0.1524%" height="15" fill="rgb(206,91,31)" fg:x="348" fg:w="1"/><text x="53.2988%" y="383.50"></text></g><g><title>deno`v8::internal::IC::SetCache(v8::internal::Handle (1 samples, 0.15%)</title><rect x="53.5061%" y="341" width="0.1524%" height="15" fill="rgb(211,154,13)" fg:x="351" fg:w="1"/><text x="53.7561%" y="351.50"></text></g><g><title>deno`v8::internal::LoadIC::ComputeHandler (1 samples, 0.15%)</title><rect x="53.6585%" y="341" width="0.1524%" height="15" fill="rgb(225,148,7)" fg:x="352" fg:w="1"/><text x="53.9085%" y="351.50"></text></g><g><title>deno`v8::internal::LoadIC::UpdateCaches (4 samples, 0.61%)</title><rect x="53.3537%" y="357" width="0.6098%" height="15" fill="rgb(220,160,43)" fg:x="350" fg:w="4"/><text x="53.6037%" y="367.50"></text></g><g><title>deno`v8::internal::StubCache::Set (1 samples, 0.15%)</title><rect x="53.8110%" y="341" width="0.1524%" height="15" fill="rgb(213,52,39)" fg:x="353" fg:w="1"/><text x="54.0610%" y="351.50"></text></g><g><title>0x110022630 (7 samples, 1.07%)</title><rect x="53.0488%" y="421" width="1.0671%" height="15" fill="rgb(243,137,7)" fg:x="348" fg:w="7"/><text x="53.2988%" y="431.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (7 samples, 1.07%)</title><rect x="53.0488%" y="405" width="1.0671%" height="15" fill="rgb(230,79,13)" fg:x="348" fg:w="7"/><text x="53.2988%" y="415.50"></text></g><g><title>deno`v8::internal::Runtime_LoadIC_Miss (7 samples, 1.07%)</title><rect x="53.0488%" y="389" width="1.0671%" height="15" fill="rgb(247,105,23)" fg:x="348" fg:w="7"/><text x="53.2988%" y="399.50"></text></g><g><title>deno`v8::internal::LoadIC::Load(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, bool, v8::internal::Handle (6 samples, 0.91%)</title><rect x="53.2012%" y="373" width="0.9146%" height="15" fill="rgb(223,179,41)" fg:x="349" fg:w="6"/><text x="53.4512%" y="383.50"></text></g><g><title>deno`v8::internal::Object::GetProperty (1 samples, 0.15%)</title><rect x="53.9634%" y="357" width="0.1524%" height="15" fill="rgb(218,9,34)" fg:x="354" fg:w="1"/><text x="54.2134%" y="367.50"></text></g><g><title>deno`v8::internal::FeedbackVector::GetKind (1 samples, 0.15%)</title><rect x="54.1159%" y="389" width="0.1524%" height="15" fill="rgb(222,106,8)" fg:x="355" fg:w="1"/><text x="54.3659%" y="399.50"></text></g><g><title>deno`v8::internal::LoadIC::UpdateCaches (1 samples, 0.15%)</title><rect x="54.2683%" y="357" width="0.1524%" height="15" fill="rgb(211,220,0)" fg:x="356" fg:w="1"/><text x="54.5183%" y="367.50"></text></g><g><title>deno`v8::internal::LoadIC::ComputeHandler (1 samples, 0.15%)</title><rect x="54.2683%" y="341" width="0.1524%" height="15" fill="rgb(229,52,16)" fg:x="356" fg:w="1"/><text x="54.5183%" y="351.50"></text></g><g><title>0x11002264c (3 samples, 0.46%)</title><rect x="54.1159%" y="421" width="0.4573%" height="15" fill="rgb(212,155,18)" fg:x="355" fg:w="3"/><text x="54.3659%" y="431.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (3 samples, 0.46%)</title><rect x="54.1159%" y="405" width="0.4573%" height="15" fill="rgb(242,21,14)" fg:x="355" fg:w="3"/><text x="54.3659%" y="415.50"></text></g><g><title>deno`v8::internal::Runtime_LoadIC_Miss (2 samples, 0.30%)</title><rect x="54.2683%" y="389" width="0.3049%" height="15" fill="rgb(222,19,48)" fg:x="356" fg:w="2"/><text x="54.5183%" y="399.50"></text></g><g><title>deno`v8::internal::LoadIC::Load(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, bool, v8::internal::Handle (2 samples, 0.30%)</title><rect x="54.2683%" y="373" width="0.3049%" height="15" fill="rgb(232,45,27)" fg:x="356" fg:w="2"/><text x="54.5183%" y="383.50"></text></g><g><title>deno`v8::internal::Object::GetProperty (1 samples, 0.15%)</title><rect x="54.4207%" y="357" width="0.1524%" height="15" fill="rgb(249,103,42)" fg:x="357" fg:w="1"/><text x="54.6707%" y="367.50"></text></g><g><title>deno`v8::internal::LookupIterator::FetchValue (1 samples, 0.15%)</title><rect x="54.4207%" y="341" width="0.1524%" height="15" fill="rgb(246,81,33)" fg:x="357" fg:w="1"/><text x="54.6707%" y="351.50"></text></g><g><title>0x11001e9bc (1 samples, 0.15%)</title><rect x="54.5732%" y="405" width="0.1524%" height="15" fill="rgb(252,33,42)" fg:x="358" fg:w="1"/><text x="54.8232%" y="415.50"></text></g><g><title>0x11001e37c (1 samples, 0.15%)</title><rect x="54.8780%" y="389" width="0.1524%" height="15" fill="rgb(209,212,41)" fg:x="360" fg:w="1"/><text x="55.1280%" y="399.50"></text></g><g><title>0x11001e47c (1 samples, 0.15%)</title><rect x="55.0305%" y="389" width="0.1524%" height="15" fill="rgb(207,154,6)" fg:x="361" fg:w="1"/><text x="55.2805%" y="399.50"></text></g><g><title>0x11001a300 (3 samples, 0.46%)</title><rect x="55.1829%" y="373" width="0.4573%" height="15" fill="rgb(223,64,47)" fg:x="362" fg:w="3"/><text x="55.4329%" y="383.50"></text></g><g><title>deno`Builtins_ObjectAssign (3 samples, 0.46%)</title><rect x="55.1829%" y="357" width="0.4573%" height="15" fill="rgb(211,161,38)" fg:x="362" fg:w="3"/><text x="55.4329%" y="367.50"></text></g><g><title>deno`Builtins_SetDataProperties (2 samples, 0.30%)</title><rect x="55.3354%" y="341" width="0.3049%" height="15" fill="rgb(219,138,40)" fg:x="363" fg:w="2"/><text x="55.5854%" y="351.50"></text></g><g><title>0x11001a4b0 (3 samples, 0.46%)</title><rect x="55.6402%" y="373" width="0.4573%" height="15" fill="rgb(241,228,46)" fg:x="365" fg:w="3"/><text x="55.8902%" y="383.50"></text></g><g><title>deno`Builtins_KeyedLoadIC_Megamorphic (3 samples, 0.46%)</title><rect x="55.6402%" y="357" width="0.4573%" height="15" fill="rgb(223,209,38)" fg:x="365" fg:w="3"/><text x="55.8902%" y="367.50"></text></g><g><title>0x11001a4d0 (1 samples, 0.15%)</title><rect x="56.0976%" y="373" width="0.1524%" height="15" fill="rgb(236,164,45)" fg:x="368" fg:w="1"/><text x="56.3476%" y="383.50"></text></g><g><title>0x11001a4f4 (1 samples, 0.15%)</title><rect x="56.2500%" y="373" width="0.1524%" height="15" fill="rgb(231,15,5)" fg:x="369" fg:w="1"/><text x="56.5000%" y="383.50"></text></g><g><title>0x11001a598 (1 samples, 0.15%)</title><rect x="56.4024%" y="373" width="0.1524%" height="15" fill="rgb(252,35,15)" fg:x="370" fg:w="1"/><text x="56.6524%" y="383.50"></text></g><g><title>0x11001a720 (1 samples, 0.15%)</title><rect x="56.5549%" y="373" width="0.1524%" height="15" fill="rgb(248,181,18)" fg:x="371" fg:w="1"/><text x="56.8049%" y="383.50"></text></g><g><title>deno`Builtins_CloneObjectIC (1 samples, 0.15%)</title><rect x="56.5549%" y="357" width="0.1524%" height="15" fill="rgb(233,39,42)" fg:x="371" fg:w="1"/><text x="56.8049%" y="367.50"></text></g><g><title>deno`Builtins_KeyedStoreIC (1 samples, 0.15%)</title><rect x="56.7073%" y="357" width="0.1524%" height="15" fill="rgb(238,110,33)" fg:x="372" fg:w="1"/><text x="56.9573%" y="367.50"></text></g><g><title>0x11001a778 (4 samples, 0.61%)</title><rect x="56.7073%" y="373" width="0.6098%" height="15" fill="rgb(233,195,10)" fg:x="372" fg:w="4"/><text x="56.9573%" y="383.50"></text></g><g><title>deno`Builtins_KeyedStoreIC_Megamorphic (3 samples, 0.46%)</title><rect x="56.8598%" y="357" width="0.4573%" height="15" fill="rgb(254,105,3)" fg:x="373" fg:w="3"/><text x="57.1098%" y="367.50"></text></g><g><title>deno`Builtins_KeyedLoadICTrampoline_Megamorphic (1 samples, 0.15%)</title><rect x="57.3171%" y="373" width="0.1524%" height="15" fill="rgb(221,225,9)" fg:x="376" fg:w="1"/><text x="57.5671%" y="383.50"></text></g><g><title>deno`Builtins_KeyedStoreIC_Megamorphic (2 samples, 0.30%)</title><rect x="57.4695%" y="373" width="0.3049%" height="15" fill="rgb(224,227,45)" fg:x="377" fg:w="2"/><text x="57.7195%" y="383.50"></text></g><g><title>deno`Builtins_StringAdd_CheckNone (2 samples, 0.30%)</title><rect x="57.7744%" y="373" width="0.3049%" height="15" fill="rgb(229,198,43)" fg:x="379" fg:w="2"/><text x="58.0244%" y="383.50"></text></g><g><title>deno`Builtins_ToBoolean (1 samples, 0.15%)</title><rect x="58.0793%" y="373" width="0.1524%" height="15" fill="rgb(206,209,35)" fg:x="381" fg:w="1"/><text x="58.3293%" y="383.50"></text></g><g><title>0x11001e4c4 (21 samples, 3.20%)</title><rect x="55.1829%" y="389" width="3.2012%" height="15" fill="rgb(245,195,53)" fg:x="362" fg:w="21"/><text x="55.4329%" y="399.50">0x1..</text></g><g><title>deno`Builtins_ToString (1 samples, 0.15%)</title><rect x="58.2317%" y="373" width="0.1524%" height="15" fill="rgb(240,92,26)" fg:x="382" fg:w="1"/><text x="58.4817%" y="383.50"></text></g><g><title>0x11001e544 (4 samples, 0.61%)</title><rect x="58.3841%" y="389" width="0.6098%" height="15" fill="rgb(207,40,23)" fg:x="383" fg:w="4"/><text x="58.6341%" y="399.50"></text></g><g><title>deno`Builtins_CopyDataProperties (4 samples, 0.61%)</title><rect x="58.3841%" y="373" width="0.6098%" height="15" fill="rgb(223,111,35)" fg:x="383" fg:w="4"/><text x="58.6341%" y="383.50"></text></g><g><title>deno`Builtins_CreateDataProperty (3 samples, 0.46%)</title><rect x="58.5366%" y="357" width="0.4573%" height="15" fill="rgb(229,147,28)" fg:x="384" fg:w="3"/><text x="58.7866%" y="367.50"></text></g><g><title>deno`v8::internal::JSDate::CurrentTimeValue (1 samples, 0.15%)</title><rect x="58.9939%" y="357" width="0.1524%" height="15" fill="rgb(211,29,28)" fg:x="387" fg:w="1"/><text x="59.2439%" y="367.50"></text></g><g><title>deno`v8::base::Time::Now (1 samples, 0.15%)</title><rect x="59.1463%" y="309" width="0.1524%" height="15" fill="rgb(228,72,33)" fg:x="388" fg:w="1"/><text x="59.3963%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.15%)</title><rect x="59.1463%" y="293" width="0.1524%" height="15" fill="rgb(205,214,31)" fg:x="388" fg:w="1"/><text x="59.3963%" y="303.50"></text></g><g><title>deno`v8::base::OS::TimeCurrentMillis (3 samples, 0.46%)</title><rect x="59.1463%" y="325" width="0.4573%" height="15" fill="rgb(224,111,15)" fg:x="388" fg:w="3"/><text x="59.3963%" y="335.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (2 samples, 0.30%)</title><rect x="59.2988%" y="309" width="0.3049%" height="15" fill="rgb(253,21,26)" fg:x="389" fg:w="2"/><text x="59.5488%" y="319.50"></text></g><g><title>deno`v8::internal::JSDate::CurrentTimeValue (5 samples, 0.76%)</title><rect x="59.1463%" y="341" width="0.7622%" height="15" fill="rgb(245,139,43)" fg:x="388" fg:w="5"/><text x="59.3963%" y="351.50"></text></g><g><title>deno`v8::base::Time::Now (2 samples, 0.30%)</title><rect x="59.6037%" y="325" width="0.3049%" height="15" fill="rgb(252,170,7)" fg:x="391" fg:w="2"/><text x="59.8537%" y="335.50"></text></g><g><title>0x11001e66c (7 samples, 1.07%)</title><rect x="58.9939%" y="389" width="1.0671%" height="15" fill="rgb(231,118,14)" fg:x="387" fg:w="7"/><text x="59.2439%" y="399.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (7 samples, 1.07%)</title><rect x="58.9939%" y="373" width="1.0671%" height="15" fill="rgb(238,83,0)" fg:x="387" fg:w="7"/><text x="59.2439%" y="383.50"></text></g><g><title>deno`v8::internal::Runtime_DateCurrentTime (6 samples, 0.91%)</title><rect x="59.1463%" y="357" width="0.9146%" height="15" fill="rgb(221,39,39)" fg:x="388" fg:w="6"/><text x="59.3963%" y="367.50"></text></g><g><title>deno`v8::internal::V8::GetCurrentPlatform (1 samples, 0.15%)</title><rect x="59.9085%" y="341" width="0.1524%" height="15" fill="rgb(222,119,46)" fg:x="393" fg:w="1"/><text x="60.1585%" y="351.50"></text></g><g><title>deno`v8::internal::JSReceiver::GetOwnPropertyDescriptor (2 samples, 0.30%)</title><rect x="60.0610%" y="309" width="0.3049%" height="15" fill="rgb(222,165,49)" fg:x="394" fg:w="2"/><text x="60.3110%" y="319.50"></text></g><g><title>deno`v8::internal::JSObject::IsExtensible(v8::internal::Handle (1 samples, 0.15%)</title><rect x="60.3659%" y="293" width="0.1524%" height="15" fill="rgb(219,113,52)" fg:x="396" fg:w="1"/><text x="60.6159%" y="303.50"></text></g><g><title>deno`v8::internal::JSObject::MigrateToMap(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (3 samples, 0.46%)</title><rect x="60.5183%" y="245" width="0.4573%" height="15" fill="rgb(214,7,15)" fg:x="397" fg:w="3"/><text x="60.7683%" y="255.50"></text></g><g><title>deno`v8::internal::JSReceiver::OrdinaryDefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::PropertyKey const&amp;, v8::internal::PropertyDescriptor*, v8::Maybe (7 samples, 1.07%)</title><rect x="60.0610%" y="325" width="1.0671%" height="15" fill="rgb(235,32,4)" fg:x="394" fg:w="7"/><text x="60.3110%" y="335.50"></text></g><g><title>deno`v8::internal::JSReceiver::OrdinaryDefineOwnProperty(v8::internal::LookupIterator*, v8::internal::PropertyDescriptor*, v8::Maybe (5 samples, 0.76%)</title><rect x="60.3659%" y="309" width="0.7622%" height="15" fill="rgb(238,90,54)" fg:x="396" fg:w="5"/><text x="60.6159%" y="319.50"></text></g><g><title>deno`v8::internal::JSReceiver::ValidateAndApplyPropertyDescriptor(v8::internal::Isolate*, v8::internal::LookupIterator*, bool, v8::internal::PropertyDescriptor*, v8::internal::PropertyDescriptor*, v8::Maybe&lt;v8::internal::ShouldThrow&gt;, v8::internal::Handle (4 samples, 0.61%)</title><rect x="60.5183%" y="293" width="0.6098%" height="15" fill="rgb(213,208,19)" fg:x="397" fg:w="4"/><text x="60.7683%" y="303.50"></text></g><g><title>deno`v8::internal::JSObject::DefineAccessor(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (4 samples, 0.61%)</title><rect x="60.5183%" y="277" width="0.6098%" height="15" fill="rgb(233,156,4)" fg:x="397" fg:w="4"/><text x="60.7683%" y="287.50"></text></g><g><title>deno`v8::internal::LookupIterator::TransitionToAccessorProperty(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (4 samples, 0.61%)</title><rect x="60.5183%" y="261" width="0.6098%" height="15" fill="rgb(207,194,5)" fg:x="397" fg:w="4"/><text x="60.7683%" y="271.50"></text></g><g><title>deno`v8::internal::Map::TransitionToAccessorProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, v8::internal::InternalIndex, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (1 samples, 0.15%)</title><rect x="60.9756%" y="245" width="0.1524%" height="15" fill="rgb(206,111,30)" fg:x="400" fg:w="1"/><text x="61.2256%" y="255.50"></text></g><g><title>deno`v8::internal::TransitionsAccessor::SearchTransition(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="60.9756%" y="229" width="0.1524%" height="15" fill="rgb(243,70,54)" fg:x="400" fg:w="1"/><text x="61.2256%" y="239.50"></text></g><g><title>deno`v8::internal::JSReceiver::DefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyDescriptor*, v8::Maybe (8 samples, 1.22%)</title><rect x="60.0610%" y="341" width="1.2195%" height="15" fill="rgb(242,28,8)" fg:x="394" fg:w="8"/><text x="60.3110%" y="351.50"></text></g><g><title>deno`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long, v8::internal::Handle (1 samples, 0.15%)</title><rect x="61.1280%" y="325" width="0.1524%" height="15" fill="rgb(219,106,18)" fg:x="401" fg:w="1"/><text x="61.3780%" y="335.50"></text></g><g><title>deno`v8::internal::JSObject::FastPropertyAt(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="61.4329%" y="293" width="0.1524%" height="15" fill="rgb(244,222,10)" fg:x="403" fg:w="1"/><text x="61.6829%" y="303.50"></text></g><g><title>deno`v8::internal::Object::GetProperty (2 samples, 0.30%)</title><rect x="61.4329%" y="309" width="0.3049%" height="15" fill="rgb(236,179,52)" fg:x="403" fg:w="2"/><text x="61.6829%" y="319.50"></text></g><g><title>deno`v8::internal::LookupIterator::FetchValue (1 samples, 0.15%)</title><rect x="61.5854%" y="293" width="0.1524%" height="15" fill="rgb(213,23,39)" fg:x="404" fg:w="1"/><text x="61.8354%" y="303.50"></text></g><g><title>deno`v8::internal::JSObject::FastPropertyAt(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.15%)</title><rect x="61.5854%" y="277" width="0.1524%" height="15" fill="rgb(238,48,10)" fg:x="404" fg:w="1"/><text x="61.8354%" y="287.50"></text></g><g><title>deno`void v8::internal::LookupIterator::NextInternal&lt;false&gt; (1 samples, 0.15%)</title><rect x="61.7378%" y="309" width="0.1524%" height="15" fill="rgb(251,196,23)" fg:x="405" fg:w="1"/><text x="61.9878%" y="319.50"></text></g><g><title>deno`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (1 samples, 0.15%)</title><rect x="61.7378%" y="293" width="0.1524%" height="15" fill="rgb(250,152,24)" fg:x="405" fg:w="1"/><text x="61.9878%" y="303.50"></text></g><g><title>0x11001e798 (13 samples, 1.98%)</title><rect x="60.0610%" y="389" width="1.9817%" height="15" fill="rgb(209,150,17)" fg:x="394" fg:w="13"/><text x="60.3110%" y="399.50">0..</text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (13 samples, 1.98%)</title><rect x="60.0610%" y="373" width="1.9817%" height="15" fill="rgb(234,202,34)" fg:x="394" fg:w="13"/><text x="60.3110%" y="383.50">d..</text></g><g><title>deno`v8::internal::Builtin_ReflectDefineProperty (13 samples, 1.98%)</title><rect x="60.0610%" y="357" width="1.9817%" height="15" fill="rgb(253,148,53)" fg:x="394" fg:w="13"/><text x="60.3110%" y="367.50">d..</text></g><g><title>deno`v8::internal::PropertyDescriptor::ToPropertyDescriptor(v8::internal::Isolate*, v8::internal::Handle (5 samples, 0.76%)</title><rect x="61.2805%" y="341" width="0.7622%" height="15" fill="rgb(218,129,16)" fg:x="402" fg:w="5"/><text x="61.5305%" y="351.50"></text></g><g><title>deno`v8::internal::(anonymous namespace)::GetPropertyIfPresent(v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::Handle (4 samples, 0.61%)</title><rect x="61.4329%" y="325" width="0.6098%" height="15" fill="rgb(216,85,19)" fg:x="403" fg:w="4"/><text x="61.6829%" y="335.50"></text></g><g><title>deno`void v8::internal::LookupIterator::Start&lt;false&gt; (1 samples, 0.15%)</title><rect x="61.8902%" y="309" width="0.1524%" height="15" fill="rgb(235,228,7)" fg:x="406" fg:w="1"/><text x="62.1402%" y="319.50"></text></g><g><title>deno`v8::internal::LookupIterator::State v8::internal::LookupIterator::LookupInRegularHolder&lt;false&gt; (1 samples, 0.15%)</title><rect x="61.8902%" y="293" width="0.1524%" height="15" fill="rgb(245,175,0)" fg:x="406" fg:w="1"/><text x="62.1402%" y="303.50"></text></g><g><title>0x110022854 (50 samples, 7.62%)</title><rect x="54.5732%" y="421" width="7.6220%" height="15" fill="rgb(208,168,36)" fg:x="358" fg:w="50"/><text x="54.8232%" y="431.50">0x110022854</text></g><g><title>deno`construct_stub_create_deopt_addr (49 samples, 7.47%)</title><rect x="54.7256%" y="405" width="7.4695%" height="15" fill="rgb(246,171,24)" fg:x="359" fg:w="49"/><text x="54.9756%" y="415.50">deno`const..</text></g><g><title>0x11001eacc (1 samples, 0.15%)</title><rect x="62.0427%" y="389" width="0.1524%" height="15" fill="rgb(215,142,24)" fg:x="407" fg:w="1"/><text x="62.2927%" y="399.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.15%)</title><rect x="62.0427%" y="373" width="0.1524%" height="15" fill="rgb(250,187,7)" fg:x="407" fg:w="1"/><text x="62.2927%" y="383.50"></text></g><g><title>deno`v8::internal::Runtime_AllocateInYoungGeneration (1 samples, 0.15%)</title><rect x="62.0427%" y="357" width="0.1524%" height="15" fill="rgb(228,66,33)" fg:x="407" fg:w="1"/><text x="62.2927%" y="367.50"></text></g><g><title>deno`v8::internal::Factory::NewFillerObject (1 samples, 0.15%)</title><rect x="62.0427%" y="341" width="0.1524%" height="15" fill="rgb(234,215,21)" fg:x="407" fg:w="1"/><text x="62.2927%" y="351.50"></text></g><g><title>deno`v8::internal::AllocationCounter::InvokeAllocationObservers (1 samples, 0.15%)</title><rect x="62.0427%" y="325" width="0.1524%" height="15" fill="rgb(222,191,20)" fg:x="407" fg:w="1"/><text x="62.2927%" y="335.50"></text></g><g><title>deno`v8::internal::ScavengeJob::ScheduleTaskIfNeeded (1 samples, 0.15%)</title><rect x="62.0427%" y="309" width="0.1524%" height="15" fill="rgb(245,79,54)" fg:x="407" fg:w="1"/><text x="62.2927%" y="319.50"></text></g><g><title>deno`v8::internal::MemoryChunkLayout::AllocatableMemoryInDataPage (1 samples, 0.15%)</title><rect x="62.0427%" y="293" width="0.1524%" height="15" fill="rgb(240,10,37)" fg:x="407" fg:w="1"/><text x="62.2927%" y="303.50"></text></g><g><title>0x11001cadc (1 samples, 0.15%)</title><rect x="62.1951%" y="405" width="0.1524%" height="15" fill="rgb(214,192,32)" fg:x="408" fg:w="1"/><text x="62.4451%" y="415.50"></text></g><g><title>0x11001caf8 (2 samples, 0.30%)</title><rect x="62.3476%" y="405" width="0.3049%" height="15" fill="rgb(209,36,54)" fg:x="409" fg:w="2"/><text x="62.5976%" y="415.50"></text></g><g><title>deno`Builtins_HasProperty (2 samples, 0.30%)</title><rect x="62.3476%" y="389" width="0.3049%" height="15" fill="rgb(220,10,11)" fg:x="409" fg:w="2"/><text x="62.5976%" y="399.50"></text></g><g><title>0x11001cb58 (1 samples, 0.15%)</title><rect x="62.6524%" y="405" width="0.1524%" height="15" fill="rgb(221,106,17)" fg:x="411" fg:w="1"/><text x="62.9024%" y="415.50"></text></g><g><title>0x1100198cc (1 samples, 0.15%)</title><rect x="62.6524%" y="389" width="0.1524%" height="15" fill="rgb(251,142,44)" fg:x="411" fg:w="1"/><text x="62.9024%" y="399.50"></text></g><g><title>deno`Builtins_HasProperty (1 samples, 0.15%)</title><rect x="62.6524%" y="373" width="0.1524%" height="15" fill="rgb(238,13,15)" fg:x="411" fg:w="1"/><text x="62.9024%" y="383.50"></text></g><g><title>0x11001ccf0 (2 samples, 0.30%)</title><rect x="62.8049%" y="405" width="0.3049%" height="15" fill="rgb(208,107,27)" fg:x="412" fg:w="2"/><text x="63.0549%" y="415.50"></text></g><g><title>deno`Builtins_ArrayPrototypePush (2 samples, 0.30%)</title><rect x="62.8049%" y="389" width="0.3049%" height="15" fill="rgb(205,136,37)" fg:x="412" fg:w="2"/><text x="63.0549%" y="399.50"></text></g><g><title>0x11001cd94 (1 samples, 0.15%)</title><rect x="63.1098%" y="405" width="0.1524%" height="15" fill="rgb(250,205,27)" fg:x="414" fg:w="1"/><text x="63.3598%" y="415.50"></text></g><g><title>deno`Builtins_HasProperty (1 samples, 0.15%)</title><rect x="63.1098%" y="389" width="0.1524%" height="15" fill="rgb(210,80,43)" fg:x="414" fg:w="1"/><text x="63.3598%" y="399.50"></text></g><g><title>0x11001cde8 (1 samples, 0.15%)</title><rect x="63.2622%" y="405" width="0.1524%" height="15" fill="rgb(247,160,36)" fg:x="415" fg:w="1"/><text x="63.5122%" y="415.50"></text></g><g><title>deno`Builtins_HasProperty (1 samples, 0.15%)</title><rect x="63.2622%" y="389" width="0.1524%" height="15" fill="rgb(234,13,49)" fg:x="415" fg:w="1"/><text x="63.5122%" y="399.50"></text></g><g><title>0x11001d050 (1 samples, 0.15%)</title><rect x="63.4146%" y="405" width="0.1524%" height="15" fill="rgb(234,122,0)" fg:x="416" fg:w="1"/><text x="63.6646%" y="415.50"></text></g><g><title>deno`Builtins_HasProperty (1 samples, 0.15%)</title><rect x="63.4146%" y="389" width="0.1524%" height="15" fill="rgb(207,146,38)" fg:x="416" fg:w="1"/><text x="63.6646%" y="399.50"></text></g><g><title>deno`Builtins_ArrayPrototypeSlice (2 samples, 0.30%)</title><rect x="63.5671%" y="373" width="0.3049%" height="15" fill="rgb(207,177,25)" fg:x="417" fg:w="2"/><text x="63.8171%" y="383.50"></text></g><g><title>deno`Builtins_CloneFastJSArray (1 samples, 0.15%)</title><rect x="63.7195%" y="357" width="0.1524%" height="15" fill="rgb(211,178,42)" fg:x="418" fg:w="1"/><text x="63.9695%" y="367.50"></text></g><g><title>0x110020774 (3 samples, 0.46%)</title><rect x="63.5671%" y="389" width="0.4573%" height="15" fill="rgb(230,69,54)" fg:x="417" fg:w="3"/><text x="63.8171%" y="399.50"></text></g><g><title>deno`Builtins_ToInteger (1 samples, 0.15%)</title><rect x="63.8720%" y="373" width="0.1524%" height="15" fill="rgb(214,135,41)" fg:x="419" fg:w="1"/><text x="64.1220%" y="383.50"></text></g><g><title>0x11002077c (1 samples, 0.15%)</title><rect x="64.0244%" y="389" width="0.1524%" height="15" fill="rgb(237,67,25)" fg:x="420" fg:w="1"/><text x="64.2744%" y="399.50"></text></g><g><title>0x110024a3c (1 samples, 0.15%)</title><rect x="64.1768%" y="373" width="0.1524%" height="15" fill="rgb(222,189,50)" fg:x="421" fg:w="1"/><text x="64.4268%" y="383.50"></text></g><g><title>deno`Builtins_CompileLazy (1 samples, 0.15%)</title><rect x="64.1768%" y="357" width="0.1524%" height="15" fill="rgb(245,148,34)" fg:x="421" fg:w="1"/><text x="64.4268%" y="367.50"></text></g><g><title>0x110020ab0 (2 samples, 0.30%)</title><rect x="64.1768%" y="389" width="0.3049%" height="15" fill="rgb(222,29,6)" fg:x="421" fg:w="2"/><text x="64.4268%" y="399.50"></text></g><g><title>0x110024fc0 (1 samples, 0.15%)</title><rect x="64.3293%" y="373" width="0.1524%" height="15" fill="rgb(221,189,43)" fg:x="422" fg:w="1"/><text x="64.5793%" y="383.50"></text></g><g><title>0x11001d608 (7 samples, 1.07%)</title><rect x="63.5671%" y="405" width="1.0671%" height="15" fill="rgb(207,36,27)" fg:x="417" fg:w="7"/><text x="63.8171%" y="415.50"></text></g><g><title>0x110020ad4 (1 samples, 0.15%)</title><rect x="64.4817%" y="389" width="0.1524%" height="15" fill="rgb(217,90,24)" fg:x="423" fg:w="1"/><text x="64.7317%" y="399.50"></text></g><g><title>0x11001d7a8 (1 samples, 0.15%)</title><rect x="64.6341%" y="405" width="0.1524%" height="15" fill="rgb(224,66,35)" fg:x="424" fg:w="1"/><text x="64.8841%" y="415.50"></text></g><g><title>0x110022a38 (18 samples, 2.74%)</title><rect x="62.1951%" y="421" width="2.7439%" height="15" fill="rgb(221,13,50)" fg:x="408" fg:w="18"/><text x="62.4451%" y="431.50">0x..</text></g><g><title>deno`Builtins_HasProperty (1 samples, 0.15%)</title><rect x="64.7866%" y="405" width="0.1524%" height="15" fill="rgb(236,68,49)" fg:x="425" fg:w="1"/><text x="65.0366%" y="415.50"></text></g><g><title>deno`v8::internal::ExternalCallbackScope::ExternalCallbackScope (1 samples, 0.15%)</title><rect x="64.9390%" y="357" width="0.1524%" height="15" fill="rgb(229,146,28)" fg:x="426" fg:w="1"/><text x="65.1890%" y="367.50"></text></g><g><title>deno`deno_core::async_cancel::internal::Node::register (1 samples, 0.15%)</title><rect x="65.5488%" y="293" width="0.1524%" height="15" fill="rgb(225,31,38)" fg:x="430" fg:w="1"/><text x="65.7988%" y="303.50"></text></g><g><title>deno`tungstenite::protocol::WebSocketContext::write_pending (3 samples, 0.46%)</title><rect x="65.7012%" y="293" width="0.4573%" height="15" fill="rgb(250,208,3)" fg:x="431" fg:w="3"/><text x="65.9512%" y="303.50"></text></g><g><title>deno`tungstenite::protocol::frame::FrameCodec::write_pending (2 samples, 0.30%)</title><rect x="65.8537%" y="277" width="0.3049%" height="15" fill="rgb(246,54,23)" fg:x="432" fg:w="2"/><text x="66.1037%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.15%)</title><rect x="66.1585%" y="293" width="0.1524%" height="15" fill="rgb(243,76,11)" fg:x="434" fg:w="1"/><text x="66.4085%" y="303.50"></text></g><g><title>deno`&lt;deno_core::async_cancel::Cancelable&lt;F&gt; as core::future::future::Future&gt;::poll (7 samples, 1.07%)</title><rect x="65.3963%" y="309" width="1.0671%" height="15" fill="rgb(245,21,50)" fg:x="429" fg:w="7"/><text x="65.6463%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.15%)</title><rect x="66.3110%" y="293" width="0.1524%" height="15" fill="rgb(228,9,43)" fg:x="435" fg:w="1"/><text x="66.5610%" y="303.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 1.37%)</title><rect x="65.2439%" y="325" width="1.3720%" height="15" fill="rgb(208,100,47)" fg:x="428" fg:w="9"/><text x="65.4939%" y="335.50"></text></g><g><title>deno`futures_task::noop_waker::noop_clone (1 samples, 0.15%)</title><rect x="66.4634%" y="309" width="0.1524%" height="15" fill="rgb(232,26,8)" fg:x="436" fg:w="1"/><text x="66.7134%" y="319.50"></text></g><g><title>deno`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (11 samples, 1.68%)</title><rect x="65.0915%" y="341" width="1.6768%" height="15" fill="rgb(216,166,38)" fg:x="427" fg:w="11"/><text x="65.3415%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.15%)</title><rect x="66.6159%" y="325" width="0.1524%" height="15" fill="rgb(251,202,51)" fg:x="437" fg:w="1"/><text x="66.8659%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.15%)</title><rect x="66.6159%" y="309" width="0.1524%" height="15" fill="rgb(254,216,34)" fg:x="437" fg:w="1"/><text x="66.8659%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.15%)</title><rect x="66.6159%" y="293" width="0.1524%" height="15" fill="rgb(251,32,27)" fg:x="437" fg:w="1"/><text x="66.8659%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.15%)</title><rect x="66.6159%" y="277" width="0.1524%" height="15" fill="rgb(208,127,28)" fg:x="437" fg:w="1"/><text x="66.8659%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.15%)</title><rect x="66.6159%" y="261" width="0.1524%" height="15" fill="rgb(224,137,22)" fg:x="437" fg:w="1"/><text x="66.8659%" y="271.50"></text></g><g><title>deno`core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;deno_core::runtime::JsRuntimeState&gt;&gt;&gt; (2 samples, 0.30%)</title><rect x="66.7683%" y="341" width="0.3049%" height="15" fill="rgb(254,70,32)" fg:x="438" fg:w="2"/><text x="67.0183%" y="351.50"></text></g><g><title>deno`serde_v8::de::from_v8 (1 samples, 0.15%)</title><rect x="67.0732%" y="341" width="0.1524%" height="15" fill="rgb(229,75,37)" fg:x="440" fg:w="1"/><text x="67.3232%" y="351.50"></text></g><g><title>0x11001b794 (16 samples, 2.44%)</title><rect x="64.9390%" y="405" width="2.4390%" height="15" fill="rgb(252,64,23)" fg:x="426" fg:w="16"/><text x="65.1890%" y="415.50">0x..</text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (16 samples, 2.44%)</title><rect x="64.9390%" y="389" width="2.4390%" height="15" fill="rgb(232,162,48)" fg:x="426" fg:w="16"/><text x="65.1890%" y="399.50">de..</text></g><g><title>deno`v8::internal::Builtin_HandleApiCall (16 samples, 2.44%)</title><rect x="64.9390%" y="373" width="2.4390%" height="15" fill="rgb(246,160,12)" fg:x="426" fg:w="16"/><text x="65.1890%" y="383.50">de..</text></g><g><title>deno`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (15 samples, 2.29%)</title><rect x="65.0915%" y="357" width="2.2866%" height="15" fill="rgb(247,166,0)" fg:x="427" fg:w="15"/><text x="65.3415%" y="367.50">d..</text></g><g><title>deno`v8::Value::IsInt32 (1 samples, 0.15%)</title><rect x="67.2256%" y="341" width="0.1524%" height="15" fill="rgb(249,219,21)" fg:x="441" fg:w="1"/><text x="67.4756%" y="351.50"></text></g><g><title>0x11001baf0 (1 samples, 0.15%)</title><rect x="67.3780%" y="405" width="0.1524%" height="15" fill="rgb(205,209,3)" fg:x="442" fg:w="1"/><text x="67.6280%" y="415.50"></text></g><g><title>deno`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.15%)</title><rect x="67.3780%" y="389" width="0.1524%" height="15" fill="rgb(243,44,1)" fg:x="442" fg:w="1"/><text x="67.6280%" y="399.50"></text></g><g><title>deno`v8::internal::Runtime_AllocateInYoungGeneration (1 samples, 0.15%)</title><rect x="67.3780%" y="373" width="0.1524%" height="15" fill="rgb(206,159,16)" fg:x="442" fg:w="1"/><text x="67.6280%" y="383.50"></text></g><g><title>deno`v8::internal::Factory::NewFillerObject (1 samples, 0.15%)</title><rect x="67.3780%" y="357" width="0.1524%" height="15" fill="rgb(244,77,30)" fg:x="442" fg:w="1"/><text x="67.6280%" y="367.50"></text></g><g><title>deno`v8::internal::SemiSpaceNewSpace::EnsureAllocation (1 samples, 0.15%)</title><rect x="67.3780%" y="341" width="0.1524%" height="15" fill="rgb(218,69,12)" fg:x="442" fg:w="1"/><text x="67.6280%" y="351.50"></text></g><g><title>deno`v8::internal::SemiSpaceNewSpace::AddFreshPage (1 samples, 0.15%)</title><rect x="67.3780%" y="325" width="0.1524%" height="15" fill="rgb(212,87,7)" fg:x="442" fg:w="1"/><text x="67.6280%" y="335.50"></text></g><g><title>deno`heap::base::ActiveSystemPages::Add (1 samples, 0.15%)</title><rect x="67.3780%" y="309" width="0.1524%" height="15" fill="rgb(245,114,25)" fg:x="442" fg:w="1"/><text x="67.6280%" y="319.50"></text></g><g><title>0x110022d60 (18 samples, 2.74%)</title><rect x="64.9390%" y="421" width="2.7439%" height="15" fill="rgb(210,61,42)" fg:x="426" fg:w="18"/><text x="65.1890%" y="431.50">0x..</text></g><g><title>0x11001bbf0 (1 samples, 0.15%)</title><rect x="67.5305%" y="405" width="0.1524%" height="15" fill="rgb(211,52,33)" fg:x="443" fg:w="1"/><text x="67.7805%" y="415.50"></text></g><g><title>deno`Builtins_RecordWriteSaveFP (1 samples, 0.15%)</title><rect x="67.5305%" y="389" width="0.1524%" height="15" fill="rgb(234,58,33)" fg:x="443" fg:w="1"/><text x="67.7805%" y="399.50"></text></g><g><title>deno`Builtins_AsyncFunctionAwaitResolveClosure (195 samples, 29.73%)</title><rect x="38.1098%" y="437" width="29.7256%" height="15" fill="rgb(220,115,36)" fg:x="250" fg:w="195"/><text x="38.3598%" y="447.50">deno`Builtins_AsyncFunctionAwaitResolveClosure</text></g><g><title>0x110022d74 (1 samples, 0.15%)</title><rect x="67.6829%" y="421" width="0.1524%" height="15" fill="rgb(243,153,54)" fg:x="444" fg:w="1"/><text x="67.9329%" y="431.50"></text></g><g><title>deno`Builtins_AsyncFunctionAwaitUncaught (1 samples, 0.15%)</title><rect x="67.6829%" y="405" width="0.1524%" height="15" fill="rgb(251,47,18)" fg:x="444" fg:w="1"/><text x="67.9329%" y="415.50"></text></g><g><title>deno`Builtins_KeyedStoreICBaseline (1 samples, 0.15%)</title><rect x="67.8354%" y="437" width="0.1524%" height="15" fill="rgb(242,102,42)" fg:x="445" fg:w="1"/><text x="68.0854%" y="447.50"></text></g><g><title>deno`Builtins_LoadICTrampoline_Megamorphic (1 samples, 0.15%)</title><rect x="67.9878%" y="437" width="0.1524%" height="15" fill="rgb(234,31,38)" fg:x="446" fg:w="1"/><text x="68.2378%" y="447.50"></text></g><g><title>deno`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (240 samples, 36.59%)</title><rect x="31.7073%" y="597" width="36.5854%" height="15" fill="rgb(221,117,51)" fg:x="208" fg:w="240"/><text x="31.9573%" y="607.50">deno`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8..</text></g><g><title>deno`v8::internal::Isolate::FireCallCompletedCallbackInternal (221 samples, 33.69%)</title><rect x="34.6037%" y="581" width="33.6890%" height="15" fill="rgb(212,20,18)" fg:x="227" fg:w="221"/><text x="34.8537%" y="591.50">deno`v8::internal::Isolate::FireCallCompletedCallbackIn..</text></g><g><title>deno`v8::internal::MicrotaskQueue::PerformCheckpointInternal (220 samples, 33.54%)</title><rect x="34.7561%" y="565" width="33.5366%" height="15" fill="rgb(245,133,36)" fg:x="228" fg:w="220"/><text x="35.0061%" y="575.50">deno`v8::internal::MicrotaskQueue::PerformCheckpointIn..</text></g><g><title>deno`v8::internal::MicrotaskQueue::RunMicrotasks (219 samples, 33.38%)</title><rect x="34.9085%" y="549" width="33.3841%" height="15" fill="rgb(212,6,19)" fg:x="229" fg:w="219"/><text x="35.1585%" y="559.50">deno`v8::internal::MicrotaskQueue::RunMicrotasks</text></g><g><title>deno`v8::internal::Execution::TryRunMicrotasks (217 samples, 33.08%)</title><rect x="35.2134%" y="533" width="33.0793%" height="15" fill="rgb(218,1,36)" fg:x="231" fg:w="217"/><text x="35.4634%" y="543.50">deno`v8::internal::Execution::TryRunMicrotasks</text></g><g><title>deno`v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal:: (216 samples, 32.93%)</title><rect x="35.3659%" y="517" width="32.9268%" height="15" fill="rgb(246,84,54)" fg:x="232" fg:w="216"/><text x="35.6159%" y="527.50">deno`v8::internal::(anonymous namespace)::InvokeWithT..</text></g><g><title>deno`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (216 samples, 32.93%)</title><rect x="35.3659%" y="501" width="32.9268%" height="15" fill="rgb(242,110,6)" fg:x="232" fg:w="216"/><text x="35.6159%" y="511.50">deno`v8::internal::(anonymous namespace)::Invoke(v8::..</text></g><g><title>deno`Builtins_JSRunMicrotasksEntry (216 samples, 32.93%)</title><rect x="35.3659%" y="485" width="32.9268%" height="15" fill="rgb(214,47,5)" fg:x="232" fg:w="216"/><text x="35.6159%" y="495.50">deno`Builtins_JSRunMicrotasksEntry</text></g><g><title>deno`Builtins_RunMicrotasks (216 samples, 32.93%)</title><rect x="35.3659%" y="469" width="32.9268%" height="15" fill="rgb(218,159,25)" fg:x="232" fg:w="216"/><text x="35.6159%" y="479.50">deno`Builtins_RunMicrotasks</text></g><g><title>deno`Builtins_PromiseFulfillReactionJob (213 samples, 32.47%)</title><rect x="35.8232%" y="453" width="32.4695%" height="15" fill="rgb(215,211,28)" fg:x="235" fg:w="213"/><text x="36.0732%" y="463.50">deno`Builtins_PromiseFulfillReactionJob</text></g><g><title>deno`Builtins_LoadIC_Megamorphic (1 samples, 0.15%)</title><rect x="68.1402%" y="437" width="0.1524%" height="15" fill="rgb(238,59,32)" fg:x="447" fg:w="1"/><text x="68.3902%" y="447.50"></text></g><g><title>deno`v8::TryCatch::TryCatch (2 samples, 0.30%)</title><rect x="68.2927%" y="597" width="0.3049%" height="15" fill="rgb(226,82,3)" fg:x="448" fg:w="2"/><text x="68.5427%" y="607.50"></text></g><g><title>deno`v8::TryCatch::~TryCatch (1 samples, 0.15%)</title><rect x="68.5976%" y="597" width="0.1524%" height="15" fill="rgb(240,164,32)" fg:x="450" fg:w="1"/><text x="68.8476%" y="607.50"></text></g><g><title>deno`v8::internal::Isolate::ClearKeptObjects (1 samples, 0.15%)</title><rect x="68.7500%" y="597" width="0.1524%" height="15" fill="rgb(232,46,7)" fg:x="451" fg:w="1"/><text x="69.0000%" y="607.50"></text></g><g><title>deno`v8::internal::MicrotaskQueue::PerformCheckpointInternal (2 samples, 0.30%)</title><rect x="68.9024%" y="597" width="0.3049%" height="15" fill="rgb(229,129,53)" fg:x="452" fg:w="2"/><text x="69.1524%" y="607.50"></text></g><g><title>deno`v8::internal::MicrotaskQueue::RunMicrotasks (1 samples, 0.15%)</title><rect x="69.0549%" y="581" width="0.1524%" height="15" fill="rgb(234,188,29)" fg:x="453" fg:w="1"/><text x="69.3049%" y="591.50"></text></g><g><title>deno`v8::internal::MicrotaskQueue::RunMicrotasks (1 samples, 0.15%)</title><rect x="69.2073%" y="597" width="0.1524%" height="15" fill="rgb(246,141,4)" fg:x="454" fg:w="1"/><text x="69.4573%" y="607.50"></text></g><g><title>deno`v8::internal::wasm::WasmEngine::HasRunningCompileJob (1 samples, 0.15%)</title><rect x="69.3598%" y="597" width="0.1524%" height="15" fill="rgb(229,23,39)" fg:x="455" fg:w="1"/><text x="69.6098%" y="607.50"></text></g><g><title>deno`v8::internal::GCTracer::UpdateStatistics (1 samples, 0.15%)</title><rect x="69.8171%" y="549" width="0.1524%" height="15" fill="rgb(206,12,3)" fg:x="458" fg:w="1"/><text x="70.0671%" y="559.50"></text></g><g><title>deno`v8::internal::GCTracer::Print (1 samples, 0.15%)</title><rect x="69.8171%" y="533" width="0.1524%" height="15" fill="rgb(252,226,20)" fg:x="458" fg:w="1"/><text x="70.0671%" y="543.50"></text></g><g><title>deno`v8::internal::GCTracer::Output (1 samples, 0.15%)</title><rect x="69.8171%" y="517" width="0.1524%" height="15" fill="rgb(216,123,35)" fg:x="458" fg:w="1"/><text x="70.0671%" y="527.50"></text></g><g><title>deno`v8::base::OS::VSNPrintF (1 samples, 0.15%)</title><rect x="69.8171%" y="501" width="0.1524%" height="15" fill="rgb(212,68,40)" fg:x="458" fg:w="1"/><text x="70.0671%" y="511.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.15%)</title><rect x="69.8171%" y="485" width="0.1524%" height="15" fill="rgb(254,125,32)" fg:x="458" fg:w="1"/><text x="70.0671%" y="495.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.15%)</title><rect x="69.8171%" y="469" width="0.1524%" height="15" fill="rgb(253,97,22)" fg:x="458" fg:w="1"/><text x="70.0671%" y="479.50"></text></g><g><title>libsystem_c.dylib`__dtoa (1 samples, 0.15%)</title><rect x="69.8171%" y="453" width="0.1524%" height="15" fill="rgb(241,101,14)" fg:x="458" fg:w="1"/><text x="70.0671%" y="463.50"></text></g><g><title>deno`void v8::internal::BodyDescriptorBase::IterateJSObjectBodyImpl&lt;v8::internal::ScavengeVisitor&gt; (1 samples, 0.15%)</title><rect x="69.9695%" y="437" width="0.1524%" height="15" fill="rgb(238,103,29)" fg:x="459" fg:w="1"/><text x="70.2195%" y="447.50"></text></g><g><title>deno`v8::internal::Heap::Scavenge (2 samples, 0.30%)</title><rect x="69.9695%" y="533" width="0.3049%" height="15" fill="rgb(233,195,47)" fg:x="459" fg:w="2"/><text x="70.2195%" y="543.50"></text></g><g><title>deno`v8::internal::ScavengerCollector::CollectGarbage (2 samples, 0.30%)</title><rect x="69.9695%" y="517" width="0.3049%" height="15" fill="rgb(246,218,30)" fg:x="459" fg:w="2"/><text x="70.2195%" y="527.50"></text></g><g><title>deno`v8::platform::DefaultJobHandle::Join (2 samples, 0.30%)</title><rect x="69.9695%" y="501" width="0.3049%" height="15" fill="rgb(219,145,47)" fg:x="459" fg:w="2"/><text x="70.2195%" y="511.50"></text></g><g><title>deno`v8::platform::DefaultJobState::Join (2 samples, 0.30%)</title><rect x="69.9695%" y="485" width="0.3049%" height="15" fill="rgb(243,12,26)" fg:x="459" fg:w="2"/><text x="70.2195%" y="495.50"></text></g><g><title>deno`v8::internal::ScavengerCollector::JobTask::ProcessItems (2 samples, 0.30%)</title><rect x="69.9695%" y="469" width="0.3049%" height="15" fill="rgb(214,87,16)" fg:x="459" fg:w="2"/><text x="70.2195%" y="479.50"></text></g><g><title>deno`v8::internal::Scavenger::Process (2 samples, 0.30%)</title><rect x="69.9695%" y="453" width="0.3049%" height="15" fill="rgb(208,99,42)" fg:x="459" fg:w="2"/><text x="70.2195%" y="463.50"></text></g><g><title>deno`void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::IterateAndScavengePromotedObjectsVisitor&gt; (1 samples, 0.15%)</title><rect x="70.1220%" y="437" width="0.1524%" height="15" fill="rgb(253,99,2)" fg:x="460" fg:w="1"/><text x="70.3720%" y="447.50"></text></g><g><title>deno`v8::internal::SemiSpaceNewSpace::ShouldBePromoted (1 samples, 0.15%)</title><rect x="70.1220%" y="421" width="0.1524%" height="15" fill="rgb(220,168,23)" fg:x="460" fg:w="1"/><text x="70.3720%" y="431.50"></text></g><g><title>deno`v8::internal::IsolateSafepoint::EnterLocalSafepointScope (1 samples, 0.15%)</title><rect x="70.2744%" y="533" width="0.1524%" height="15" fill="rgb(242,38,24)" fg:x="461" fg:w="1"/><text x="70.5244%" y="543.50"></text></g><g><title>deno`v8::internal::ScavengeJob::Task::RunInternal (7 samples, 1.07%)</title><rect x="69.5122%" y="581" width="1.0671%" height="15" fill="rgb(225,182,9)" fg:x="456" fg:w="7"/><text x="69.7622%" y="591.50"></text></g><g><title>deno`v8::internal::Heap::CollectGarbage (7 samples, 1.07%)</title><rect x="69.5122%" y="565" width="1.0671%" height="15" fill="rgb(243,178,37)" fg:x="456" fg:w="7"/><text x="69.7622%" y="575.50"></text></g><g><title>deno`v8::internal::Heap::PerformGarbageCollection (4 samples, 0.61%)</title><rect x="69.9695%" y="549" width="0.6098%" height="15" fill="rgb(232,139,19)" fg:x="459" fg:w="4"/><text x="70.2195%" y="559.50"></text></g><g><title>deno`v8::internal::SafepointScope::~SafepointScope (1 samples, 0.15%)</title><rect x="70.4268%" y="533" width="0.1524%" height="15" fill="rgb(225,201,24)" fg:x="462" fg:w="1"/><text x="70.6768%" y="543.50"></text></g><g><title>deno`v8::internal::IsolateSafepoint::LeaveLocalSafepointScope (1 samples, 0.15%)</title><rect x="70.4268%" y="517" width="0.1524%" height="15" fill="rgb(221,47,46)" fg:x="462" fg:w="1"/><text x="70.6768%" y="527.50"></text></g><g><title>deno`v8::platform::DefaultForegroundTaskRunner::MoveExpiredDelayedTasks(v8::base::LockGuard&lt;v8::base::Mutex, (1 samples, 0.15%)</title><rect x="70.5793%" y="581" width="0.1524%" height="15" fill="rgb(249,23,13)" fg:x="463" fg:w="1"/><text x="70.8293%" y="591.50"></text></g><g><title>deno`v8::platform::DefaultPlatform::PumpMessageLoop (10 samples, 1.52%)</title><rect x="69.5122%" y="597" width="1.5244%" height="15" fill="rgb(219,9,5)" fg:x="456" fg:w="10"/><text x="69.7622%" y="607.50"></text></g><g><title>deno`v8::platform::DefaultForegroundTaskRunner::PopTaskFromQueue (2 samples, 0.30%)</title><rect x="70.7317%" y="581" width="0.3049%" height="15" fill="rgb(254,171,16)" fg:x="464" fg:w="2"/><text x="70.9817%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.30%)</title><rect x="70.7317%" y="565" width="0.3049%" height="15" fill="rgb(230,171,20)" fg:x="464" fg:w="2"/><text x="70.9817%" y="575.50"></text></g><g><title>deno`v8::scope::data::ScopeData::new_try_catch_data (2 samples, 0.30%)</title><rect x="71.0366%" y="597" width="0.3049%" height="15" fill="rgb(210,71,41)" fg:x="466" fg:w="2"/><text x="71.2866%" y="607.50"></text></g><g><title>deno`v8::TryCatch::TryCatch (1 samples, 0.15%)</title><rect x="71.1890%" y="581" width="0.1524%" height="15" fill="rgb(206,173,20)" fg:x="467" fg:w="1"/><text x="71.4390%" y="591.50"></text></g><g><title>deno`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (1 samples, 0.15%)</title><rect x="71.3415%" y="581" width="0.1524%" height="15" fill="rgb(233,88,34)" fg:x="468" fg:w="1"/><text x="71.5915%" y="591.50"></text></g><g><title>deno`v8::TryCatch::~TryCatch (1 samples, 0.15%)</title><rect x="71.4939%" y="581" width="0.1524%" height="15" fill="rgb(223,209,46)" fg:x="469" fg:w="1"/><text x="71.7439%" y="591.50"></text></g><g><title>deno`v8::scope::data::ScopeData::notify_scope_dropped (3 samples, 0.46%)</title><rect x="71.3415%" y="597" width="0.4573%" height="15" fill="rgb(250,43,18)" fg:x="468" fg:w="3"/><text x="71.5915%" y="607.50"></text></g><g><title>deno`v8::internal::Isolate::UnregisterTryCatchHandler (1 samples, 0.15%)</title><rect x="71.6463%" y="581" width="0.1524%" height="15" fill="rgb(208,13,10)" fg:x="470" fg:w="1"/><text x="71.8963%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`kevent (6 samples, 0.91%)</title><rect x="71.7988%" y="597" width="0.9146%" height="15" fill="rgb(212,200,36)" fg:x="471" fg:w="6"/><text x="72.0488%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.15%)</title><rect x="72.7134%" y="597" width="0.1524%" height="15" fill="rgb(225,90,30)" fg:x="477" fg:w="1"/><text x="72.9634%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.15%)</title><rect x="72.7134%" y="581" width="0.1524%" height="15" fill="rgb(236,182,39)" fg:x="477" fg:w="1"/><text x="72.9634%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.15%)</title><rect x="72.7134%" y="565" width="0.1524%" height="15" fill="rgb(212,144,35)" fg:x="477" fg:w="1"/><text x="72.9634%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.30%)</title><rect x="72.8659%" y="597" width="0.3049%" height="15" fill="rgb(228,63,44)" fg:x="478" fg:w="2"/><text x="73.1159%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.30%)</title><rect x="72.8659%" y="581" width="0.3049%" height="15" fill="rgb(228,109,6)" fg:x="478" fg:w="2"/><text x="73.1159%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.61%)</title><rect x="73.1707%" y="597" width="0.6098%" height="15" fill="rgb(238,117,24)" fg:x="480" fg:w="4"/><text x="73.4207%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.46%)</title><rect x="73.3232%" y="581" width="0.4573%" height="15" fill="rgb(242,26,26)" fg:x="481" fg:w="3"/><text x="73.5732%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.15%)</title><rect x="73.7805%" y="597" width="0.1524%" height="15" fill="rgb(221,92,48)" fg:x="484" fg:w="1"/><text x="74.0305%" y="607.50"></text></g><g><title>deno`deno_core::runtime::JsRuntime::poll_event_loop (469 samples, 71.49%)</title><rect x="2.5915%" y="613" width="71.4939%" height="15" fill="rgb(209,209,32)" fg:x="17" fg:w="469"/><text x="2.8415%" y="623.50">deno`deno_core::runtime::JsRuntime::poll_event_loop</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.15%)</title><rect x="73.9329%" y="597" width="0.1524%" height="15" fill="rgb(221,70,22)" fg:x="485" fg:w="1"/><text x="74.1829%" y="607.50"></text></g><g><title>deno`std__shared_ptr__v8__Platform__get (1 samples, 0.15%)</title><rect x="74.0854%" y="613" width="0.1524%" height="15" fill="rgb(248,145,5)" fg:x="486" fg:w="1"/><text x="74.3354%" y="623.50"></text></g><g><title>deno`tokio::util::wake::drop_arc_raw (2 samples, 0.30%)</title><rect x="74.2378%" y="613" width="0.3049%" height="15" fill="rgb(226,116,26)" fg:x="487" fg:w="2"/><text x="74.4878%" y="623.50"></text></g><g><title>deno`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (1 samples, 0.15%)</title><rect x="74.5427%" y="613" width="0.1524%" height="15" fill="rgb(244,5,17)" fg:x="489" fg:w="1"/><text x="74.7927%" y="623.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (478 samples, 72.87%)</title><rect x="1.9817%" y="629" width="72.8659%" height="15" fill="rgb(252,159,33)" fg:x="13" fg:w="478"/><text x="2.2317%" y="639.50">deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>deno`v8::Integer::New (1 samples, 0.15%)</title><rect x="74.6951%" y="613" width="0.1524%" height="15" fill="rgb(206,71,0)" fg:x="490" fg:w="1"/><text x="74.9451%" y="623.50"></text></g><g><title>deno`std::sync::once::Once::call_once::_{{closure}} (1 samples, 0.15%)</title><rect x="74.8476%" y="581" width="0.1524%" height="15" fill="rgb(233,118,54)" fg:x="491" fg:w="1"/><text x="75.0976%" y="591.50"></text></g><g><title>deno`v8::V8::Initialize (1 samples, 0.15%)</title><rect x="74.8476%" y="565" width="0.1524%" height="15" fill="rgb(234,83,48)" fg:x="491" fg:w="1"/><text x="75.0976%" y="575.50"></text></g><g><title>deno`v8::internal::V8::Initialize (1 samples, 0.15%)</title><rect x="74.8476%" y="549" width="0.1524%" height="15" fill="rgb(228,3,54)" fg:x="491" fg:w="1"/><text x="75.0976%" y="559.50"></text></g><g><title>deno`v8::internal::wasm::WasmCodeManager::WasmCodeManager (1 samples, 0.15%)</title><rect x="74.8476%" y="533" width="0.1524%" height="15" fill="rgb(226,155,13)" fg:x="491" fg:w="1"/><text x="75.0976%" y="543.50"></text></g><g><title>deno`std::sync::once::Once::call_inner (2 samples, 0.30%)</title><rect x="74.8476%" y="597" width="0.3049%" height="15" fill="rgb(241,28,37)" fg:x="491" fg:w="2"/><text x="75.0976%" y="607.50"></text></g><g><title>deno`std::sys_common::lazy_box::LazyBox&lt;T&gt;::initialize (1 samples, 0.15%)</title><rect x="75.0000%" y="581" width="0.1524%" height="15" fill="rgb(233,93,10)" fg:x="492" fg:w="1"/><text x="75.2500%" y="591.50"></text></g><g><title>deno`v8::internal::Checksum(v8::base::Vector (7 samples, 1.07%)</title><rect x="75.1524%" y="565" width="1.0671%" height="15" fill="rgb(225,113,19)" fg:x="493" fg:w="7"/><text x="75.4024%" y="575.50"></text></g><g><title>deno`v8::internal::Heap::SetUp (1 samples, 0.15%)</title><rect x="76.2195%" y="517" width="0.1524%" height="15" fill="rgb(241,2,18)" fg:x="500" fg:w="1"/><text x="76.4695%" y="527.50"></text></g><g><title>deno`v8::internal::Sweeper::Sweeper (1 samples, 0.15%)</title><rect x="76.2195%" y="501" width="0.1524%" height="15" fill="rgb(228,207,21)" fg:x="500" fg:w="1"/><text x="76.4695%" y="511.50"></text></g><g><title>deno`v8::internal::Heap::SetUpSpaces (1 samples, 0.15%)</title><rect x="76.3720%" y="517" width="0.1524%" height="15" fill="rgb(213,211,35)" fg:x="501" fg:w="1"/><text x="76.6220%" y="527.50"></text></g><g><title>deno`v8::internal::SemiSpaceNewSpace::SemiSpaceNewSpace (1 samples, 0.15%)</title><rect x="76.3720%" y="501" width="0.1524%" height="15" fill="rgb(209,83,10)" fg:x="501" fg:w="1"/><text x="76.6220%" y="511.50"></text></g><g><title>deno`v8::internal::SemiSpaceNewSpace::UpdateLinearAllocationArea (1 samples, 0.15%)</title><rect x="76.3720%" y="485" width="0.1524%" height="15" fill="rgb(209,164,1)" fg:x="501" fg:w="1"/><text x="76.6220%" y="495.50"></text></g><g><title>deno`v8::internal::NewSpace::SupportsAllocationObserver (1 samples, 0.15%)</title><rect x="76.3720%" y="469" width="0.1524%" height="15" fill="rgb(213,184,43)" fg:x="501" fg:w="1"/><text x="76.6220%" y="479.50"></text></g><g><title>deno`deno::main::_{{closure}} (492 samples, 75.00%)</title><rect x="1.6768%" y="677" width="75.0000%" height="15" fill="rgb(231,61,34)" fg:x="11" fg:w="492"/><text x="1.9268%" y="687.50">deno`deno::main::_{{closure}}</text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (492 samples, 75.00%)</title><rect x="1.6768%" y="661" width="75.0000%" height="15" fill="rgb(235,75,3)" fg:x="11" fg:w="492"/><text x="1.9268%" y="671.50">deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (491 samples, 74.85%)</title><rect x="1.8293%" y="645" width="74.8476%" height="15" fill="rgb(220,106,47)" fg:x="12" fg:w="491"/><text x="2.0793%" y="655.50">deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>deno`deno_runtime::worker::MainWorker::bootstrap_from_options (12 samples, 1.83%)</title><rect x="74.8476%" y="629" width="1.8293%" height="15" fill="rgb(210,196,33)" fg:x="491" fg:w="12"/><text x="75.0976%" y="639.50">d..</text></g><g><title>deno`deno_core::runtime::JsRuntime::new (12 samples, 1.83%)</title><rect x="74.8476%" y="613" width="1.8293%" height="15" fill="rgb(229,154,42)" fg:x="491" fg:w="12"/><text x="75.0976%" y="623.50">d..</text></g><g><title>deno`v8::Isolate::New (10 samples, 1.52%)</title><rect x="75.1524%" y="597" width="1.5244%" height="15" fill="rgb(228,114,26)" fg:x="493" fg:w="10"/><text x="75.4024%" y="607.50"></text></g><g><title>deno`v8::Isolate::Initialize (10 samples, 1.52%)</title><rect x="75.1524%" y="581" width="1.5244%" height="15" fill="rgb(208,144,1)" fg:x="493" fg:w="10"/><text x="75.4024%" y="591.50"></text></g><g><title>deno`v8::internal::Snapshot::Initialize (3 samples, 0.46%)</title><rect x="76.2195%" y="565" width="0.4573%" height="15" fill="rgb(239,112,37)" fg:x="500" fg:w="3"/><text x="76.4695%" y="575.50"></text></g><g><title>deno`v8::internal::Isolate::InitWithSnapshot (3 samples, 0.46%)</title><rect x="76.2195%" y="549" width="0.4573%" height="15" fill="rgb(210,96,50)" fg:x="500" fg:w="3"/><text x="76.4695%" y="559.50"></text></g><g><title>deno`v8::internal::Isolate::Init (3 samples, 0.46%)</title><rect x="76.2195%" y="533" width="0.4573%" height="15" fill="rgb(222,178,2)" fg:x="500" fg:w="3"/><text x="76.4695%" y="543.50"></text></g><g><title>deno`v8::internal::SharedHeapDeserializer::DeserializeIntoIsolate (1 samples, 0.15%)</title><rect x="76.5244%" y="517" width="0.1524%" height="15" fill="rgb(226,74,18)" fg:x="502" fg:w="1"/><text x="76.7744%" y="527.50"></text></g><g><title>deno`v8::internal::SharedHeapDeserializer::DeserializeStringTable (1 samples, 0.15%)</title><rect x="76.5244%" y="501" width="0.1524%" height="15" fill="rgb(225,67,54)" fg:x="502" fg:w="1"/><text x="76.7744%" y="511.50"></text></g><g><title>deno`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::StringTable::LookupKey&lt;v8::internal::StringTableInsertionKey, v8::internal::Isolate&gt; (1 samples, 0.15%)</title><rect x="76.5244%" y="485" width="0.1524%" height="15" fill="rgb(251,92,32)" fg:x="502" fg:w="1"/><text x="76.7744%" y="495.50"></text></g><g><title>deno`tokio::task::local::LocalSet::tick (1 samples, 0.15%)</title><rect x="76.6768%" y="677" width="0.1524%" height="15" fill="rgb(228,149,22)" fg:x="503" fg:w="1"/><text x="76.9268%" y="687.50"></text></g><g><title>deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (494 samples, 75.30%)</title><rect x="1.6768%" y="693" width="75.3049%" height="15" fill="rgb(243,54,13)" fg:x="11" fg:w="494"/><text x="1.9268%" y="703.50">deno`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>deno`tokio::util::wake::drop_arc_raw (1 samples, 0.15%)</title><rect x="76.8293%" y="677" width="0.1524%" height="15" fill="rgb(243,180,28)" fg:x="504" fg:w="1"/><text x="77.0793%" y="687.50"></text></g><g><title>deno`deno_runtime::tokio_util::create_basic_runtime (1 samples, 0.15%)</title><rect x="76.9817%" y="693" width="0.1524%" height="15" fill="rgb(208,167,24)" fg:x="505" fg:w="1"/><text x="77.2317%" y="703.50"></text></g><g><title>deno`futures_task::waker::wake_arc_raw (1 samples, 0.15%)</title><rect x="77.5915%" y="645" width="0.1524%" height="15" fill="rgb(245,73,45)" fg:x="509" fg:w="1"/><text x="77.8415%" y="655.50"></text></g><g><title>deno`tokio::runtime::io::Driver::turn (16 samples, 2.44%)</title><rect x="77.2866%" y="661" width="2.4390%" height="15" fill="rgb(237,203,48)" fg:x="507" fg:w="16"/><text x="77.5366%" y="671.50">de..</text></g><g><title>deno`tokio::runtime::io::scheduled_io::ScheduledIo::wake0 (13 samples, 1.98%)</title><rect x="77.7439%" y="645" width="1.9817%" height="15" fill="rgb(211,197,16)" fg:x="510" fg:w="13"/><text x="77.9939%" y="655.50">d..</text></g><g><title>deno`futures_task::waker::wake_arc_raw (12 samples, 1.83%)</title><rect x="77.8963%" y="629" width="1.8293%" height="15" fill="rgb(243,99,51)" fg:x="511" fg:w="12"/><text x="78.1463%" y="639.50">d..</text></g><g><title>deno`futures_task::waker::wake_arc_raw (12 samples, 1.83%)</title><rect x="77.8963%" y="613" width="1.8293%" height="15" fill="rgb(215,123,29)" fg:x="511" fg:w="12"/><text x="78.1463%" y="623.50">d..</text></g><g><title>deno`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (12 samples, 1.83%)</title><rect x="77.8963%" y="597" width="1.8293%" height="15" fill="rgb(239,186,37)" fg:x="511" fg:w="12"/><text x="78.1463%" y="607.50">d..</text></g><g><title>deno`tokio::util::wake::wake_arc_raw (12 samples, 1.83%)</title><rect x="77.8963%" y="581" width="1.8293%" height="15" fill="rgb(252,136,39)" fg:x="511" fg:w="12"/><text x="78.1463%" y="591.50">d..</text></g><g><title>libsystem_kernel.dylib`kevent (12 samples, 1.83%)</title><rect x="77.8963%" y="565" width="1.8293%" height="15" fill="rgb(223,213,32)" fg:x="511" fg:w="12"/><text x="78.1463%" y="575.50">l..</text></g><g><title>deno`tokio::signal::unix::driver::Driver::process (2 samples, 0.30%)</title><rect x="79.7256%" y="661" width="0.3049%" height="15" fill="rgb(233,115,5)" fg:x="523" fg:w="2"/><text x="79.9756%" y="671.50"></text></g><g><title>deno`tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.30%)</title><rect x="79.7256%" y="645" width="0.3049%" height="15" fill="rgb(207,226,44)" fg:x="523" fg:w="2"/><text x="79.9756%" y="655.50"></text></g><g><title>deno`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (4 samples, 0.61%)</title><rect x="80.0305%" y="661" width="0.6098%" height="15" fill="rgb(208,126,0)" fg:x="525" fg:w="4"/><text x="80.2805%" y="671.50"></text></g><g><title>deno`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (2 samples, 0.30%)</title><rect x="80.3354%" y="645" width="0.3049%" height="15" fill="rgb(244,66,21)" fg:x="527" fg:w="2"/><text x="80.5854%" y="655.50"></text></g><g><title> 32]&gt; (2 samples, 0.30%)</title><rect x="80.3354%" y="629" width="0.3049%" height="15" fill="rgb(222,97,12)" fg:x="527" fg:w="2"/><text x="80.5854%" y="639.50"></text></g><g><title>deno`tokio::time::driver::wheel::Wheel::next_expiration (1 samples, 0.15%)</title><rect x="80.6402%" y="661" width="0.1524%" height="15" fill="rgb(219,213,19)" fg:x="529" fg:w="1"/><text x="80.8902%" y="671.50"></text></g><g><title>deno`tokio::time::driver::Driver&lt;P&gt;::park_internal (111 samples, 16.92%)</title><rect x="77.1341%" y="677" width="16.9207%" height="15" fill="rgb(252,169,30)" fg:x="506" fg:w="111"/><text x="77.3841%" y="687.50">deno`tokio::time::driver::..</text></g><g><title>libsystem_kernel.dylib`kevent (87 samples, 13.26%)</title><rect x="80.7927%" y="661" width="13.2622%" height="15" fill="rgb(206,32,51)" fg:x="530" fg:w="87"/><text x="81.0427%" y="671.50">libsystem_kernel.dyl..</text></g><g><title>deno`tokio::runtime::scheduler::current_thread::Context::park (112 samples, 17.07%)</title><rect x="77.1341%" y="693" width="17.0732%" height="15" fill="rgb(250,172,42)" fg:x="506" fg:w="112"/><text x="77.3841%" y="703.50">deno`tokio::runtime::sched..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.15%)</title><rect x="94.0549%" y="677" width="0.1524%" height="15" fill="rgb(209,34,43)" fg:x="617" fg:w="1"/><text x="94.3049%" y="687.50"></text></g><g><title>deno`tokio::task::local::LocalSet::tick (2 samples, 0.30%)</title><rect x="94.2073%" y="693" width="0.3049%" height="15" fill="rgb(223,11,35)" fg:x="618" fg:w="2"/><text x="94.4573%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.46%)</title><rect x="94.5122%" y="693" width="0.4573%" height="15" fill="rgb(251,219,26)" fg:x="620" fg:w="3"/><text x="94.7622%" y="703.50"></text></g><g><title>deno`deno_runtime::tokio_util::run_local (614 samples, 93.60%)</title><rect x="1.5244%" y="709" width="93.5976%" height="15" fill="rgb(231,119,3)" fg:x="10" fg:w="614"/><text x="1.7744%" y="719.50">deno`deno_runtime::tokio_util::run_local</text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.15%)</title><rect x="94.9695%" y="693" width="0.1524%" height="15" fill="rgb(216,97,11)" fg:x="623" fg:w="1"/><text x="95.2195%" y="703.50"></text></g><g><title>dyld`start (615 samples, 93.75%)</title><rect x="1.5244%" y="773" width="93.7500%" height="15" fill="rgb(223,59,9)" fg:x="10" fg:w="615"/><text x="1.7744%" y="783.50">dyld`start</text></g><g><title>deno`main (615 samples, 93.75%)</title><rect x="1.5244%" y="757" width="93.7500%" height="15" fill="rgb(233,93,31)" fg:x="10" fg:w="615"/><text x="1.7744%" y="767.50">deno`main</text></g><g><title>deno`std::sys_common::backtrace::__rust_begin_short_backtrace (615 samples, 93.75%)</title><rect x="1.5244%" y="741" width="93.7500%" height="15" fill="rgb(239,81,33)" fg:x="10" fg:w="615"/><text x="1.7744%" y="751.50">deno`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>deno`deno::main (615 samples, 93.75%)</title><rect x="1.5244%" y="725" width="93.7500%" height="15" fill="rgb(213,120,34)" fg:x="10" fg:w="615"/><text x="1.7744%" y="735.50">deno`deno::main</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.15%)</title><rect x="95.1220%" y="709" width="0.1524%" height="15" fill="rgb(243,49,53)" fg:x="624" fg:w="1"/><text x="95.3720%" y="719.50"></text></g><g><title>deno`v8::internal::compiler::CodeGenerator::AssembleArchInstruction (1 samples, 0.15%)</title><rect x="95.2744%" y="597" width="0.1524%" height="15" fill="rgb(247,216,33)" fg:x="625" fg:w="1"/><text x="95.5244%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::CodeGenerator::RecordCallPosition (1 samples, 0.15%)</title><rect x="95.2744%" y="581" width="0.1524%" height="15" fill="rgb(226,26,14)" fg:x="625" fg:w="1"/><text x="95.5244%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::CodeGenerator::BuildTranslation (1 samples, 0.15%)</title><rect x="95.2744%" y="565" width="0.1524%" height="15" fill="rgb(215,49,53)" fg:x="625" fg:w="1"/><text x="95.5244%" y="575.50"></text></g><g><title>deno`v8::internal::compiler::CodeGenerator::BuildTranslationForFrameStateDescriptor (1 samples, 0.15%)</title><rect x="95.2744%" y="549" width="0.1524%" height="15" fill="rgb(245,162,40)" fg:x="625" fg:w="1"/><text x="95.5244%" y="559.50"></text></g><g><title>deno`v8::internal::compiler::CodeGenerator::AddTranslationForOperand (1 samples, 0.15%)</title><rect x="95.2744%" y="533" width="0.1524%" height="15" fill="rgb(229,68,17)" fg:x="625" fg:w="1"/><text x="95.5244%" y="543.50"></text></g><g><title>deno`v8::internal::compiler::CodeGenerator::DefineDeoptimizationLiteral (1 samples, 0.15%)</title><rect x="95.2744%" y="517" width="0.1524%" height="15" fill="rgb(213,182,10)" fg:x="625" fg:w="1"/><text x="95.5244%" y="527.50"></text></g><g><title>deno`v8::internal::compiler::PipelineImpl::AssembleCode (2 samples, 0.30%)</title><rect x="95.2744%" y="645" width="0.3049%" height="15" fill="rgb(245,125,30)" fg:x="625" fg:w="2"/><text x="95.5244%" y="655.50"></text></g><g><title>deno`v8::internal::compiler::CodeGenerator::AssembleCode (2 samples, 0.30%)</title><rect x="95.2744%" y="629" width="0.3049%" height="15" fill="rgb(232,202,2)" fg:x="625" fg:w="2"/><text x="95.5244%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::CodeGenerator::AssembleInstruction (2 samples, 0.30%)</title><rect x="95.2744%" y="613" width="0.3049%" height="15" fill="rgb(237,140,51)" fg:x="625" fg:w="2"/><text x="95.5244%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::GapResolver::Resolve (1 samples, 0.15%)</title><rect x="95.4268%" y="597" width="0.1524%" height="15" fill="rgb(236,157,25)" fg:x="626" fg:w="1"/><text x="95.6768%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::CodeGenerator::AssembleMove (1 samples, 0.15%)</title><rect x="95.4268%" y="581" width="0.1524%" height="15" fill="rgb(219,209,0)" fg:x="626" fg:w="1"/><text x="95.6768%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::CodeGenerator::AssembleMove(v8::internal::compiler::InstructionOperand*, v8::internal::compiler::InstructionOperand*)::$_0::operator() (1 samples, 0.15%)</title><rect x="95.4268%" y="565" width="0.1524%" height="15" fill="rgb(240,116,54)" fg:x="626" fg:w="1"/><text x="95.6768%" y="575.50"></text></g><g><title>deno`v8::internal::TurboAssembler::Mov (1 samples, 0.15%)</title><rect x="95.4268%" y="549" width="0.1524%" height="15" fill="rgb(216,10,36)" fg:x="626" fg:w="1"/><text x="95.6768%" y="559.50"></text></g><g><title>deno`v8::internal::Assembler::ldr (1 samples, 0.15%)</title><rect x="95.4268%" y="533" width="0.1524%" height="15" fill="rgb(222,72,44)" fg:x="626" fg:w="1"/><text x="95.6768%" y="543.50"></text></g><g><title>deno`v8::internal::Assembler::ldr (1 samples, 0.15%)</title><rect x="95.4268%" y="517" width="0.1524%" height="15" fill="rgb(232,159,9)" fg:x="626" fg:w="1"/><text x="95.6768%" y="527.50"></text></g><g><title>deno`v8::internal::Assembler::RecordRelocInfo (1 samples, 0.15%)</title><rect x="95.4268%" y="501" width="0.1524%" height="15" fill="rgb(210,39,32)" fg:x="626" fg:w="1"/><text x="95.6768%" y="511.50"></text></g><g><title>deno`v8::internal::ConstantPool::RecordEntry (1 samples, 0.15%)</title><rect x="95.4268%" y="485" width="0.1524%" height="15" fill="rgb(216,194,45)" fg:x="626" fg:w="1"/><text x="95.6768%" y="495.50"></text></g><g><title>deno`v8::internal::ConstantPool::RecordKey (1 samples, 0.15%)</title><rect x="95.4268%" y="469" width="0.1524%" height="15" fill="rgb(218,18,35)" fg:x="626" fg:w="1"/><text x="95.6768%" y="479.50"></text></g><g><title>deno`v8::internal::compiler::JSInliningHeuristic::Reduce (1 samples, 0.15%)</title><rect x="95.5793%" y="549" width="0.1524%" height="15" fill="rgb(207,83,51)" fg:x="627" fg:w="1"/><text x="95.8293%" y="559.50"></text></g><g><title>deno`v8::internal::compiler::JSInliningHeuristic::CollectFunctions (1 samples, 0.15%)</title><rect x="95.5793%" y="533" width="0.1524%" height="15" fill="rgb(225,63,43)" fg:x="627" fg:w="1"/><text x="95.8293%" y="543.50"></text></g><g><title>deno`v8::internal::compiler::(anonymous namespace)::CanConsiderForInlining (1 samples, 0.15%)</title><rect x="95.5793%" y="517" width="0.1524%" height="15" fill="rgb(207,57,36)" fg:x="627" fg:w="1"/><text x="95.8293%" y="527.50"></text></g><g><title>deno`v8::internal::compiler::(anonymous namespace)::CanConsiderForInlining (1 samples, 0.15%)</title><rect x="95.5793%" y="501" width="0.1524%" height="15" fill="rgb(216,99,33)" fg:x="627" fg:w="1"/><text x="95.8293%" y="511.50"></text></g><g><title>deno`v8::internal::compiler::ObjectData::IsFeedbackVector (1 samples, 0.15%)</title><rect x="95.5793%" y="485" width="0.1524%" height="15" fill="rgb(225,42,16)" fg:x="627" fg:w="1"/><text x="95.8293%" y="495.50"></text></g><g><title>deno`v8::internal::compiler::PipelineImpl::CreateGraph (2 samples, 0.30%)</title><rect x="95.5793%" y="645" width="0.3049%" height="15" fill="rgb(220,201,45)" fg:x="627" fg:w="2"/><text x="95.8293%" y="655.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (2 samples, 0.30%)</title><rect x="95.5793%" y="629" width="0.3049%" height="15" fill="rgb(225,33,4)" fg:x="627" fg:w="2"/><text x="95.8293%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::InliningPhase::Run (2 samples, 0.30%)</title><rect x="95.5793%" y="613" width="0.3049%" height="15" fill="rgb(224,33,50)" fg:x="627" fg:w="2"/><text x="95.8293%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceNode (2 samples, 0.30%)</title><rect x="95.5793%" y="597" width="0.3049%" height="15" fill="rgb(246,198,51)" fg:x="627" fg:w="2"/><text x="95.8293%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceTop (2 samples, 0.30%)</title><rect x="95.5793%" y="581" width="0.3049%" height="15" fill="rgb(205,22,4)" fg:x="627" fg:w="2"/><text x="95.8293%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::Reduce (2 samples, 0.30%)</title><rect x="95.5793%" y="565" width="0.3049%" height="15" fill="rgb(206,3,8)" fg:x="627" fg:w="2"/><text x="95.8293%" y="575.50"></text></g><g><title>deno`v8::internal::compiler::JSNativeContextSpecialization::ReduceJSLoadNamed (1 samples, 0.15%)</title><rect x="95.7317%" y="549" width="0.1524%" height="15" fill="rgb(251,23,15)" fg:x="628" fg:w="1"/><text x="95.9817%" y="559.50"></text></g><g><title>deno`v8::internal::compiler::JSNativeContextSpecialization::ReducePropertyAccess(v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::base::Optional (1 samples, 0.15%)</title><rect x="95.7317%" y="533" width="0.1524%" height="15" fill="rgb(252,88,28)" fg:x="628" fg:w="1"/><text x="95.9817%" y="543.50"></text></g><g><title>deno`v8::internal::compiler::JSNativeContextSpecialization::ReduceNamedAccess (1 samples, 0.15%)</title><rect x="95.7317%" y="517" width="0.1524%" height="15" fill="rgb(212,127,14)" fg:x="628" fg:w="1"/><text x="95.9817%" y="527.50"></text></g><g><title>deno`v8::internal::compiler::JSNativeContextSpecialization::BuildPropertyLoad(v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::internal::compiler::NameRef const&amp;, v8::internal::ZoneVector (1 samples, 0.15%)</title><rect x="95.7317%" y="501" width="0.1524%" height="15" fill="rgb(247,145,37)" fg:x="628" fg:w="1"/><text x="95.9817%" y="511.50"></text></g><g><title>deno`v8::internal::compiler::PropertyAccessBuilder::BuildLoadDataField (1 samples, 0.15%)</title><rect x="95.7317%" y="485" width="0.1524%" height="15" fill="rgb(209,117,53)" fg:x="628" fg:w="1"/><text x="95.9817%" y="495.50"></text></g><g><title>deno`v8::internal::compiler::JSGraph::Constant (1 samples, 0.15%)</title><rect x="95.7317%" y="469" width="0.1524%" height="15" fill="rgb(212,90,42)" fg:x="628" fg:w="1"/><text x="95.9817%" y="479.50"></text></g><g><title>deno`v8::internal::compiler::HeapObjectRef::GetHeapObjectType (1 samples, 0.15%)</title><rect x="95.7317%" y="453" width="0.1524%" height="15" fill="rgb(218,164,37)" fg:x="628" fg:w="1"/><text x="95.9817%" y="463.50"></text></g><g><title>deno`v8::internal::compiler::HeapObjectRef::map (1 samples, 0.15%)</title><rect x="95.7317%" y="437" width="0.1524%" height="15" fill="rgb(246,65,34)" fg:x="628" fg:w="1"/><text x="95.9817%" y="447.50"></text></g><g><title>deno`v8::internal::compiler::ObjectData::AsHeapObject (1 samples, 0.15%)</title><rect x="95.7317%" y="421" width="0.1524%" height="15" fill="rgb(231,100,33)" fg:x="628" fg:w="1"/><text x="95.9817%" y="431.50"></text></g><g><title>deno`v8::internal::compiler::ObjectData::IsMap (1 samples, 0.15%)</title><rect x="95.7317%" y="405" width="0.1524%" height="15" fill="rgb(228,126,14)" fg:x="628" fg:w="1"/><text x="95.9817%" y="415.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::ComputeSchedulePhase&gt; (1 samples, 0.15%)</title><rect x="95.8841%" y="629" width="0.1524%" height="15" fill="rgb(215,173,21)" fg:x="629" fg:w="1"/><text x="96.1341%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::Scheduler::ComputeSchedule(v8::internal::Zone*, v8::internal::compiler::Graph*, v8::base::Flags (1 samples, 0.15%)</title><rect x="95.8841%" y="613" width="0.1524%" height="15" fill="rgb(210,6,40)" fg:x="629" fg:w="1"/><text x="96.1341%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::Scheduler::BuildCFG (1 samples, 0.15%)</title><rect x="95.8841%" y="597" width="0.1524%" height="15" fill="rgb(212,48,18)" fg:x="629" fg:w="1"/><text x="96.1341%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::CFGBuilder::BuildBlocksForSuccessors (1 samples, 0.15%)</title><rect x="95.8841%" y="581" width="0.1524%" height="15" fill="rgb(230,214,11)" fg:x="629" fg:w="1"/><text x="96.1341%" y="591.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::DecompressionOptimizationPhase&gt; (1 samples, 0.15%)</title><rect x="96.0366%" y="629" width="0.1524%" height="15" fill="rgb(254,105,39)" fg:x="630" fg:w="1"/><text x="96.2866%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::DecompressionOptimizationPhase::Run (1 samples, 0.15%)</title><rect x="96.0366%" y="613" width="0.1524%" height="15" fill="rgb(245,158,5)" fg:x="630" fg:w="1"/><text x="96.2866%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::DecompressionOptimizer::Reduce (1 samples, 0.15%)</title><rect x="96.0366%" y="597" width="0.1524%" height="15" fill="rgb(249,208,11)" fg:x="630" fg:w="1"/><text x="96.2866%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::DecompressionOptimizer::MarkNodeInputs (1 samples, 0.15%)</title><rect x="96.0366%" y="581" width="0.1524%" height="15" fill="rgb(210,39,28)" fg:x="630" fg:w="1"/><text x="96.2866%" y="591.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EarlyOptimizationPhase&gt; (1 samples, 0.15%)</title><rect x="96.1890%" y="629" width="0.1524%" height="15" fill="rgb(211,56,53)" fg:x="631" fg:w="1"/><text x="96.4390%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::EarlyOptimizationPhase::Run (1 samples, 0.15%)</title><rect x="96.1890%" y="613" width="0.1524%" height="15" fill="rgb(226,201,30)" fg:x="631" fg:w="1"/><text x="96.4390%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.15%)</title><rect x="96.1890%" y="597" width="0.1524%" height="15" fill="rgb(239,101,34)" fg:x="631" fg:w="1"/><text x="96.4390%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.15%)</title><rect x="96.1890%" y="581" width="0.1524%" height="15" fill="rgb(226,209,5)" fg:x="631" fg:w="1"/><text x="96.4390%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.15%)</title><rect x="96.1890%" y="565" width="0.1524%" height="15" fill="rgb(250,105,47)" fg:x="631" fg:w="1"/><text x="96.4390%" y="575.50"></text></g><g><title>deno`v8::internal::compiler::DeadCodeElimination::ReduceNode (1 samples, 0.15%)</title><rect x="96.1890%" y="549" width="0.1524%" height="15" fill="rgb(230,72,3)" fg:x="631" fg:w="1"/><text x="96.4390%" y="559.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceNode (3 samples, 0.46%)</title><rect x="96.3415%" y="597" width="0.4573%" height="15" fill="rgb(232,218,39)" fg:x="632" fg:w="3"/><text x="96.5915%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceTop (3 samples, 0.46%)</title><rect x="96.3415%" y="581" width="0.4573%" height="15" fill="rgb(248,166,6)" fg:x="632" fg:w="3"/><text x="96.5915%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.15%)</title><rect x="96.6463%" y="565" width="0.1524%" height="15" fill="rgb(247,89,20)" fg:x="634" fg:w="1"/><text x="96.8963%" y="575.50"></text></g><g><title>deno`v8::internal::compiler::DeadCodeElimination::ReduceNode (1 samples, 0.15%)</title><rect x="96.6463%" y="549" width="0.1524%" height="15" fill="rgb(248,130,54)" fg:x="634" fg:w="1"/><text x="96.8963%" y="559.50"></text></g><g><title>deno`v8::internal::compiler::GraphTrimmer::TrimGraph (1 samples, 0.15%)</title><rect x="96.7988%" y="597" width="0.1524%" height="15" fill="rgb(234,196,4)" fg:x="635" fg:w="1"/><text x="97.0488%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::Scheduler::ComputeSchedule(v8::internal::Zone*, v8::internal::compiler::Graph*, v8::base::Flags (1 samples, 0.15%)</title><rect x="96.9512%" y="597" width="0.1524%" height="15" fill="rgb(250,143,31)" fg:x="636" fg:w="1"/><text x="97.2012%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::Scheduler::ScheduleLate (1 samples, 0.15%)</title><rect x="96.9512%" y="581" width="0.1524%" height="15" fill="rgb(211,110,34)" fg:x="636" fg:w="1"/><text x="97.2012%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::ScheduleLateNodeVisitor::ProcessQueue (1 samples, 0.15%)</title><rect x="96.9512%" y="565" width="0.1524%" height="15" fill="rgb(215,124,48)" fg:x="636" fg:w="1"/><text x="97.2012%" y="575.50"></text></g><g><title>deno`v8::internal::compiler::ScheduleLateNodeVisitor::ScheduleNode (1 samples, 0.15%)</title><rect x="96.9512%" y="549" width="0.1524%" height="15" fill="rgb(216,46,13)" fg:x="636" fg:w="1"/><text x="97.2012%" y="559.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EffectControlLinearizationPhase&gt; (6 samples, 0.91%)</title><rect x="96.3415%" y="629" width="0.9146%" height="15" fill="rgb(205,184,25)" fg:x="632" fg:w="6"/><text x="96.5915%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::EffectControlLinearizationPhase::Run (6 samples, 0.91%)</title><rect x="96.3415%" y="613" width="0.9146%" height="15" fill="rgb(228,1,10)" fg:x="632" fg:w="6"/><text x="96.5915%" y="623.50"></text></g><g><title>deno`void v8::internal::compiler::GraphTrimmer::TrimGraph&lt;std::__1::__wrap_iter&lt;v8::internal::compiler::Node**&gt; &gt;(std::__1::__wrap_iter&lt;v8::internal::compiler::Node**&gt;, std::__1::__wrap_iter (1 samples, 0.15%)</title><rect x="97.1037%" y="597" width="0.1524%" height="15" fill="rgb(213,116,27)" fg:x="637" fg:w="1"/><text x="97.3537%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::SparseSidetable&lt;v8::internal::compiler::VariableTracker::State&gt;::Get (1 samples, 0.15%)</title><rect x="97.2561%" y="565" width="0.1524%" height="15" fill="rgb(241,95,50)" fg:x="638" fg:w="1"/><text x="97.5061%" y="575.50"></text></g><g><title>deno`v8::internal::compiler::EffectGraphReducer::ReduceFrom (2 samples, 0.30%)</title><rect x="97.2561%" y="597" width="0.3049%" height="15" fill="rgb(238,48,32)" fg:x="638" fg:w="2"/><text x="97.5061%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::EscapeAnalysis::Reduce (2 samples, 0.30%)</title><rect x="97.2561%" y="581" width="0.3049%" height="15" fill="rgb(235,113,49)" fg:x="638" fg:w="2"/><text x="97.5061%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::VariableTracker::MergeInputs (1 samples, 0.15%)</title><rect x="97.4085%" y="565" width="0.1524%" height="15" fill="rgb(205,127,43)" fg:x="639" fg:w="1"/><text x="97.6585%" y="575.50"></text></g><g><title>deno`v8::internal::compiler::EscapeAnalysisReducer::Finalize (1 samples, 0.15%)</title><rect x="97.5610%" y="581" width="0.1524%" height="15" fill="rgb(250,162,2)" fg:x="640" fg:w="1"/><text x="97.8110%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::OperationTyper::OperationTyper (1 samples, 0.15%)</title><rect x="97.5610%" y="565" width="0.1524%" height="15" fill="rgb(220,13,41)" fg:x="640" fg:w="1"/><text x="97.8110%" y="575.50"></text></g><g><title>deno`v8::internal::compiler::Type::Union (1 samples, 0.15%)</title><rect x="97.5610%" y="549" width="0.1524%" height="15" fill="rgb(249,221,25)" fg:x="640" fg:w="1"/><text x="97.8110%" y="559.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EscapeAnalysisPhase&gt; (4 samples, 0.61%)</title><rect x="97.2561%" y="629" width="0.6098%" height="15" fill="rgb(215,208,19)" fg:x="638" fg:w="4"/><text x="97.5061%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::EscapeAnalysisPhase::Run (4 samples, 0.61%)</title><rect x="97.2561%" y="613" width="0.6098%" height="15" fill="rgb(236,175,2)" fg:x="638" fg:w="4"/><text x="97.5061%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceNode (2 samples, 0.30%)</title><rect x="97.5610%" y="597" width="0.3049%" height="15" fill="rgb(241,52,2)" fg:x="640" fg:w="2"/><text x="97.8110%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.15%)</title><rect x="97.7134%" y="581" width="0.1524%" height="15" fill="rgb(248,140,14)" fg:x="641" fg:w="1"/><text x="97.9634%" y="591.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LateOptimizationPhase&gt; (1 samples, 0.15%)</title><rect x="97.8659%" y="629" width="0.1524%" height="15" fill="rgb(253,22,42)" fg:x="642" fg:w="1"/><text x="98.1159%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::LateOptimizationPhase::Run (1 samples, 0.15%)</title><rect x="97.8659%" y="613" width="0.1524%" height="15" fill="rgb(234,61,47)" fg:x="642" fg:w="1"/><text x="98.1159%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.15%)</title><rect x="97.8659%" y="597" width="0.1524%" height="15" fill="rgb(208,226,15)" fg:x="642" fg:w="1"/><text x="98.1159%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.15%)</title><rect x="97.8659%" y="581" width="0.1524%" height="15" fill="rgb(217,221,4)" fg:x="642" fg:w="1"/><text x="98.1159%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.15%)</title><rect x="97.8659%" y="565" width="0.1524%" height="15" fill="rgb(212,174,34)" fg:x="642" fg:w="1"/><text x="98.1159%" y="575.50"></text></g><g><title>deno`v8::internal::compiler::LateEscapeAnalysis::Reduce (1 samples, 0.15%)</title><rect x="97.8659%" y="549" width="0.1524%" height="15" fill="rgb(253,83,4)" fg:x="642" fg:w="1"/><text x="98.1159%" y="559.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LoadEliminationPhase&gt; (1 samples, 0.15%)</title><rect x="98.0183%" y="629" width="0.1524%" height="15" fill="rgb(250,195,49)" fg:x="643" fg:w="1"/><text x="98.2683%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::LoadEliminationPhase::Run (1 samples, 0.15%)</title><rect x="98.0183%" y="613" width="0.1524%" height="15" fill="rgb(241,192,25)" fg:x="643" fg:w="1"/><text x="98.2683%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.15%)</title><rect x="98.0183%" y="597" width="0.1524%" height="15" fill="rgb(208,124,10)" fg:x="643" fg:w="1"/><text x="98.2683%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.15%)</title><rect x="98.0183%" y="581" width="0.1524%" height="15" fill="rgb(222,33,0)" fg:x="643" fg:w="1"/><text x="98.2683%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::GraphTrimmer::TrimGraph (1 samples, 0.15%)</title><rect x="98.1707%" y="597" width="0.1524%" height="15" fill="rgb(234,209,28)" fg:x="644" fg:w="1"/><text x="98.4207%" y="607.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LoopPeelingPhase&gt; (2 samples, 0.30%)</title><rect x="98.1707%" y="629" width="0.3049%" height="15" fill="rgb(224,11,23)" fg:x="644" fg:w="2"/><text x="98.4207%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::LoopPeelingPhase::Run (2 samples, 0.30%)</title><rect x="98.1707%" y="613" width="0.3049%" height="15" fill="rgb(232,99,1)" fg:x="644" fg:w="2"/><text x="98.4207%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::LoopFinder::BuildLoopTree (1 samples, 0.15%)</title><rect x="98.3232%" y="597" width="0.1524%" height="15" fill="rgb(237,95,45)" fg:x="645" fg:w="1"/><text x="98.5732%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::LoopFinderImpl::PropagateBackward (1 samples, 0.15%)</title><rect x="98.3232%" y="581" width="0.1524%" height="15" fill="rgb(208,109,11)" fg:x="645" fg:w="1"/><text x="98.5732%" y="591.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::MachineOperatorOptimizationPhase&gt; (1 samples, 0.15%)</title><rect x="98.4756%" y="629" width="0.1524%" height="15" fill="rgb(216,190,48)" fg:x="646" fg:w="1"/><text x="98.7256%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::MachineOperatorOptimizationPhase::Run (1 samples, 0.15%)</title><rect x="98.4756%" y="613" width="0.1524%" height="15" fill="rgb(251,171,36)" fg:x="646" fg:w="1"/><text x="98.7256%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.15%)</title><rect x="98.4756%" y="597" width="0.1524%" height="15" fill="rgb(230,62,22)" fg:x="646" fg:w="1"/><text x="98.7256%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.15%)</title><rect x="98.4756%" y="581" width="0.1524%" height="15" fill="rgb(225,114,35)" fg:x="646" fg:w="1"/><text x="98.7256%" y="591.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::TypedLoweringPhase&gt; (1 samples, 0.15%)</title><rect x="98.6280%" y="629" width="0.1524%" height="15" fill="rgb(215,118,42)" fg:x="647" fg:w="1"/><text x="98.8780%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::TypedLoweringPhase::Run (1 samples, 0.15%)</title><rect x="98.6280%" y="613" width="0.1524%" height="15" fill="rgb(243,119,21)" fg:x="647" fg:w="1"/><text x="98.8780%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.15%)</title><rect x="98.6280%" y="597" width="0.1524%" height="15" fill="rgb(252,177,53)" fg:x="647" fg:w="1"/><text x="98.8780%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.15%)</title><rect x="98.6280%" y="581" width="0.1524%" height="15" fill="rgb(237,209,29)" fg:x="647" fg:w="1"/><text x="98.8780%" y="591.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::TyperPhase, v8::internal::compiler::Typer*&gt; (1 samples, 0.15%)</title><rect x="98.7805%" y="629" width="0.1524%" height="15" fill="rgb(212,65,23)" fg:x="648" fg:w="1"/><text x="99.0305%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::TyperPhase::Run (1 samples, 0.15%)</title><rect x="98.7805%" y="613" width="0.1524%" height="15" fill="rgb(230,222,46)" fg:x="648" fg:w="1"/><text x="99.0305%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::Typer::Run(v8::internal::ZoneVector (1 samples, 0.15%)</title><rect x="98.7805%" y="597" width="0.1524%" height="15" fill="rgb(215,135,32)" fg:x="648" fg:w="1"/><text x="99.0305%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.15%)</title><rect x="98.7805%" y="581" width="0.1524%" height="15" fill="rgb(246,101,22)" fg:x="648" fg:w="1"/><text x="99.0305%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.15%)</title><rect x="98.7805%" y="565" width="0.1524%" height="15" fill="rgb(206,107,13)" fg:x="648" fg:w="1"/><text x="99.0305%" y="575.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InstructionSelectionPhase, v8::internal::compiler::Linkage*&amp;&gt; (1 samples, 0.15%)</title><rect x="98.9329%" y="613" width="0.1524%" height="15" fill="rgb(250,100,44)" fg:x="649" fg:w="1"/><text x="99.1829%" y="623.50"></text></g><g><title>deno`v8::internal::compiler::InstructionSelectionPhase::Run (1 samples, 0.15%)</title><rect x="98.9329%" y="597" width="0.1524%" height="15" fill="rgb(231,147,38)" fg:x="649" fg:w="1"/><text x="99.1829%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::InstructionSelector::SelectInstructions (1 samples, 0.15%)</title><rect x="98.9329%" y="581" width="0.1524%" height="15" fill="rgb(229,8,40)" fg:x="649" fg:w="1"/><text x="99.1829%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::InstructionSelector::VisitControl (1 samples, 0.15%)</title><rect x="98.9329%" y="565" width="0.1524%" height="15" fill="rgb(221,135,30)" fg:x="649" fg:w="1"/><text x="99.1829%" y="575.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AllocateFPRegistersPhase&lt;v8::internal::compiler::LinearScanAllocator&gt; &gt; (1 samples, 0.15%)</title><rect x="99.0854%" y="597" width="0.1524%" height="15" fill="rgb(249,193,18)" fg:x="650" fg:w="1"/><text x="99.3354%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::LinearScanAllocator::AllocateRegisters (1 samples, 0.15%)</title><rect x="99.0854%" y="581" width="0.1524%" height="15" fill="rgb(209,133,39)" fg:x="650" fg:w="1"/><text x="99.3354%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::LinearScanAllocator::ForwardStateTo (1 samples, 0.15%)</title><rect x="99.0854%" y="565" width="0.1524%" height="15" fill="rgb(232,100,14)" fg:x="650" fg:w="1"/><text x="99.3354%" y="575.50"></text></g><g><title>deno`v8::internal::compiler::LinearScanAllocator::AllocateBlockedReg (1 samples, 0.15%)</title><rect x="99.3902%" y="565" width="0.1524%" height="15" fill="rgb(224,185,1)" fg:x="652" fg:w="1"/><text x="99.6402%" y="575.50"></text></g><g><title>deno`v8::internal::compiler::LinearScanAllocator::UpdateDeferredFixedRanges (1 samples, 0.15%)</title><rect x="99.5427%" y="565" width="0.1524%" height="15" fill="rgb(223,139,8)" fg:x="653" fg:w="1"/><text x="99.7927%" y="575.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AllocateGeneralRegistersPhase&lt;v8::internal::compiler::LinearScanAllocator&gt; &gt; (4 samples, 0.61%)</title><rect x="99.2378%" y="597" width="0.6098%" height="15" fill="rgb(232,213,38)" fg:x="651" fg:w="4"/><text x="99.4878%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::LinearScanAllocator::AllocateRegisters (4 samples, 0.61%)</title><rect x="99.2378%" y="581" width="0.6098%" height="15" fill="rgb(207,94,22)" fg:x="651" fg:w="4"/><text x="99.4878%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::RegisterAllocator::SplitAndSpillRangesDefinedByMemoryOperand (1 samples, 0.15%)</title><rect x="99.6951%" y="565" width="0.1524%" height="15" fill="rgb(219,183,54)" fg:x="654" fg:w="1"/><text x="99.9451%" y="575.50"></text></g><g><title>all (656 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(216,185,54)" fg:x="0" fg:w="656"/><text x="0.2500%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (31 samples, 4.73%)</title><rect x="95.2744%" y="773" width="4.7256%" height="15" fill="rgb(254,217,39)" fg:x="625" fg:w="31"/><text x="95.5244%" y="783.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (31 samples, 4.73%)</title><rect x="95.2744%" y="757" width="4.7256%" height="15" fill="rgb(240,178,23)" fg:x="625" fg:w="31"/><text x="95.5244%" y="767.50">libsys..</text></g><g><title>deno`v8::base::ThreadEntry (31 samples, 4.73%)</title><rect x="95.2744%" y="741" width="4.7256%" height="15" fill="rgb(218,11,47)" fg:x="625" fg:w="31"/><text x="95.5244%" y="751.50">deno`v..</text></g><g><title>deno`v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (31 samples, 4.73%)</title><rect x="95.2744%" y="725" width="4.7256%" height="15" fill="rgb(218,51,51)" fg:x="625" fg:w="31"/><text x="95.5244%" y="735.50">deno`v..</text></g><g><title>deno`v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (31 samples, 4.73%)</title><rect x="95.2744%" y="709" width="4.7256%" height="15" fill="rgb(238,126,27)" fg:x="625" fg:w="31"/><text x="95.5244%" y="719.50">deno`v..</text></g><g><title>deno`v8::internal::OptimizingCompileDispatcher::CompileNext (31 samples, 4.73%)</title><rect x="95.2744%" y="693" width="4.7256%" height="15" fill="rgb(249,202,22)" fg:x="625" fg:w="31"/><text x="95.5244%" y="703.50">deno`v..</text></g><g><title>deno`v8::internal::OptimizedCompilationJob::ExecuteJob (31 samples, 4.73%)</title><rect x="95.2744%" y="677" width="4.7256%" height="15" fill="rgb(254,195,49)" fg:x="625" fg:w="31"/><text x="95.5244%" y="687.50">deno`v..</text></g><g><title>deno`v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (31 samples, 4.73%)</title><rect x="95.2744%" y="661" width="4.7256%" height="15" fill="rgb(208,123,14)" fg:x="625" fg:w="31"/><text x="95.5244%" y="671.50">deno`v..</text></g><g><title>deno`v8::internal::compiler::PipelineImpl::OptimizeGraph (27 samples, 4.12%)</title><rect x="95.8841%" y="645" width="4.1159%" height="15" fill="rgb(224,200,8)" fg:x="629" fg:w="27"/><text x="96.1341%" y="655.50">deno..</text></g><g><title>deno`v8::internal::compiler::PipelineImpl::SelectInstructions (7 samples, 1.07%)</title><rect x="98.9329%" y="629" width="1.0671%" height="15" fill="rgb(217,61,36)" fg:x="649" fg:w="7"/><text x="99.1829%" y="639.50"></text></g><g><title>deno`v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (6 samples, 0.91%)</title><rect x="99.0854%" y="613" width="0.9146%" height="15" fill="rgb(206,35,45)" fg:x="650" fg:w="6"/><text x="99.3354%" y="623.50"></text></g><g><title>deno`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::OptimizeMovesPhase&gt; (1 samples, 0.15%)</title><rect x="99.8476%" y="597" width="0.1524%" height="15" fill="rgb(217,65,33)" fg:x="655" fg:w="1"/><text x="100.0976%" y="607.50"></text></g><g><title>deno`v8::internal::compiler::MoveOptimizer::Run (1 samples, 0.15%)</title><rect x="99.8476%" y="581" width="0.1524%" height="15" fill="rgb(222,158,48)" fg:x="655" fg:w="1"/><text x="100.0976%" y="591.50"></text></g><g><title>deno`v8::internal::compiler::MoveOptimizer::MigrateMoves (1 samples, 0.15%)</title><rect x="99.8476%" y="565" width="0.1524%" height="15" fill="rgb(254,2,54)" fg:x="655" fg:w="1"/><text x="100.0976%" y="575.50"></text></g></svg></svg>